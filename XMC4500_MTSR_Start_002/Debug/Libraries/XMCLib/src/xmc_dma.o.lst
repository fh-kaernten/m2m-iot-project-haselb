   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_dma.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_DMA_GetEventStatus:
  24              	.LFB128:
  25              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
   2:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
   3:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   4:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2015-06-20 
   5:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
   6:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   7:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
   8:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   9:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  10:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015, Infineon Technologies AG
  11:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.                        
  12:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *                                             
  13:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * following conditions are met:   
  15:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  16:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer.                        
  18:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  19:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  22:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  25:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  33:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
  36:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  37:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  38:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  39:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  40:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  41:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  49:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  51:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  52:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
  53:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  54:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  55:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  56:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  57:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  58:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  59:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  60:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  61:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  62:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  63:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  64:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  65:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  66:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
  68:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  70:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
  71:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  72:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
  73:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  74:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  75:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  76:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  77:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  78:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  79:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  81:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  82:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  83:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
  84:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  85:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  86:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  87:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
  88:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  89:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  90:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
  91:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  92:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  93:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  94:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
  95:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
  96:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #endif
  97:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
  98:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
  99:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 100:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 101:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 102:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 103:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 104:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 105:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 106:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 107:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 108:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 109:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 110:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 111:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 112:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 113:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 114:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 115:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 116:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 117:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 118:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 119:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 120:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 121:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 122:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 123:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 124:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 125:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 126:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 127:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 128:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 129:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 130:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 131:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 132:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 133:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 134:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 135:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 136:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 137:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 138:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 139:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 140:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 141:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 142:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 143:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 144:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 145:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 146:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 147:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 148:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 149:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 150:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 151:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 152:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 153:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 155:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 157:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 158:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 159:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 160:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 161:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 162:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 163:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 164:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 165:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 166:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 167:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 168:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 169:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 170:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 171:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 172:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 173:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 174:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 176:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 177:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 182:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 183:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 184:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 185:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 186:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 187:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 188:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 189:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 190:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 191:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 192:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 193:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 194:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 196:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 197:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 198:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 199:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 200:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 201:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 202:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 203:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 204:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 205:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 206:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 207:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 208:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 210:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 211:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 212:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 213:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 214:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 215:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 216:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 217:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 218:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 219:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 220:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 221:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 222:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 223:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 224:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 225:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 226:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 227:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 228:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 229:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 230:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 231:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 233:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 234:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 235:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 236:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 237:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 238:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 239:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 240:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 241:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 242:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 243:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 244:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 245:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 246:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 247:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 248:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 249:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 250:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 251:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 252:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 253:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 254:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 255:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 256:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 257:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 258:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 259:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 260:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  
 262:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 263:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 264:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 265:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 266:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 267:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 268:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 269:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 270:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 271:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 272:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 273:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 274:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 275:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 276:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 277:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 278:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 279:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 280:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 281:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 282:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 284:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 285:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 286:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 287:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 288:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 289:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 290:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 291:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 292:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 293:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 294:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 295:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 296:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 297:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 298:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 299:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 300:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 301:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 302:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 303:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 304:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 305:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 306:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 307:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 308:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 309:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 310:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 311:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 312:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 313:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 314:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 315:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 316:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 317:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 318:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 319:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 320:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 321:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 322:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 323:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 324:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 325:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 326:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 327:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma push
 328:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma anon_unions
 329:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 330:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning 586
 331:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 332:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 333:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 334:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 335:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 336:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 337:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 338:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 339:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 340:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 342:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   union
 343:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   {
 344:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 345:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     {
 346:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 348:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 349:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 350:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 351:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 353:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 354:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 355:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 356:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 357:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 358:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 359:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 360:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 361:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     };
 362:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 363:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   };
 364:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 365:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 366:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 367:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 368:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 369:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 370:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 371:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 372:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 373:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 374:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 375:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 376:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   union
 377:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   {
 378:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 379:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 380:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     {
 381:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 382:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 383:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 384:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 386:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 388:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             
 391:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 392:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;                             
 393:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     };
 394:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   };
 395:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 396:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 397:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 398:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 399:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   
 400:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   union
 401:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   {
 402:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 403:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 404:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     {
 405:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 406:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     };
 408:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   };
 409:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 410:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   union
 411:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   {
 412:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 413:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 414:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     {
 415:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 417:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****     };
 418:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   };
 419:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   
 420:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [1-204
 421:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type */
 422:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority */
 423:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface */
 424:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request */
 425:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface */
 426:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request */
 427:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 428:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 429:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 430:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 431:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma pop
 432:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 433:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning restore
 434:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 435:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 436:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 437:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 438:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 439:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 440:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 441:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 442:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 443:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 444:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 445:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 446:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 447:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 448:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 449:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 450:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 451:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 452:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 453:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 454:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 455:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 456:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 457:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 458:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 459:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 460:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 461:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 462:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 463:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 464:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 465:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 466:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 467:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 468:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 469:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 470:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 471:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 472:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 473:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 474:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 475:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 476:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 477:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 478:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 479:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 480:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 481:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 482:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 483:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 484:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 485:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 486:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 487:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 488:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 489:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 490:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 491:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 492:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 493:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 494:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 495:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 496:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 497:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 498:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 499:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 500:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 501:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 502:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 504:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 508:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 511:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 514:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 515:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 516:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 517:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 518:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 519:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 520:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 521:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 522:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 523:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 524:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 525:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 526:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
  26              	 .loc 1 526 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
 527:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  42              	 .loc 1 527 0
  43 0008 7B68     	 ldr r3,[r7,#4]
  44 000a D3F86033 	 ldr r3,[r3,#864]
 528:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
  45              	 .loc 1 528 0
  46 000e 1846     	 mov r0,r3
  47 0010 0C37     	 adds r7,r7,#12
  48              	.LCFI3:
  49              	 .cfi_def_cfa_offset 4
  50 0012 BD46     	 mov sp,r7
  51              	.LCFI4:
  52              	 .cfi_def_cfa_register 13
  53              	 
  54 0014 5DF8047B 	 ldr r7,[sp],#4
  55              	.LCFI5:
  56              	 .cfi_restore 7
  57              	 .cfi_def_cfa_offset 0
  58 0018 7047     	 bx lr
  59              	 .cfi_endproc
  60              	.LFE128:
  62 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	XMC_DMA_GetChannelsTransferCompleteStatus:
  68              	.LFB129:
 529:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 530:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 531:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 532:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 533:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 534:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 535:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 536:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 537:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 538:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 539:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 541:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
  69              	 .loc 1 541 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI6:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI7:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI8:
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
 542:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  85              	 .loc 1 542 0
  86 0008 7B68     	 ldr r3,[r7,#4]
  87 000a D3F8E832 	 ldr r3,[r3,#744]
 543:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
  88              	 .loc 1 543 0
  89 000e 1846     	 mov r0,r3
  90 0010 0C37     	 adds r7,r7,#12
  91              	.LCFI9:
  92              	 .cfi_def_cfa_offset 4
  93 0012 BD46     	 mov sp,r7
  94              	.LCFI10:
  95              	 .cfi_def_cfa_register 13
  96              	 
  97 0014 5DF8047B 	 ldr r7,[sp],#4
  98              	.LCFI11:
  99              	 .cfi_restore 7
 100              	 .cfi_def_cfa_offset 0
 101 0018 7047     	 bx lr
 102              	 .cfi_endproc
 103              	.LFE129:
 105 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 106              	 .align 2
 107              	 .thumb
 108              	 .thumb_func
 110              	XMC_DMA_GetChannelsBlockCompleteStatus:
 111              	.LFB130:
 544:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 548:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 551:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 554:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 556:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 112              	 .loc 1 556 0
 113              	 .cfi_startproc
 114              	 
 115              	 
 116              	 
 117 0000 80B4     	 push {r7}
 118              	.LCFI12:
 119              	 .cfi_def_cfa_offset 4
 120              	 .cfi_offset 7,-4
 121 0002 83B0     	 sub sp,sp,#12
 122              	.LCFI13:
 123              	 .cfi_def_cfa_offset 16
 124 0004 00AF     	 add r7,sp,#0
 125              	.LCFI14:
 126              	 .cfi_def_cfa_register 7
 127 0006 7860     	 str r0,[r7,#4]
 557:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 128              	 .loc 1 557 0
 129 0008 7B68     	 ldr r3,[r7,#4]
 130 000a D3F8F032 	 ldr r3,[r3,#752]
 558:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
 131              	 .loc 1 558 0
 132 000e 1846     	 mov r0,r3
 133 0010 0C37     	 adds r7,r7,#12
 134              	.LCFI15:
 135              	 .cfi_def_cfa_offset 4
 136 0012 BD46     	 mov sp,r7
 137              	.LCFI16:
 138              	 .cfi_def_cfa_register 13
 139              	 
 140 0014 5DF8047B 	 ldr r7,[sp],#4
 141              	.LCFI17:
 142              	 .cfi_restore 7
 143              	 .cfi_def_cfa_offset 0
 144 0018 7047     	 bx lr
 145              	 .cfi_endproc
 146              	.LFE130:
 148 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 149              	 .align 2
 150              	 .thumb
 151              	 .thumb_func
 153              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 154              	.LFB131:
 559:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 563:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 566:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 569:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 570:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 571:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 572:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 573:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 574:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 575:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 155              	 .loc 1 575 0
 156              	 .cfi_startproc
 157              	 
 158              	 
 159              	 
 160 0000 80B4     	 push {r7}
 161              	.LCFI18:
 162              	 .cfi_def_cfa_offset 4
 163              	 .cfi_offset 7,-4
 164 0002 83B0     	 sub sp,sp,#12
 165              	.LCFI19:
 166              	 .cfi_def_cfa_offset 16
 167 0004 00AF     	 add r7,sp,#0
 168              	.LCFI20:
 169              	 .cfi_def_cfa_register 7
 170 0006 7860     	 str r0,[r7,#4]
 576:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 171              	 .loc 1 576 0
 172 0008 7B68     	 ldr r3,[r7,#4]
 173 000a D3F8F832 	 ldr r3,[r3,#760]
 577:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
 174              	 .loc 1 577 0
 175 000e 1846     	 mov r0,r3
 176 0010 0C37     	 adds r7,r7,#12
 177              	.LCFI21:
 178              	 .cfi_def_cfa_offset 4
 179 0012 BD46     	 mov sp,r7
 180              	.LCFI22:
 181              	 .cfi_def_cfa_register 13
 182              	 
 183 0014 5DF8047B 	 ldr r7,[sp],#4
 184              	.LCFI23:
 185              	 .cfi_restore 7
 186              	 .cfi_def_cfa_offset 0
 187 0018 7047     	 bx lr
 188              	 .cfi_endproc
 189              	.LFE131:
 191 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 192              	 .align 2
 193              	 .thumb
 194              	 .thumb_func
 196              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 197              	.LFB132:
 578:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 579:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 580:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 581:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 582:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 583:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 584:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 585:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 586:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 587:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 588:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 589:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 590:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 591:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 592:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 593:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 594:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 198              	 .loc 1 594 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI24:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 83B0     	 sub sp,sp,#12
 208              	.LCFI25:
 209              	 .cfi_def_cfa_offset 16
 210 0004 00AF     	 add r7,sp,#0
 211              	.LCFI26:
 212              	 .cfi_def_cfa_register 7
 213 0006 7860     	 str r0,[r7,#4]
 595:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 214              	 .loc 1 595 0
 215 0008 7B68     	 ldr r3,[r7,#4]
 216 000a D3F80033 	 ldr r3,[r3,#768]
 596:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
 217              	 .loc 1 596 0
 218 000e 1846     	 mov r0,r3
 219 0010 0C37     	 adds r7,r7,#12
 220              	.LCFI27:
 221              	 .cfi_def_cfa_offset 4
 222 0012 BD46     	 mov sp,r7
 223              	.LCFI28:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 0014 5DF8047B 	 ldr r7,[sp],#4
 227              	.LCFI29:
 228              	 .cfi_restore 7
 229              	 .cfi_def_cfa_offset 0
 230 0018 7047     	 bx lr
 231              	 .cfi_endproc
 232              	.LFE132:
 234 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 235              	 .align 2
 236              	 .thumb
 237              	 .thumb_func
 239              	XMC_DMA_GetChannelsErrorStatus:
 240              	.LFB133:
 597:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** 
 598:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** /**
 599:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 600:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 601:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 602:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 603:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 604:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  *
 605:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 606:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 607:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 609:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** {
 241              	 .loc 1 609 0
 242              	 .cfi_startproc
 243              	 
 244              	 
 245              	 
 246 0000 80B4     	 push {r7}
 247              	.LCFI30:
 248              	 .cfi_def_cfa_offset 4
 249              	 .cfi_offset 7,-4
 250 0002 83B0     	 sub sp,sp,#12
 251              	.LCFI31:
 252              	 .cfi_def_cfa_offset 16
 253 0004 00AF     	 add r7,sp,#0
 254              	.LCFI32:
 255              	 .cfi_def_cfa_register 7
 256 0006 7860     	 str r0,[r7,#4]
 610:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 257              	 .loc 1 610 0
 258 0008 7B68     	 ldr r3,[r7,#4]
 259 000a D3F80833 	 ldr r3,[r3,#776]
 611:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_dma.h **** }
 260              	 .loc 1 611 0
 261 000e 1846     	 mov r0,r3
 262 0010 0C37     	 adds r7,r7,#12
 263              	.LCFI33:
 264              	 .cfi_def_cfa_offset 4
 265 0012 BD46     	 mov sp,r7
 266              	.LCFI34:
 267              	 .cfi_def_cfa_register 13
 268              	 
 269 0014 5DF8047B 	 ldr r7,[sp],#4
 270              	.LCFI35:
 271              	 .cfi_restore 7
 272              	 .cfi_def_cfa_offset 0
 273 0018 7047     	 bx lr
 274              	 .cfi_endproc
 275              	.LFE133:
 277              	 .comm dma0_event_handlers,32,4
 278              	 .comm dma1_event_handlers,16,4
 279 001a 00BF     	 .section .text.XMC_DMA_Init,"ax",%progbits
 280              	 .align 2
 281              	 .global XMC_DMA_Init
 282              	 .thumb
 283              	 .thumb_func
 285              	XMC_DMA_Init:
 286              	.LFB161:
 287              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2015-06-20 
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_dma.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_dma.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_dma.c ****  *
  40:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_dma.c ****  *
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  45:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *
  51:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  56:../Libraries/XMCLib/src/xmc_dma.c ****  *
  57:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  58:../Libraries/XMCLib/src/xmc_dma.c ****  */
  59:../Libraries/XMCLib/src/xmc_dma.c **** 
  60:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_dma.c **** 
  64:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  65:../Libraries/XMCLib/src/xmc_dma.c **** 
  66:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  67:../Libraries/XMCLib/src/xmc_dma.c **** 
  68:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  69:../Libraries/XMCLib/src/xmc_dma.c **** 
  70:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  71:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  72:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  73:../Libraries/XMCLib/src/xmc_dma.c **** 
  74:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  75:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  76:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  77:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  78:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  79:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
  80:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
  81:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
  82:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
  83:../Libraries/XMCLib/src/xmc_dma.c **** 
  84:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  85:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
  86:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  87:../Libraries/XMCLib/src/xmc_dma.c **** 
  88:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  89:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
  90:../Libraries/XMCLib/src/xmc_dma.c **** #endif
  91:../Libraries/XMCLib/src/xmc_dma.c **** 
  92:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
  93:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
  94:../Libraries/XMCLib/src/xmc_dma.c **** #endif
  95:../Libraries/XMCLib/src/xmc_dma.c ****  
  96:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  97:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
  98:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  99:../Libraries/XMCLib/src/xmc_dma.c **** 
 100:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 101:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 102:../Libraries/XMCLib/src/xmc_dma.c **** {
 288              	 .loc 2 102 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292 0000 80B5     	 push {r7,lr}
 293              	.LCFI36:
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 82B0     	 sub sp,sp,#8
 298              	.LCFI37:
 299              	 .cfi_def_cfa_offset 16
 300 0004 00AF     	 add r7,sp,#0
 301              	.LCFI38:
 302              	 .cfi_def_cfa_register 7
 303 0006 7860     	 str r0,[r7,#4]
 103:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 304              	 .loc 2 103 0
 305 0008 7868     	 ldr r0,[r7,#4]
 306 000a FFF7FEFF 	 bl XMC_DMA_Enable
 104:../Libraries/XMCLib/src/xmc_dma.c **** }
 307              	 .loc 2 104 0
 308 000e 0837     	 adds r7,r7,#8
 309              	.LCFI39:
 310              	 .cfi_def_cfa_offset 8
 311 0010 BD46     	 mov sp,r7
 312              	.LCFI40:
 313              	 .cfi_def_cfa_register 13
 314              	 
 315 0012 80BD     	 pop {r7,pc}
 316              	 .cfi_endproc
 317              	.LFE161:
 319              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 320              	 .align 2
 321              	 .global XMC_DMA_Enable
 322              	 .thumb
 323              	 .thumb_func
 325              	XMC_DMA_Enable:
 326              	.LFB162:
 105:../Libraries/XMCLib/src/xmc_dma.c **** 
 106:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 107:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 108:../Libraries/XMCLib/src/xmc_dma.c **** {
 327              	 .loc 2 108 0
 328              	 .cfi_startproc
 329              	 
 330              	 
 331 0000 80B5     	 push {r7,lr}
 332              	.LCFI41:
 333              	 .cfi_def_cfa_offset 8
 334              	 .cfi_offset 7,-8
 335              	 .cfi_offset 14,-4
 336 0002 82B0     	 sub sp,sp,#8
 337              	.LCFI42:
 338              	 .cfi_def_cfa_offset 16
 339 0004 00AF     	 add r7,sp,#0
 340              	.LCFI43:
 341              	 .cfi_def_cfa_register 7
 342 0006 7860     	 str r0,[r7,#4]
 109:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 110:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 343              	 .loc 2 110 0
 344 0008 7B68     	 ldr r3,[r7,#4]
 345 000a 084A     	 ldr r2,.L17
 346 000c 9342     	 cmp r3,r2
 347 000e 03D1     	 bne .L15
 111:../Libraries/XMCLib/src/xmc_dma.c ****   {
 112:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 113:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 114:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 115:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 116:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 348              	 .loc 2 116 0
 349 0010 0748     	 ldr r0,.L17+4
 350 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 351 0016 02E0     	 b .L16
 352              	.L15:
 117:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 118:../Libraries/XMCLib/src/xmc_dma.c ****   }
 119:../Libraries/XMCLib/src/xmc_dma.c ****   else
 120:../Libraries/XMCLib/src/xmc_dma.c ****   {
 121:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 122:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 123:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 124:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 353              	 .loc 2 124 0
 354 0018 0648     	 ldr r0,.L17+8
 355 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 356              	.L16:
 125:../Libraries/XMCLib/src/xmc_dma.c ****   }
 126:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 127:../Libraries/XMCLib/src/xmc_dma.c **** 
 128:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 357              	 .loc 2 128 0
 358 001e 7B68     	 ldr r3,[r7,#4]
 359 0020 0122     	 movs r2,#1
 360 0022 C3F89823 	 str r2,[r3,#920]
 129:../Libraries/XMCLib/src/xmc_dma.c **** }
 361              	 .loc 2 129 0
 362 0026 0837     	 adds r7,r7,#8
 363              	.LCFI44:
 364              	 .cfi_def_cfa_offset 8
 365 0028 BD46     	 mov sp,r7
 366              	.LCFI45:
 367              	 .cfi_def_cfa_register 13
 368              	 
 369 002a 80BD     	 pop {r7,pc}
 370              	.L18:
 371              	 .align 2
 372              	.L17:
 373 002c 00400150 	 .word 1342259200
 374 0030 10000020 	 .word 536870928
 375 0034 20000020 	 .word 536870944
 376              	 .cfi_endproc
 377              	.LFE162:
 379              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 380              	 .align 2
 381              	 .global XMC_DMA_Disable
 382              	 .thumb
 383              	 .thumb_func
 385              	XMC_DMA_Disable:
 386              	.LFB163:
 130:../Libraries/XMCLib/src/xmc_dma.c **** 
 131:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 132:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 133:../Libraries/XMCLib/src/xmc_dma.c **** {
 387              	 .loc 2 133 0
 388              	 .cfi_startproc
 389              	 
 390              	 
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI46:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 82B0     	 sub sp,sp,#8
 397              	.LCFI47:
 398              	 .cfi_def_cfa_offset 16
 399 0004 00AF     	 add r7,sp,#0
 400              	.LCFI48:
 401              	 .cfi_def_cfa_register 7
 402 0006 7860     	 str r0,[r7,#4]
 134:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 403              	 .loc 2 134 0
 404 0008 7B68     	 ldr r3,[r7,#4]
 405 000a 0022     	 movs r2,#0
 406 000c C3F89823 	 str r2,[r3,#920]
 135:../Libraries/XMCLib/src/xmc_dma.c **** 
 136:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 137:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 407              	 .loc 2 137 0
 408 0010 7B68     	 ldr r3,[r7,#4]
 409 0012 064A     	 ldr r2,.L22
 410 0014 9342     	 cmp r3,r2
 411 0016 03D1     	 bne .L20
 138:../Libraries/XMCLib/src/xmc_dma.c ****   {
 139:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 140:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 412              	 .loc 2 140 0
 413 0018 0548     	 ldr r0,.L22+4
 414 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 415 001e 02E0     	 b .L19
 416              	.L20:
 141:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 142:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 143:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 144:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 145:../Libraries/XMCLib/src/xmc_dma.c ****   }
 146:../Libraries/XMCLib/src/xmc_dma.c ****   else
 147:../Libraries/XMCLib/src/xmc_dma.c ****   {
 148:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 417              	 .loc 2 148 0
 418 0020 0448     	 ldr r0,.L22+8
 419 0022 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 420              	.L19:
 149:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 150:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 151:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 152:../Libraries/XMCLib/src/xmc_dma.c ****   }
 153:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 154:../Libraries/XMCLib/src/xmc_dma.c **** }
 421              	 .loc 2 154 0
 422 0026 0837     	 adds r7,r7,#8
 423              	.LCFI49:
 424              	 .cfi_def_cfa_offset 8
 425 0028 BD46     	 mov sp,r7
 426              	.LCFI50:
 427              	 .cfi_def_cfa_register 13
 428              	 
 429 002a 80BD     	 pop {r7,pc}
 430              	.L23:
 431              	 .align 2
 432              	.L22:
 433 002c 00400150 	 .word 1342259200
 434 0030 10000020 	 .word 536870928
 435 0034 20000020 	 .word 536870944
 436              	 .cfi_endproc
 437              	.LFE163:
 439              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 440              	 .align 2
 441              	 .global XMC_DMA_IsEnabled
 442              	 .thumb
 443              	 .thumb_func
 445              	XMC_DMA_IsEnabled:
 446              	.LFB164:
 155:../Libraries/XMCLib/src/xmc_dma.c **** 
 156:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 157:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 158:../Libraries/XMCLib/src/xmc_dma.c **** {
 447              	 .loc 2 158 0
 448              	 .cfi_startproc
 449              	 
 450              	 
 451 0000 80B5     	 push {r7,lr}
 452              	.LCFI51:
 453              	 .cfi_def_cfa_offset 8
 454              	 .cfi_offset 7,-8
 455              	 .cfi_offset 14,-4
 456 0002 84B0     	 sub sp,sp,#16
 457              	.LCFI52:
 458              	 .cfi_def_cfa_offset 24
 459 0004 00AF     	 add r7,sp,#0
 460              	.LCFI53:
 461              	 .cfi_def_cfa_register 7
 462 0006 7860     	 str r0,[r7,#4]
 159:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 160:../Libraries/XMCLib/src/xmc_dma.c **** 
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 162:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 463              	 .loc 2 162 0
 464 0008 7B68     	 ldr r3,[r7,#4]
 465 000a 1F4A     	 ldr r2,.L31
 466 000c 9342     	 cmp r3,r2
 467 000e 11D1     	 bne .L25
 163:../Libraries/XMCLib/src/xmc_dma.c ****   {
 164:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 165:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 468              	 .loc 2 165 0
 469 0010 1E48     	 ldr r0,.L31+4
 470 0012 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 471 0016 0346     	 mov r3,r0
 472 0018 002B     	 cmp r3,#0
 473 001a 14BF     	 ite ne
 474 001c 0123     	 movne r3,#1
 475 001e 0023     	 moveq r3,#0
 476 0020 DBB2     	 uxtb r3,r3
 477 0022 83F00103 	 eor r3,r3,#1
 478 0026 DBB2     	 uxtb r3,r3
 479 0028 FB73     	 strb r3,[r7,#15]
 480 002a FB7B     	 ldrb r3,[r7,#15]
 481 002c 03F00103 	 and r3,r3,#1
 482 0030 FB73     	 strb r3,[r7,#15]
 483 0032 10E0     	 b .L26
 484              	.L25:
 166:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 167:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 168:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 169:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 170:../Libraries/XMCLib/src/xmc_dma.c ****   }
 171:../Libraries/XMCLib/src/xmc_dma.c ****   else
 172:../Libraries/XMCLib/src/xmc_dma.c ****   {
 173:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 485              	 .loc 2 173 0
 486 0034 1648     	 ldr r0,.L31+8
 487 0036 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 488 003a 0346     	 mov r3,r0
 489 003c 002B     	 cmp r3,#0
 490 003e 14BF     	 ite ne
 491 0040 0123     	 movne r3,#1
 492 0042 0023     	 moveq r3,#0
 493 0044 DBB2     	 uxtb r3,r3
 494 0046 83F00103 	 eor r3,r3,#1
 495 004a DBB2     	 uxtb r3,r3
 496 004c FB73     	 strb r3,[r7,#15]
 497 004e FB7B     	 ldrb r3,[r7,#15]
 498 0050 03F00103 	 and r3,r3,#1
 499 0054 FB73     	 strb r3,[r7,#15]
 500              	.L26:
 174:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 175:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 177:../Libraries/XMCLib/src/xmc_dma.c ****   }
 178:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 179:../Libraries/XMCLib/src/xmc_dma.c **** 
 180:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 181:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 501              	 .loc 2 181 0
 502 0056 FB7B     	 ldrb r3,[r7,#15]
 503 0058 002B     	 cmp r3,#0
 504 005a 0FD0     	 beq .L27
 182:../Libraries/XMCLib/src/xmc_dma.c ****   {
 183:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 505              	 .loc 2 183 0
 506 005c FB7B     	 ldrb r3,[r7,#15]
 507 005e 002B     	 cmp r3,#0
 508 0060 06D0     	 beq .L28
 509              	 .loc 2 183 0 is_stmt 0 discriminator 1
 510 0062 7B68     	 ldr r3,[r7,#4]
 511 0064 D3F89833 	 ldr r3,[r3,#920]
 512 0068 002B     	 cmp r3,#0
 513 006a 01D0     	 beq .L28
 514              	 .loc 2 183 0 discriminator 3
 515 006c 0123     	 movs r3,#1
 516 006e 00E0     	 b .L29
 517              	.L28:
 518              	 .loc 2 183 0 discriminator 4
 519 0070 0023     	 movs r3,#0
 520              	.L29:
 521              	 .loc 2 183 0 discriminator 6
 522 0072 FB73     	 strb r3,[r7,#15]
 523 0074 FB7B     	 ldrb r3,[r7,#15]
 524 0076 03F00103 	 and r3,r3,#1
 525 007a FB73     	 strb r3,[r7,#15]
 526              	.L27:
 184:../Libraries/XMCLib/src/xmc_dma.c ****   }
 185:../Libraries/XMCLib/src/xmc_dma.c **** 
 186:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 527              	 .loc 2 186 0 is_stmt 1
 528 007c FB7B     	 ldrb r3,[r7,#15]
 187:../Libraries/XMCLib/src/xmc_dma.c **** }
 529              	 .loc 2 187 0
 530 007e 1846     	 mov r0,r3
 531 0080 1037     	 adds r7,r7,#16
 532              	.LCFI54:
 533              	 .cfi_def_cfa_offset 8
 534 0082 BD46     	 mov sp,r7
 535              	.LCFI55:
 536              	 .cfi_def_cfa_register 13
 537              	 
 538 0084 80BD     	 pop {r7,pc}
 539              	.L32:
 540 0086 00BF     	 .align 2
 541              	.L31:
 542 0088 00400150 	 .word 1342259200
 543 008c 10000020 	 .word 536870928
 544 0090 20000020 	 .word 536870944
 545              	 .cfi_endproc
 546              	.LFE164:
 548              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 549              	 .align 2
 550              	 .global XMC_DMA_EnableRequestLine
 551              	 .thumb
 552              	 .thumb_func
 554              	XMC_DMA_EnableRequestLine:
 555              	.LFB165:
 188:../Libraries/XMCLib/src/xmc_dma.c **** 
 189:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 190:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 191:../Libraries/XMCLib/src/xmc_dma.c **** {
 556              	 .loc 2 191 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560              	 
 561 0000 80B4     	 push {r7}
 562              	.LCFI56:
 563              	 .cfi_def_cfa_offset 4
 564              	 .cfi_offset 7,-4
 565 0002 83B0     	 sub sp,sp,#12
 566              	.LCFI57:
 567              	 .cfi_def_cfa_offset 16
 568 0004 00AF     	 add r7,sp,#0
 569              	.LCFI58:
 570              	 .cfi_def_cfa_register 7
 571 0006 7860     	 str r0,[r7,#4]
 572 0008 0B46     	 mov r3,r1
 573 000a FB70     	 strb r3,[r7,#3]
 574 000c 1346     	 mov r3,r2
 575 000e BB70     	 strb r3,[r7,#2]
 192:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 193:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 576              	 .loc 2 193 0
 577 0010 7B68     	 ldr r3,[r7,#4]
 578 0012 1F4A     	 ldr r2,.L36
 579 0014 9342     	 cmp r3,r2
 580 0016 1BD1     	 bne .L34
 194:../Libraries/XMCLib/src/xmc_dma.c ****   {
 195:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 196:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 581              	 .loc 2 196 0
 582 0018 1E48     	 ldr r0,.L36+4
 583 001a 1E4B     	 ldr r3,.L36+4
 584 001c 9A68     	 ldr r2,[r3,#8]
 585 001e FB78     	 ldrb r3,[r7,#3]
 586 0020 9B00     	 lsls r3,r3,#2
 587 0022 1946     	 mov r1,r3
 588 0024 0F23     	 movs r3,#15
 589 0026 8B40     	 lsls r3,r3,r1
 590 0028 DB43     	 mvns r3,r3
 591 002a 1A40     	 ands r2,r2,r3
 197:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 592              	 .loc 2 197 0
 593 002c BB78     	 ldrb r3,[r7,#2]
 594 002e F978     	 ldrb r1,[r7,#3]
 595 0030 8900     	 lsls r1,r1,#2
 596 0032 8B40     	 lsls r3,r3,r1
 196:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 597              	 .loc 2 196 0
 598 0034 1343     	 orrs r3,r3,r2
 599 0036 8360     	 str r3,[r0,#8]
 198:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 600              	 .loc 2 198 0
 601 0038 1649     	 ldr r1,.L36+4
 602 003a 164B     	 ldr r3,.L36+4
 603 003c 1A69     	 ldr r2,[r3,#16]
 604 003e FB78     	 ldrb r3,[r7,#3]
 605 0040 03F00703 	 and r3,r3,#7
 606 0044 0120     	 movs r0,#1
 607 0046 00FA03F3 	 lsl r3,r0,r3
 608 004a 1343     	 orrs r3,r3,r2
 609 004c 0B61     	 str r3,[r1,#16]
 610 004e 19E0     	 b .L33
 611              	.L34:
 199:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 200:../Libraries/XMCLib/src/xmc_dma.c ****   }
 201:../Libraries/XMCLib/src/xmc_dma.c ****   else
 202:../Libraries/XMCLib/src/xmc_dma.c ****   {
 203:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 612              	 .loc 2 203 0
 613 0050 1048     	 ldr r0,.L36+4
 614 0052 104B     	 ldr r3,.L36+4
 615 0054 DA68     	 ldr r2,[r3,#12]
 616 0056 FB78     	 ldrb r3,[r7,#3]
 617 0058 9B00     	 lsls r3,r3,#2
 618 005a 1946     	 mov r1,r3
 619 005c 0F23     	 movs r3,#15
 620 005e 8B40     	 lsls r3,r3,r1
 621 0060 DB43     	 mvns r3,r3
 622 0062 1A40     	 ands r2,r2,r3
 204:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 623              	 .loc 2 204 0
 624 0064 BB78     	 ldrb r3,[r7,#2]
 625 0066 F978     	 ldrb r1,[r7,#3]
 626 0068 8900     	 lsls r1,r1,#2
 627 006a 8B40     	 lsls r3,r3,r1
 203:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 628              	 .loc 2 203 0
 629 006c 1343     	 orrs r3,r3,r2
 630 006e C360     	 str r3,[r0,#12]
 205:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 631              	 .loc 2 205 0
 632 0070 0849     	 ldr r1,.L36+4
 633 0072 084B     	 ldr r3,.L36+4
 634 0074 1A69     	 ldr r2,[r3,#16]
 635 0076 FB78     	 ldrb r3,[r7,#3]
 636 0078 4FF48070 	 mov r0,#256
 637 007c 00FA03F3 	 lsl r3,r0,r3
 638 0080 1343     	 orrs r3,r3,r2
 639 0082 0B61     	 str r3,[r1,#16]
 640              	.L33:
 206:../Libraries/XMCLib/src/xmc_dma.c ****   }
 207:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 208:../Libraries/XMCLib/src/xmc_dma.c **** }
 641              	 .loc 2 208 0
 642 0084 0C37     	 adds r7,r7,#12
 643              	.LCFI59:
 644              	 .cfi_def_cfa_offset 4
 645 0086 BD46     	 mov sp,r7
 646              	.LCFI60:
 647              	 .cfi_def_cfa_register 13
 648              	 
 649 0088 5DF8047B 	 ldr r7,[sp],#4
 650              	.LCFI61:
 651              	 .cfi_restore 7
 652              	 .cfi_def_cfa_offset 0
 653 008c 7047     	 bx lr
 654              	.L37:
 655 008e 00BF     	 .align 2
 656              	.L36:
 657 0090 00400150 	 .word 1342259200
 658 0094 00490050 	 .word 1342195968
 659              	 .cfi_endproc
 660              	.LFE165:
 662              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 663              	 .align 2
 664              	 .global XMC_DMA_DisableRequestLine
 665              	 .thumb
 666              	 .thumb_func
 668              	XMC_DMA_DisableRequestLine:
 669              	.LFB166:
 209:../Libraries/XMCLib/src/xmc_dma.c **** 
 210:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 211:../Libraries/XMCLib/src/xmc_dma.c **** {
 670              	 .loc 2 211 0
 671              	 .cfi_startproc
 672              	 
 673              	 
 674              	 
 675 0000 80B4     	 push {r7}
 676              	.LCFI62:
 677              	 .cfi_def_cfa_offset 4
 678              	 .cfi_offset 7,-4
 679 0002 83B0     	 sub sp,sp,#12
 680              	.LCFI63:
 681              	 .cfi_def_cfa_offset 16
 682 0004 00AF     	 add r7,sp,#0
 683              	.LCFI64:
 684              	 .cfi_def_cfa_register 7
 685 0006 7860     	 str r0,[r7,#4]
 686 0008 0B46     	 mov r3,r1
 687 000a FB70     	 strb r3,[r7,#3]
 212:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 213:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 688              	 .loc 2 213 0
 689 000c 7B68     	 ldr r3,[r7,#4]
 690 000e 0F4A     	 ldr r2,.L41
 691 0010 9342     	 cmp r3,r2
 692 0012 0AD1     	 bne .L39
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 216:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 693              	 .loc 2 216 0
 694 0014 0E49     	 ldr r1,.L41+4
 695 0016 0E4B     	 ldr r3,.L41+4
 696 0018 1A69     	 ldr r2,[r3,#16]
 697 001a FB78     	 ldrb r3,[r7,#3]
 698 001c 0120     	 movs r0,#1
 699 001e 00FA03F3 	 lsl r3,r0,r3
 700 0022 DB43     	 mvns r3,r3
 701 0024 1340     	 ands r3,r3,r2
 702 0026 0B61     	 str r3,[r1,#16]
 703 0028 0AE0     	 b .L38
 704              	.L39:
 217:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 218:../Libraries/XMCLib/src/xmc_dma.c ****   }
 219:../Libraries/XMCLib/src/xmc_dma.c ****   else
 220:../Libraries/XMCLib/src/xmc_dma.c ****   {
 221:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 705              	 .loc 2 221 0
 706 002a 0949     	 ldr r1,.L41+4
 707 002c 084B     	 ldr r3,.L41+4
 708 002e 1A69     	 ldr r2,[r3,#16]
 709 0030 FB78     	 ldrb r3,[r7,#3]
 710 0032 4FF48070 	 mov r0,#256
 711 0036 00FA03F3 	 lsl r3,r0,r3
 712 003a DB43     	 mvns r3,r3
 713 003c 1340     	 ands r3,r3,r2
 714 003e 0B61     	 str r3,[r1,#16]
 715              	.L38:
 222:../Libraries/XMCLib/src/xmc_dma.c ****   }
 223:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 224:../Libraries/XMCLib/src/xmc_dma.c **** }
 716              	 .loc 2 224 0
 717 0040 0C37     	 adds r7,r7,#12
 718              	.LCFI65:
 719              	 .cfi_def_cfa_offset 4
 720 0042 BD46     	 mov sp,r7
 721              	.LCFI66:
 722              	 .cfi_def_cfa_register 13
 723              	 
 724 0044 5DF8047B 	 ldr r7,[sp],#4
 725              	.LCFI67:
 726              	 .cfi_restore 7
 727              	 .cfi_def_cfa_offset 0
 728 0048 7047     	 bx lr
 729              	.L42:
 730 004a 00BF     	 .align 2
 731              	.L41:
 732 004c 00400150 	 .word 1342259200
 733 0050 00490050 	 .word 1342195968
 734              	 .cfi_endproc
 735              	.LFE166:
 737              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 738              	 .align 2
 739              	 .global XMC_DMA_ClearRequestLine
 740              	 .thumb
 741              	 .thumb_func
 743              	XMC_DMA_ClearRequestLine:
 744              	.LFB167:
 225:../Libraries/XMCLib/src/xmc_dma.c **** 
 226:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 227:../Libraries/XMCLib/src/xmc_dma.c **** {
 745              	 .loc 2 227 0
 746              	 .cfi_startproc
 747              	 
 748              	 
 749              	 
 750 0000 80B4     	 push {r7}
 751              	.LCFI68:
 752              	 .cfi_def_cfa_offset 4
 753              	 .cfi_offset 7,-4
 754 0002 83B0     	 sub sp,sp,#12
 755              	.LCFI69:
 756              	 .cfi_def_cfa_offset 16
 757 0004 00AF     	 add r7,sp,#0
 758              	.LCFI70:
 759              	 .cfi_def_cfa_register 7
 760 0006 7860     	 str r0,[r7,#4]
 761 0008 0B46     	 mov r3,r1
 762 000a FB70     	 strb r3,[r7,#3]
 228:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 229:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 763              	 .loc 2 229 0
 764 000c 7B68     	 ldr r3,[r7,#4]
 765 000e 184A     	 ldr r2,.L46
 766 0010 9342     	 cmp r3,r2
 767 0012 13D1     	 bne .L44
 230:../Libraries/XMCLib/src/xmc_dma.c ****   {
 231:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 232:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 768              	 .loc 2 232 0
 769 0014 1749     	 ldr r1,.L46+4
 770 0016 174B     	 ldr r3,.L46+4
 771 0018 1A69     	 ldr r2,[r3,#16]
 772 001a FB78     	 ldrb r3,[r7,#3]
 773 001c 0120     	 movs r0,#1
 774 001e 00FA03F3 	 lsl r3,r0,r3
 775 0022 DB43     	 mvns r3,r3
 776 0024 1340     	 ands r3,r3,r2
 777 0026 0B61     	 str r3,[r1,#16]
 233:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 778              	 .loc 2 233 0
 779 0028 1249     	 ldr r1,.L46+4
 780 002a 124B     	 ldr r3,.L46+4
 781 002c 1A69     	 ldr r2,[r3,#16]
 782 002e FB78     	 ldrb r3,[r7,#3]
 783 0030 0120     	 movs r0,#1
 784 0032 00FA03F3 	 lsl r3,r0,r3
 785 0036 1343     	 orrs r3,r3,r2
 786 0038 0B61     	 str r3,[r1,#16]
 787 003a 14E0     	 b .L43
 788              	.L44:
 234:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 235:../Libraries/XMCLib/src/xmc_dma.c ****   }
 236:../Libraries/XMCLib/src/xmc_dma.c ****   else
 237:../Libraries/XMCLib/src/xmc_dma.c ****   {
 238:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 789              	 .loc 2 238 0
 790 003c 0D49     	 ldr r1,.L46+4
 791 003e 0D4B     	 ldr r3,.L46+4
 792 0040 1A69     	 ldr r2,[r3,#16]
 793 0042 FB78     	 ldrb r3,[r7,#3]
 794 0044 4FF48070 	 mov r0,#256
 795 0048 00FA03F3 	 lsl r3,r0,r3
 796 004c DB43     	 mvns r3,r3
 797 004e 1340     	 ands r3,r3,r2
 798 0050 0B61     	 str r3,[r1,#16]
 239:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 799              	 .loc 2 239 0
 800 0052 0849     	 ldr r1,.L46+4
 801 0054 074B     	 ldr r3,.L46+4
 802 0056 1A69     	 ldr r2,[r3,#16]
 803 0058 FB78     	 ldrb r3,[r7,#3]
 804 005a 4FF48070 	 mov r0,#256
 805 005e 00FA03F3 	 lsl r3,r0,r3
 806 0062 1343     	 orrs r3,r3,r2
 807 0064 0B61     	 str r3,[r1,#16]
 808              	.L43:
 240:../Libraries/XMCLib/src/xmc_dma.c ****   }
 241:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 242:../Libraries/XMCLib/src/xmc_dma.c **** }
 809              	 .loc 2 242 0
 810 0066 0C37     	 adds r7,r7,#12
 811              	.LCFI71:
 812              	 .cfi_def_cfa_offset 4
 813 0068 BD46     	 mov sp,r7
 814              	.LCFI72:
 815              	 .cfi_def_cfa_register 13
 816              	 
 817 006a 5DF8047B 	 ldr r7,[sp],#4
 818              	.LCFI73:
 819              	 .cfi_restore 7
 820              	 .cfi_def_cfa_offset 0
 821 006e 7047     	 bx lr
 822              	.L47:
 823              	 .align 2
 824              	.L46:
 825 0070 00400150 	 .word 1342259200
 826 0074 00490050 	 .word 1342195968
 827              	 .cfi_endproc
 828              	.LFE167:
 830              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 831              	 .align 2
 832              	 .global XMC_DMA_GetOverrunStatus
 833              	 .thumb
 834              	 .thumb_func
 836              	XMC_DMA_GetOverrunStatus:
 837              	.LFB168:
 243:../Libraries/XMCLib/src/xmc_dma.c **** 
 244:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 245:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 246:../Libraries/XMCLib/src/xmc_dma.c **** {
 838              	 .loc 2 246 0
 839              	 .cfi_startproc
 840              	 
 841              	 
 842              	 
 843 0000 80B4     	 push {r7}
 844              	.LCFI74:
 845              	 .cfi_def_cfa_offset 4
 846              	 .cfi_offset 7,-4
 847 0002 85B0     	 sub sp,sp,#20
 848              	.LCFI75:
 849              	 .cfi_def_cfa_offset 24
 850 0004 00AF     	 add r7,sp,#0
 851              	.LCFI76:
 852              	 .cfi_def_cfa_register 7
 853 0006 7860     	 str r0,[r7,#4]
 854 0008 0B46     	 mov r3,r1
 855 000a FB70     	 strb r3,[r7,#3]
 247:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 248:../Libraries/XMCLib/src/xmc_dma.c **** 
 249:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 250:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 856              	 .loc 2 250 0
 857 000c 7B68     	 ldr r3,[r7,#4]
 858 000e 124A     	 ldr r2,.L52
 859 0010 9342     	 cmp r3,r2
 860 0012 0CD1     	 bne .L49
 251:../Libraries/XMCLib/src/xmc_dma.c ****   {
 252:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 253:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 861              	 .loc 2 253 0
 862 0014 114B     	 ldr r3,.L52+4
 863 0016 1A68     	 ldr r2,[r3]
 864 0018 FB78     	 ldrb r3,[r7,#3]
 865 001a 22FA03F3 	 lsr r3,r2,r3
 866 001e 03F00103 	 and r3,r3,#1
 867 0022 002B     	 cmp r3,#0
 868 0024 14BF     	 ite ne
 869 0026 0123     	 movne r3,#1
 870 0028 0023     	 moveq r3,#0
 871 002a FB73     	 strb r3,[r7,#15]
 872 002c 0CE0     	 b .L50
 873              	.L49:
 254:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 255:../Libraries/XMCLib/src/xmc_dma.c ****   }
 256:../Libraries/XMCLib/src/xmc_dma.c ****   else
 257:../Libraries/XMCLib/src/xmc_dma.c ****   {
 258:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 874              	 .loc 2 258 0
 875 002e 0B4B     	 ldr r3,.L52+4
 876 0030 1A68     	 ldr r2,[r3]
 877 0032 FB78     	 ldrb r3,[r7,#3]
 878 0034 4FF48071 	 mov r1,#256
 879 0038 01FA03F3 	 lsl r3,r1,r3
 880 003c 1340     	 ands r3,r3,r2
 881 003e 002B     	 cmp r3,#0
 882 0040 14BF     	 ite ne
 883 0042 0123     	 movne r3,#1
 884 0044 0023     	 moveq r3,#0
 885 0046 FB73     	 strb r3,[r7,#15]
 886              	.L50:
 259:../Libraries/XMCLib/src/xmc_dma.c ****   }
 260:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 261:../Libraries/XMCLib/src/xmc_dma.c **** 
 262:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 887              	 .loc 2 262 0
 888 0048 FB7B     	 ldrb r3,[r7,#15]
 263:../Libraries/XMCLib/src/xmc_dma.c **** }
 889              	 .loc 2 263 0
 890 004a 1846     	 mov r0,r3
 891 004c 1437     	 adds r7,r7,#20
 892              	.LCFI77:
 893              	 .cfi_def_cfa_offset 4
 894 004e BD46     	 mov sp,r7
 895              	.LCFI78:
 896              	 .cfi_def_cfa_register 13
 897              	 
 898 0050 5DF8047B 	 ldr r7,[sp],#4
 899              	.LCFI79:
 900              	 .cfi_restore 7
 901              	 .cfi_def_cfa_offset 0
 902 0054 7047     	 bx lr
 903              	.L53:
 904 0056 00BF     	 .align 2
 905              	.L52:
 906 0058 00400150 	 .word 1342259200
 907 005c 00490050 	 .word 1342195968
 908              	 .cfi_endproc
 909              	.LFE168:
 911              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 912              	 .align 2
 913              	 .global XMC_DMA_ClearOverrunStatus
 914              	 .thumb
 915              	 .thumb_func
 917              	XMC_DMA_ClearOverrunStatus:
 918              	.LFB169:
 264:../Libraries/XMCLib/src/xmc_dma.c **** 
 265:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 266:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 267:../Libraries/XMCLib/src/xmc_dma.c **** {
 919              	 .loc 2 267 0
 920              	 .cfi_startproc
 921              	 
 922              	 
 923              	 
 924 0000 80B4     	 push {r7}
 925              	.LCFI80:
 926              	 .cfi_def_cfa_offset 4
 927              	 .cfi_offset 7,-4
 928 0002 83B0     	 sub sp,sp,#12
 929              	.LCFI81:
 930              	 .cfi_def_cfa_offset 16
 931 0004 00AF     	 add r7,sp,#0
 932              	.LCFI82:
 933              	 .cfi_def_cfa_register 7
 934 0006 7860     	 str r0,[r7,#4]
 935 0008 0B46     	 mov r3,r1
 936 000a FB70     	 strb r3,[r7,#3]
 268:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 269:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 937              	 .loc 2 269 0
 938 000c 7B68     	 ldr r3,[r7,#4]
 939 000e 0E4A     	 ldr r2,.L57
 940 0010 9342     	 cmp r3,r2
 941 0012 09D1     	 bne .L55
 270:../Libraries/XMCLib/src/xmc_dma.c ****   {
 271:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 272:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR |= (uint32_t)(0x1UL << line);
 942              	 .loc 2 272 0
 943 0014 0D49     	 ldr r1,.L57+4
 944 0016 0D4B     	 ldr r3,.L57+4
 945 0018 5A68     	 ldr r2,[r3,#4]
 946 001a FB78     	 ldrb r3,[r7,#3]
 947 001c 0120     	 movs r0,#1
 948 001e 00FA03F3 	 lsl r3,r0,r3
 949 0022 1343     	 orrs r3,r3,r2
 950 0024 4B60     	 str r3,[r1,#4]
 951 0026 09E0     	 b .L54
 952              	.L55:
 273:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 274:../Libraries/XMCLib/src/xmc_dma.c ****   }
 275:../Libraries/XMCLib/src/xmc_dma.c ****   else
 276:../Libraries/XMCLib/src/xmc_dma.c ****   {
 277:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR |= (uint32_t)(0x100UL << line);
 953              	 .loc 2 277 0
 954 0028 0849     	 ldr r1,.L57+4
 955 002a 084B     	 ldr r3,.L57+4
 956 002c 5A68     	 ldr r2,[r3,#4]
 957 002e FB78     	 ldrb r3,[r7,#3]
 958 0030 4FF48070 	 mov r0,#256
 959 0034 00FA03F3 	 lsl r3,r0,r3
 960 0038 1343     	 orrs r3,r3,r2
 961 003a 4B60     	 str r3,[r1,#4]
 962              	.L54:
 278:../Libraries/XMCLib/src/xmc_dma.c ****   }
 279:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 280:../Libraries/XMCLib/src/xmc_dma.c **** }
 963              	 .loc 2 280 0
 964 003c 0C37     	 adds r7,r7,#12
 965              	.LCFI83:
 966              	 .cfi_def_cfa_offset 4
 967 003e BD46     	 mov sp,r7
 968              	.LCFI84:
 969              	 .cfi_def_cfa_register 13
 970              	 
 971 0040 5DF8047B 	 ldr r7,[sp],#4
 972              	.LCFI85:
 973              	 .cfi_restore 7
 974              	 .cfi_def_cfa_offset 0
 975 0044 7047     	 bx lr
 976              	.L58:
 977 0046 00BF     	 .align 2
 978              	.L57:
 979 0048 00400150 	 .word 1342259200
 980 004c 00490050 	 .word 1342195968
 981              	 .cfi_endproc
 982              	.LFE169:
 984              	 .section .text.XMC_DMA_CH_Enable,"ax",%progbits
 985              	 .align 2
 986              	 .global XMC_DMA_CH_Enable
 987              	 .thumb
 988              	 .thumb_func
 990              	XMC_DMA_CH_Enable:
 991              	.LFB170:
 281:../Libraries/XMCLib/src/xmc_dma.c **** 
 282:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable DMA channel */
 283:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Enable(XMC_DMA_t *const dma, const uint8_t channel)
 284:../Libraries/XMCLib/src/xmc_dma.c **** {
 992              	 .loc 2 284 0
 993              	 .cfi_startproc
 994              	 
 995              	 
 996              	 
 997 0000 80B4     	 push {r7}
 998              	.LCFI86:
 999              	 .cfi_def_cfa_offset 4
 1000              	 .cfi_offset 7,-4
 1001 0002 83B0     	 sub sp,sp,#12
 1002              	.LCFI87:
 1003              	 .cfi_def_cfa_offset 16
 1004 0004 00AF     	 add r7,sp,#0
 1005              	.LCFI88:
 1006              	 .cfi_def_cfa_register 7
 1007 0006 7860     	 str r0,[r7,#4]
 1008 0008 0B46     	 mov r3,r1
 1009 000a FB70     	 strb r3,[r7,#3]
 285:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x101UL << channel);
 1010              	 .loc 2 285 0
 1011 000c FB78     	 ldrb r3,[r7,#3]
 1012 000e 40F20112 	 movw r2,#257
 1013 0012 9A40     	 lsls r2,r2,r3
 1014 0014 7B68     	 ldr r3,[r7,#4]
 1015 0016 C3F8A023 	 str r2,[r3,#928]
 286:../Libraries/XMCLib/src/xmc_dma.c **** }
 1016              	 .loc 2 286 0
 1017 001a 0C37     	 adds r7,r7,#12
 1018              	.LCFI89:
 1019              	 .cfi_def_cfa_offset 4
 1020 001c BD46     	 mov sp,r7
 1021              	.LCFI90:
 1022              	 .cfi_def_cfa_register 13
 1023              	 
 1024 001e 5DF8047B 	 ldr r7,[sp],#4
 1025              	.LCFI91:
 1026              	 .cfi_restore 7
 1027              	 .cfi_def_cfa_offset 0
 1028 0022 7047     	 bx lr
 1029              	 .cfi_endproc
 1030              	.LFE170:
 1032              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 1033              	 .align 2
 1034              	 .global XMC_DMA_CH_Disable
 1035              	 .thumb
 1036              	 .thumb_func
 1038              	XMC_DMA_CH_Disable:
 1039              	.LFB171:
 287:../Libraries/XMCLib/src/xmc_dma.c **** 
 288:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 289:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 290:../Libraries/XMCLib/src/xmc_dma.c **** {
 1040              	 .loc 2 290 0
 1041              	 .cfi_startproc
 1042              	 
 1043              	 
 1044              	 
 1045 0000 80B4     	 push {r7}
 1046              	.LCFI92:
 1047              	 .cfi_def_cfa_offset 4
 1048              	 .cfi_offset 7,-4
 1049 0002 83B0     	 sub sp,sp,#12
 1050              	.LCFI93:
 1051              	 .cfi_def_cfa_offset 16
 1052 0004 00AF     	 add r7,sp,#0
 1053              	.LCFI94:
 1054              	 .cfi_def_cfa_register 7
 1055 0006 7860     	 str r0,[r7,#4]
 1056 0008 0B46     	 mov r3,r1
 1057 000a FB70     	 strb r3,[r7,#3]
 291:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 1058              	 .loc 2 291 0
 1059 000c FB78     	 ldrb r3,[r7,#3]
 1060 000e 4FF48072 	 mov r2,#256
 1061 0012 9A40     	 lsls r2,r2,r3
 1062 0014 7B68     	 ldr r3,[r7,#4]
 1063 0016 C3F8A023 	 str r2,[r3,#928]
 292:../Libraries/XMCLib/src/xmc_dma.c ****   while((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 1064              	 .loc 2 292 0
 1065 001a 00BF     	 nop
 1066              	.L61:
 1067              	 .loc 2 292 0 is_stmt 0 discriminator 1
 1068 001c 7B68     	 ldr r3,[r7,#4]
 1069 001e D3F8A023 	 ldr r2,[r3,#928]
 1070 0022 FB78     	 ldrb r3,[r7,#3]
 1071 0024 22FA03F3 	 lsr r3,r2,r3
 1072 0028 03F00103 	 and r3,r3,#1
 1073 002c 002B     	 cmp r3,#0
 1074 002e F5D1     	 bne .L61
 293:../Libraries/XMCLib/src/xmc_dma.c ****   {
 294:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 295:../Libraries/XMCLib/src/xmc_dma.c ****   }
 296:../Libraries/XMCLib/src/xmc_dma.c **** }
 1075              	 .loc 2 296 0 is_stmt 1
 1076 0030 0C37     	 adds r7,r7,#12
 1077              	.LCFI95:
 1078              	 .cfi_def_cfa_offset 4
 1079 0032 BD46     	 mov sp,r7
 1080              	.LCFI96:
 1081              	 .cfi_def_cfa_register 13
 1082              	 
 1083 0034 5DF8047B 	 ldr r7,[sp],#4
 1084              	.LCFI97:
 1085              	 .cfi_restore 7
 1086              	 .cfi_def_cfa_offset 0
 1087 0038 7047     	 bx lr
 1088              	 .cfi_endproc
 1089              	.LFE171:
 1091 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 1092              	 .align 2
 1093              	 .global XMC_DMA_CH_IsEnabled
 1094              	 .thumb
 1095              	 .thumb_func
 1097              	XMC_DMA_CH_IsEnabled:
 1098              	.LFB172:
 297:../Libraries/XMCLib/src/xmc_dma.c **** 
 298:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 299:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 300:../Libraries/XMCLib/src/xmc_dma.c **** {
 1099              	 .loc 2 300 0
 1100              	 .cfi_startproc
 1101              	 
 1102              	 
 1103              	 
 1104 0000 80B4     	 push {r7}
 1105              	.LCFI98:
 1106              	 .cfi_def_cfa_offset 4
 1107              	 .cfi_offset 7,-4
 1108 0002 83B0     	 sub sp,sp,#12
 1109              	.LCFI99:
 1110              	 .cfi_def_cfa_offset 16
 1111 0004 00AF     	 add r7,sp,#0
 1112              	.LCFI100:
 1113              	 .cfi_def_cfa_register 7
 1114 0006 7860     	 str r0,[r7,#4]
 1115 0008 0B46     	 mov r3,r1
 1116 000a FB70     	 strb r3,[r7,#3]
 301:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 1117              	 .loc 2 301 0
 1118 000c 7B68     	 ldr r3,[r7,#4]
 1119 000e D3F8A023 	 ldr r2,[r3,#928]
 1120 0012 FB78     	 ldrb r3,[r7,#3]
 1121 0014 22FA03F3 	 lsr r3,r2,r3
 1122 0018 03F00103 	 and r3,r3,#1
 1123 001c 002B     	 cmp r3,#0
 1124 001e 14BF     	 ite ne
 1125 0020 0123     	 movne r3,#1
 1126 0022 0023     	 moveq r3,#0
 1127 0024 DBB2     	 uxtb r3,r3
 302:../Libraries/XMCLib/src/xmc_dma.c **** }
 1128              	 .loc 2 302 0
 1129 0026 1846     	 mov r0,r3
 1130 0028 0C37     	 adds r7,r7,#12
 1131              	.LCFI101:
 1132              	 .cfi_def_cfa_offset 4
 1133 002a BD46     	 mov sp,r7
 1134              	.LCFI102:
 1135              	 .cfi_def_cfa_register 13
 1136              	 
 1137 002c 5DF8047B 	 ldr r7,[sp],#4
 1138              	.LCFI103:
 1139              	 .cfi_restore 7
 1140              	 .cfi_def_cfa_offset 0
 1141 0030 7047     	 bx lr
 1142              	 .cfi_endproc
 1143              	.LFE172:
 1145 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1146              	 .align 2
 1147              	 .global XMC_DMA_CH_Init
 1148              	 .thumb
 1149              	 .thumb_func
 1151              	XMC_DMA_CH_Init:
 1152              	.LFB173:
 303:../Libraries/XMCLib/src/xmc_dma.c **** 
 304:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 305:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 306:../Libraries/XMCLib/src/xmc_dma.c **** {
 1153              	 .loc 2 306 0
 1154              	 .cfi_startproc
 1155              	 
 1156              	 
 1157 0000 80B5     	 push {r7,lr}
 1158              	.LCFI104:
 1159              	 .cfi_def_cfa_offset 8
 1160              	 .cfi_offset 7,-8
 1161              	 .cfi_offset 14,-4
 1162 0002 86B0     	 sub sp,sp,#24
 1163              	.LCFI105:
 1164              	 .cfi_def_cfa_offset 32
 1165 0004 00AF     	 add r7,sp,#0
 1166              	.LCFI106:
 1167              	 .cfi_def_cfa_register 7
 1168 0006 F860     	 str r0,[r7,#12]
 1169 0008 0B46     	 mov r3,r1
 1170 000a 7A60     	 str r2,[r7,#4]
 1171 000c FB72     	 strb r3,[r7,#11]
 307:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 308:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 309:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 310:../Libraries/XMCLib/src/xmc_dma.c **** 
 311:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1172              	 .loc 2 311 0
 1173 000e F868     	 ldr r0,[r7,#12]
 1174 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1175 0014 0346     	 mov r3,r0
 1176 0016 002B     	 cmp r3,#0
 1177 0018 00F0F181 	 beq .L65
 312:../Libraries/XMCLib/src/xmc_dma.c ****   {
 313:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1178              	 .loc 2 313 0
 1179 001c FB7A     	 ldrb r3,[r7,#11]
 1180 001e F868     	 ldr r0,[r7,#12]
 1181 0020 1946     	 mov r1,r3
 1182 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1183 0026 0346     	 mov r3,r0
 1184 0028 83F00103 	 eor r3,r3,#1
 1185 002c DBB2     	 uxtb r3,r3
 1186 002e 002B     	 cmp r3,#0
 1187 0030 00F0E281 	 beq .L66
 314:../Libraries/XMCLib/src/xmc_dma.c ****     {
 315:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1188              	 .loc 2 315 0
 1189 0034 FB7A     	 ldrb r3,[r7,#11]
 1190 0036 7A68     	 ldr r2,[r7,#4]
 1191 0038 5268     	 ldr r2,[r2,#4]
 1192 003a F968     	 ldr r1,[r7,#12]
 1193 003c 5820     	 movs r0,#88
 1194 003e 00FB03F3 	 mul r3,r0,r3
 1195 0042 0B44     	 add r3,r3,r1
 1196 0044 1A60     	 str r2,[r3]
 316:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1197              	 .loc 2 316 0
 1198 0046 FB7A     	 ldrb r3,[r7,#11]
 1199 0048 7A68     	 ldr r2,[r7,#4]
 1200 004a 9268     	 ldr r2,[r2,#8]
 1201 004c F968     	 ldr r1,[r7,#12]
 1202 004e 5820     	 movs r0,#88
 1203 0050 00FB03F3 	 mul r3,r0,r3
 1204 0054 0B44     	 add r3,r3,r1
 1205 0056 0833     	 adds r3,r3,#8
 1206 0058 1A60     	 str r2,[r3]
 317:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1207              	 .loc 2 317 0
 1208 005a FB7A     	 ldrb r3,[r7,#11]
 1209 005c 7A68     	 ldr r2,[r7,#4]
 1210 005e D268     	 ldr r2,[r2,#12]
 1211 0060 1046     	 mov r0,r2
 1212 0062 FA68     	 ldr r2,[r7,#12]
 1213 0064 5821     	 movs r1,#88
 1214 0066 01FB03F3 	 mul r3,r1,r3
 1215 006a 1344     	 add r3,r3,r2
 1216 006c 1033     	 adds r3,r3,#16
 1217 006e 1860     	 str r0,[r3]
 318:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1218              	 .loc 2 318 0
 1219 0070 FB7A     	 ldrb r3,[r7,#11]
 1220 0072 7A68     	 ldr r2,[r7,#4]
 1221 0074 128B     	 ldrh r2,[r2,#24]
 1222 0076 1046     	 mov r0,r2
 1223 0078 FA68     	 ldr r2,[r7,#12]
 1224 007a 5821     	 movs r1,#88
 1225 007c 01FB03F3 	 mul r3,r1,r3
 1226 0080 1344     	 add r3,r3,r2
 1227 0082 1833     	 adds r3,r3,#24
 1228 0084 5860     	 str r0,[r3,#4]
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1229              	 .loc 2 319 0
 1230 0086 FB7A     	 ldrb r3,[r7,#11]
 1231 0088 7A68     	 ldr r2,[r7,#4]
 1232 008a 1268     	 ldr r2,[r2]
 1233 008c F968     	 ldr r1,[r7,#12]
 1234 008e 5820     	 movs r0,#88
 1235 0090 00FB03F3 	 mul r3,r0,r3
 1236 0094 0B44     	 add r3,r3,r1
 1237 0096 1833     	 adds r3,r3,#24
 1238 0098 1A60     	 str r2,[r3]
 320:../Libraries/XMCLib/src/xmc_dma.c **** 
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1239              	 .loc 2 321 0
 1240 009a FB7A     	 ldrb r3,[r7,#11]
 1241 009c 7A68     	 ldr r2,[r7,#4]
 1242 009e D27E     	 ldrb r2,[r2,#27]
 1243 00a0 42F44062 	 orr r2,r2,#3072
 1244 00a4 F968     	 ldr r1,[r7,#12]
 1245 00a6 5820     	 movs r0,#88
 1246 00a8 00FB03F3 	 mul r3,r0,r3
 1247 00ac 0B44     	 add r3,r3,r1
 1248 00ae 4033     	 adds r3,r3,#64
 1249 00b0 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 323:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 324:../Libraries/XMCLib/src/xmc_dma.c **** 
 325:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1250              	 .loc 2 325 0
 1251 00b2 FB68     	 ldr r3,[r7,#12]
 1252 00b4 B14A     	 ldr r2,.L92
 1253 00b6 9342     	 cmp r3,r2
 1254 00b8 16D1     	 bne .L67
 1255              	 .loc 2 325 0 is_stmt 0 discriminator 1
 1256 00ba FB7A     	 ldrb r3,[r7,#11]
 1257 00bc 012B     	 cmp r3,#1
 1258 00be 13D8     	 bhi .L67
 326:../Libraries/XMCLib/src/xmc_dma.c ****       {
 327:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 328:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1259              	 .loc 2 328 0 is_stmt 1
 1260 00c0 FB7A     	 ldrb r3,[r7,#11]
 1261 00c2 7A68     	 ldr r2,[r7,#4]
 1262 00c4 1269     	 ldr r2,[r2,#16]
 1263 00c6 F968     	 ldr r1,[r7,#12]
 1264 00c8 5820     	 movs r0,#88
 1265 00ca 00FB03F3 	 mul r3,r0,r3
 1266 00ce 0B44     	 add r3,r3,r1
 1267 00d0 4833     	 adds r3,r3,#72
 1268 00d2 1A60     	 str r2,[r3]
 329:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1269              	 .loc 2 329 0
 1270 00d4 FB7A     	 ldrb r3,[r7,#11]
 1271 00d6 7A68     	 ldr r2,[r7,#4]
 1272 00d8 5269     	 ldr r2,[r2,#20]
 1273 00da F968     	 ldr r1,[r7,#12]
 1274 00dc 5820     	 movs r0,#88
 1275 00de 00FB03F3 	 mul r3,r0,r3
 1276 00e2 0B44     	 add r3,r3,r1
 1277 00e4 5033     	 adds r3,r3,#80
 1278 00e6 1A60     	 str r2,[r3]
 1279              	.L67:
 330:../Libraries/XMCLib/src/xmc_dma.c ****       }
 331:../Libraries/XMCLib/src/xmc_dma.c **** 
 332:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1280              	 .loc 2 332 0
 1281 00e8 7B68     	 ldr r3,[r7,#4]
 1282 00ea 1B8C     	 ldrh r3,[r3,#32]
 1283 00ec 002B     	 cmp r3,#0
 1284 00ee 4FD1     	 bne .L68
 333:../Libraries/XMCLib/src/xmc_dma.c ****       {
 334:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 335:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1285              	 .loc 2 335 0
 1286 00f0 7B68     	 ldr r3,[r7,#4]
 1287 00f2 9B78     	 ldrb r3,[r3,#2]
 1288 00f4 03F07003 	 and r3,r3,#112
 1289 00f8 DBB2     	 uxtb r3,r3
 1290 00fa 102B     	 cmp r3,#16
 1291 00fc 06D0     	 beq .L69
 336:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1292              	 .loc 2 336 0 discriminator 1
 1293 00fe 7B68     	 ldr r3,[r7,#4]
 1294 0100 9B78     	 ldrb r3,[r3,#2]
 1295 0102 03F07003 	 and r3,r3,#112
 1296 0106 DBB2     	 uxtb r3,r3
 335:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1297              	 .loc 2 335 0 discriminator 1
 1298 0108 302B     	 cmp r3,#48
 1299 010a 41D1     	 bne .L68
 1300              	.L69:
 337:../Libraries/XMCLib/src/xmc_dma.c ****         {
 338:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 339:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1301              	 .loc 2 339 0
 1302 010c FB68     	 ldr r3,[r7,#12]
 1303 010e 9B4A     	 ldr r2,.L92
 1304 0110 9342     	 cmp r3,r2
 1305 0112 06D1     	 bne .L70
 340:../Libraries/XMCLib/src/xmc_dma.c ****           {
 341:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 342:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1306              	 .loc 2 342 0
 1307 0114 7B68     	 ldr r3,[r7,#4]
 1308 0116 93F82230 	 ldrb r3,[r3,#34]
 1309 011a 03F00703 	 and r3,r3,#7
 1310 011e BB75     	 strb r3,[r7,#22]
 1311 0120 05E0     	 b .L71
 1312              	.L70:
 343:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 344:../Libraries/XMCLib/src/xmc_dma.c ****           }
 345:../Libraries/XMCLib/src/xmc_dma.c ****           else
 346:../Libraries/XMCLib/src/xmc_dma.c ****           {
 347:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1313              	 .loc 2 347 0
 1314 0122 7B68     	 ldr r3,[r7,#4]
 1315 0124 93F82230 	 ldrb r3,[r3,#34]
 1316 0128 03F00303 	 and r3,r3,#3
 1317 012c BB75     	 strb r3,[r7,#22]
 1318              	.L71:
 348:../Libraries/XMCLib/src/xmc_dma.c ****           }
 349:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 350:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1319              	 .loc 2 350 0
 1320 012e 7B68     	 ldr r3,[r7,#4]
 1321 0130 93F82230 	 ldrb r3,[r3,#34]
 1322 0134 1B09     	 lsrs r3,r3,#4
 1323 0136 7B75     	 strb r3,[r7,#21]
 351:../Libraries/XMCLib/src/xmc_dma.c **** 
 352:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1324              	 .loc 2 352 0
 1325 0138 FB7A     	 ldrb r3,[r7,#11]
 1326 013a FA7A     	 ldrb r2,[r7,#11]
 1327 013c F968     	 ldr r1,[r7,#12]
 1328 013e 5820     	 movs r0,#88
 1329 0140 00FB02F2 	 mul r2,r0,r2
 1330 0144 0A44     	 add r2,r2,r1
 1331 0146 4032     	 adds r2,r2,#64
 1332 0148 5168     	 ldr r1,[r2,#4]
 1333 014a BA7D     	 ldrb r2,[r7,#22]
 1334 014c D202     	 lsls r2,r2,#11
 1335 014e 0A43     	 orrs r2,r2,r1
 1336 0150 F968     	 ldr r1,[r7,#12]
 1337 0152 5820     	 movs r0,#88
 1338 0154 00FB03F3 	 mul r3,r0,r3
 1339 0158 0B44     	 add r3,r3,r1
 1340 015a 4033     	 adds r3,r3,#64
 1341 015c 5A60     	 str r2,[r3,#4]
 353:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1342              	 .loc 2 353 0
 1343 015e BA7D     	 ldrb r2,[r7,#22]
 1344 0160 7B7D     	 ldrb r3,[r7,#21]
 1345 0162 F868     	 ldr r0,[r7,#12]
 1346 0164 1146     	 mov r1,r2
 1347 0166 1A46     	 mov r2,r3
 1348 0168 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 354:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1349              	 .loc 2 354 0
 1350 016c FB7A     	 ldrb r3,[r7,#11]
 1351 016e FA7A     	 ldrb r2,[r7,#11]
 1352 0170 F968     	 ldr r1,[r7,#12]
 1353 0172 5820     	 movs r0,#88
 1354 0174 00FB02F2 	 mul r2,r0,r2
 1355 0178 0A44     	 add r2,r2,r1
 1356 017a 4032     	 adds r2,r2,#64
 1357 017c 1268     	 ldr r2,[r2]
 1358 017e 22F48062 	 bic r2,r2,#1024
 1359 0182 F968     	 ldr r1,[r7,#12]
 1360 0184 5820     	 movs r0,#88
 1361 0186 00FB03F3 	 mul r3,r0,r3
 1362 018a 0B44     	 add r3,r3,r1
 1363 018c 4033     	 adds r3,r3,#64
 1364 018e 1A60     	 str r2,[r3]
 1365              	.L68:
 355:../Libraries/XMCLib/src/xmc_dma.c ****         }
 356:../Libraries/XMCLib/src/xmc_dma.c ****       }
 357:../Libraries/XMCLib/src/xmc_dma.c **** 
 358:../Libraries/XMCLib/src/xmc_dma.c **** 
 359:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1366              	 .loc 2 359 0
 1367 0190 7B68     	 ldr r3,[r7,#4]
 1368 0192 9B8B     	 ldrh r3,[r3,#28]
 1369 0194 002B     	 cmp r3,#0
 1370 0196 4CD1     	 bne .L72
 360:../Libraries/XMCLib/src/xmc_dma.c ****       {
 361:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1371              	 .loc 2 361 0
 1372 0198 7B68     	 ldr r3,[r7,#4]
 1373 019a 9B78     	 ldrb r3,[r3,#2]
 1374 019c 03F07003 	 and r3,r3,#112
 1375 01a0 DBB2     	 uxtb r3,r3
 1376 01a2 202B     	 cmp r3,#32
 1377 01a4 06D0     	 beq .L73
 362:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1378              	 .loc 2 362 0 discriminator 1
 1379 01a6 7B68     	 ldr r3,[r7,#4]
 1380 01a8 9B78     	 ldrb r3,[r3,#2]
 1381 01aa 03F07003 	 and r3,r3,#112
 1382 01ae DBB2     	 uxtb r3,r3
 361:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1383              	 .loc 2 361 0 discriminator 1
 1384 01b0 302B     	 cmp r3,#48
 1385 01b2 3ED1     	 bne .L72
 1386              	.L73:
 363:../Libraries/XMCLib/src/xmc_dma.c ****         {
 364:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 365:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1387              	 .loc 2 365 0
 1388 01b4 FB68     	 ldr r3,[r7,#12]
 1389 01b6 714A     	 ldr r2,.L92
 1390 01b8 9342     	 cmp r3,r2
 1391 01ba 05D1     	 bne .L74
 366:../Libraries/XMCLib/src/xmc_dma.c ****           {
 367:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 368:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1392              	 .loc 2 368 0
 1393 01bc 7B68     	 ldr r3,[r7,#4]
 1394 01be 9B7F     	 ldrb r3,[r3,#30]
 1395 01c0 03F00703 	 and r3,r3,#7
 1396 01c4 BB75     	 strb r3,[r7,#22]
 1397 01c6 04E0     	 b .L75
 1398              	.L74:
 369:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 370:../Libraries/XMCLib/src/xmc_dma.c ****           }
 371:../Libraries/XMCLib/src/xmc_dma.c ****           else
 372:../Libraries/XMCLib/src/xmc_dma.c ****           {
 373:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1399              	 .loc 2 373 0
 1400 01c8 7B68     	 ldr r3,[r7,#4]
 1401 01ca 9B7F     	 ldrb r3,[r3,#30]
 1402 01cc 03F00303 	 and r3,r3,#3
 1403 01d0 BB75     	 strb r3,[r7,#22]
 1404              	.L75:
 374:../Libraries/XMCLib/src/xmc_dma.c ****           }
 375:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 376:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1405              	 .loc 2 376 0
 1406 01d2 7B68     	 ldr r3,[r7,#4]
 1407 01d4 9B7F     	 ldrb r3,[r3,#30]
 1408 01d6 1B09     	 lsrs r3,r3,#4
 1409 01d8 7B75     	 strb r3,[r7,#21]
 377:../Libraries/XMCLib/src/xmc_dma.c **** 
 378:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1410              	 .loc 2 378 0
 1411 01da FB7A     	 ldrb r3,[r7,#11]
 1412 01dc FA7A     	 ldrb r2,[r7,#11]
 1413 01de F968     	 ldr r1,[r7,#12]
 1414 01e0 5820     	 movs r0,#88
 1415 01e2 00FB02F2 	 mul r2,r0,r2
 1416 01e6 0A44     	 add r2,r2,r1
 1417 01e8 4032     	 adds r2,r2,#64
 1418 01ea 5168     	 ldr r1,[r2,#4]
 1419 01ec BA7D     	 ldrb r2,[r7,#22]
 1420 01ee D201     	 lsls r2,r2,#7
 1421 01f0 0A43     	 orrs r2,r2,r1
 1422 01f2 F968     	 ldr r1,[r7,#12]
 1423 01f4 5820     	 movs r0,#88
 1424 01f6 00FB03F3 	 mul r3,r0,r3
 1425 01fa 0B44     	 add r3,r3,r1
 1426 01fc 4033     	 adds r3,r3,#64
 1427 01fe 5A60     	 str r2,[r3,#4]
 379:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1428              	 .loc 2 379 0
 1429 0200 BA7D     	 ldrb r2,[r7,#22]
 1430 0202 7B7D     	 ldrb r3,[r7,#21]
 1431 0204 F868     	 ldr r0,[r7,#12]
 1432 0206 1146     	 mov r1,r2
 1433 0208 1A46     	 mov r2,r3
 1434 020a FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 380:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1435              	 .loc 2 380 0
 1436 020e FB7A     	 ldrb r3,[r7,#11]
 1437 0210 FA7A     	 ldrb r2,[r7,#11]
 1438 0212 F968     	 ldr r1,[r7,#12]
 1439 0214 5820     	 movs r0,#88
 1440 0216 00FB02F2 	 mul r2,r0,r2
 1441 021a 0A44     	 add r2,r2,r1
 1442 021c 4032     	 adds r2,r2,#64
 1443 021e 1268     	 ldr r2,[r2]
 1444 0220 22F40062 	 bic r2,r2,#2048
 1445 0224 F968     	 ldr r1,[r7,#12]
 1446 0226 5820     	 movs r0,#88
 1447 0228 00FB03F3 	 mul r3,r0,r3
 1448 022c 0B44     	 add r3,r3,r1
 1449 022e 4033     	 adds r3,r3,#64
 1450 0230 1A60     	 str r2,[r3]
 1451              	.L72:
 381:../Libraries/XMCLib/src/xmc_dma.c ****         }
 382:../Libraries/XMCLib/src/xmc_dma.c ****       }
 383:../Libraries/XMCLib/src/xmc_dma.c ****       
 384:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1452              	 .loc 2 384 0
 1453 0232 FB7A     	 ldrb r3,[r7,#11]
 1454 0234 F868     	 ldr r0,[r7,#12]
 1455 0236 1946     	 mov r1,r3
 1456 0238 1F22     	 movs r2,#31
 1457 023a FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 385:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFE
 386:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 387:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 388:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 389:../Libraries/XMCLib/src/xmc_dma.c **** 
 390:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1458              	 .loc 2 390 0
 1459 023e 7B68     	 ldr r3,[r7,#4]
 1460 0240 9B7E     	 ldrb r3,[r3,#26]
 1461 0242 082B     	 cmp r3,#8
 1462 0244 00F2D480 	 bhi .L91
 1463 0248 01A2     	 adr r2,.L78
 1464 024a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1465 024e 00BF     	 .p2align 2
 1466              	.L78:
 1467 0250 F1030000 	 .word .L91+1
 1468 0254 75020000 	 .word .L79+1
 1469 0258 9B020000 	 .word .L80+1
 1470 025c C1020000 	 .word .L81+1
 1471 0260 E7020000 	 .word .L82+1
 1472 0264 0D030000 	 .word .L83+1
 1473 0268 57030000 	 .word .L84+1
 1474 026c 81030000 	 .word .L85+1
 1475 0270 CB030000 	 .word .L86+1
 1476              	 .p2align 1
 1477              	.L79:
 391:../Libraries/XMCLib/src/xmc_dma.c ****       {
 392:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 393:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 394:../Libraries/XMCLib/src/xmc_dma.c **** 
 395:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 396:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1478              	 .loc 2 396 0
 1479 0274 FB7A     	 ldrb r3,[r7,#11]
 1480 0276 FA7A     	 ldrb r2,[r7,#11]
 1481 0278 F968     	 ldr r1,[r7,#12]
 1482 027a 5820     	 movs r0,#88
 1483 027c 00FB02F2 	 mul r2,r0,r2
 1484 0280 0A44     	 add r2,r2,r1
 1485 0282 4032     	 adds r2,r2,#64
 1486 0284 1268     	 ldr r2,[r2]
 1487 0286 42F00042 	 orr r2,r2,#-2147483648
 1488 028a F968     	 ldr r1,[r7,#12]
 1489 028c 5820     	 movs r0,#88
 1490 028e 00FB03F3 	 mul r3,r0,r3
 1491 0292 0B44     	 add r3,r3,r1
 1492 0294 4033     	 adds r3,r3,#64
 1493 0296 1A60     	 str r2,[r3]
 397:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1494              	 .loc 2 397 0
 1495 0298 ABE0     	 b .L87
 1496              	.L80:
 398:../Libraries/XMCLib/src/xmc_dma.c **** 
 399:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 400:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1497              	 .loc 2 400 0
 1498 029a FB7A     	 ldrb r3,[r7,#11]
 1499 029c FA7A     	 ldrb r2,[r7,#11]
 1500 029e F968     	 ldr r1,[r7,#12]
 1501 02a0 5820     	 movs r0,#88
 1502 02a2 00FB02F2 	 mul r2,r0,r2
 1503 02a6 0A44     	 add r2,r2,r1
 1504 02a8 4032     	 adds r2,r2,#64
 1505 02aa 1268     	 ldr r2,[r2]
 1506 02ac 42F08042 	 orr r2,r2,#1073741824
 1507 02b0 F968     	 ldr r1,[r7,#12]
 1508 02b2 5820     	 movs r0,#88
 1509 02b4 00FB03F3 	 mul r3,r0,r3
 1510 02b8 0B44     	 add r3,r3,r1
 1511 02ba 4033     	 adds r3,r3,#64
 1512 02bc 1A60     	 str r2,[r3]
 401:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1513              	 .loc 2 401 0
 1514 02be 98E0     	 b .L87
 1515              	.L81:
 402:../Libraries/XMCLib/src/xmc_dma.c **** 
 403:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 404:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1516              	 .loc 2 404 0
 1517 02c0 FB7A     	 ldrb r3,[r7,#11]
 1518 02c2 FA7A     	 ldrb r2,[r7,#11]
 1519 02c4 F968     	 ldr r1,[r7,#12]
 1520 02c6 5820     	 movs r0,#88
 1521 02c8 00FB02F2 	 mul r2,r0,r2
 1522 02cc 0A44     	 add r2,r2,r1
 1523 02ce 4032     	 adds r2,r2,#64
 1524 02d0 1268     	 ldr r2,[r2]
 1525 02d2 42F04042 	 orr r2,r2,#-1073741824
 1526 02d6 F968     	 ldr r1,[r7,#12]
 1527 02d8 5820     	 movs r0,#88
 1528 02da 00FB03F3 	 mul r3,r0,r3
 1529 02de 0B44     	 add r3,r3,r1
 1530 02e0 4033     	 adds r3,r3,#64
 1531 02e2 1A60     	 str r2,[r3]
 405:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 406:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1532              	 .loc 2 406 0
 1533 02e4 85E0     	 b .L87
 1534              	.L82:
 407:../Libraries/XMCLib/src/xmc_dma.c **** 
 408:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 409:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1535              	 .loc 2 409 0
 1536 02e6 FB7A     	 ldrb r3,[r7,#11]
 1537 02e8 FA7A     	 ldrb r2,[r7,#11]
 1538 02ea F968     	 ldr r1,[r7,#12]
 1539 02ec 5820     	 movs r0,#88
 1540 02ee 00FB02F2 	 mul r2,r0,r2
 1541 02f2 0A44     	 add r2,r2,r1
 1542 02f4 1832     	 adds r2,r2,#24
 1543 02f6 1268     	 ldr r2,[r2]
 1544 02f8 42F00062 	 orr r2,r2,#134217728
 1545 02fc F968     	 ldr r1,[r7,#12]
 1546 02fe 5820     	 movs r0,#88
 1547 0300 00FB03F3 	 mul r3,r0,r3
 1548 0304 0B44     	 add r3,r3,r1
 1549 0306 1833     	 adds r3,r3,#24
 1550 0308 1A60     	 str r2,[r3]
 410:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1551              	 .loc 2 410 0
 1552 030a 72E0     	 b .L87
 1553              	.L83:
 411:../Libraries/XMCLib/src/xmc_dma.c **** 
 412:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 413:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1554              	 .loc 2 413 0
 1555 030c FB7A     	 ldrb r3,[r7,#11]
 1556 030e FA7A     	 ldrb r2,[r7,#11]
 1557 0310 F968     	 ldr r1,[r7,#12]
 1558 0312 5820     	 movs r0,#88
 1559 0314 00FB02F2 	 mul r2,r0,r2
 1560 0318 0A44     	 add r2,r2,r1
 1561 031a 4032     	 adds r2,r2,#64
 1562 031c 1268     	 ldr r2,[r2]
 1563 031e 42F08042 	 orr r2,r2,#1073741824
 1564 0322 F968     	 ldr r1,[r7,#12]
 1565 0324 5820     	 movs r0,#88
 1566 0326 00FB03F3 	 mul r3,r0,r3
 1567 032a 0B44     	 add r3,r3,r1
 1568 032c 4033     	 adds r3,r3,#64
 1569 032e 1A60     	 str r2,[r3]
 414:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1570              	 .loc 2 414 0
 1571 0330 FB7A     	 ldrb r3,[r7,#11]
 1572 0332 FA7A     	 ldrb r2,[r7,#11]
 1573 0334 F968     	 ldr r1,[r7,#12]
 1574 0336 5820     	 movs r0,#88
 1575 0338 00FB02F2 	 mul r2,r0,r2
 1576 033c 0A44     	 add r2,r2,r1
 1577 033e 1832     	 adds r2,r2,#24
 1578 0340 1268     	 ldr r2,[r2]
 1579 0342 42F00062 	 orr r2,r2,#134217728
 1580 0346 F968     	 ldr r1,[r7,#12]
 1581 0348 5820     	 movs r0,#88
 1582 034a 00FB03F3 	 mul r3,r0,r3
 1583 034e 0B44     	 add r3,r3,r1
 1584 0350 1833     	 adds r3,r3,#24
 1585 0352 1A60     	 str r2,[r3]
 415:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1586              	 .loc 2 415 0
 1587 0354 4DE0     	 b .L87
 1588              	.L84:
 416:../Libraries/XMCLib/src/xmc_dma.c **** 
 417:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 418:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1589              	 .loc 2 418 0
 1590 0356 FB7A     	 ldrb r3,[r7,#11]
 1591 0358 FA7A     	 ldrb r2,[r7,#11]
 1592 035a F968     	 ldr r1,[r7,#12]
 1593 035c 5820     	 movs r0,#88
 1594 035e 00FB02F2 	 mul r2,r0,r2
 1595 0362 0A44     	 add r2,r2,r1
 1596 0364 1832     	 adds r2,r2,#24
 1597 0366 1268     	 ldr r2,[r2]
 1598 0368 42F08052 	 orr r2,r2,#268435456
 1599 036c F968     	 ldr r1,[r7,#12]
 1600 036e 5820     	 movs r0,#88
 1601 0370 00FB03F3 	 mul r3,r0,r3
 1602 0374 0B44     	 add r3,r3,r1
 1603 0376 1833     	 adds r3,r3,#24
 1604 0378 1A60     	 str r2,[r3]
 419:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1605              	 .loc 2 419 0
 1606 037a 3AE0     	 b .L87
 1607              	.L93:
 1608              	 .align 2
 1609              	.L92:
 1610 037c 00400150 	 .word 1342259200
 1611              	.L85:
 420:../Libraries/XMCLib/src/xmc_dma.c **** 
 421:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 422:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1612              	 .loc 2 422 0
 1613 0380 FB7A     	 ldrb r3,[r7,#11]
 1614 0382 FA7A     	 ldrb r2,[r7,#11]
 1615 0384 F968     	 ldr r1,[r7,#12]
 1616 0386 5820     	 movs r0,#88
 1617 0388 00FB02F2 	 mul r2,r0,r2
 1618 038c 0A44     	 add r2,r2,r1
 1619 038e 4032     	 adds r2,r2,#64
 1620 0390 1268     	 ldr r2,[r2]
 1621 0392 42F00042 	 orr r2,r2,#-2147483648
 1622 0396 F968     	 ldr r1,[r7,#12]
 1623 0398 5820     	 movs r0,#88
 1624 039a 00FB03F3 	 mul r3,r0,r3
 1625 039e 0B44     	 add r3,r3,r1
 1626 03a0 4033     	 adds r3,r3,#64
 1627 03a2 1A60     	 str r2,[r3]
 423:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1628              	 .loc 2 423 0
 1629 03a4 FB7A     	 ldrb r3,[r7,#11]
 1630 03a6 FA7A     	 ldrb r2,[r7,#11]
 1631 03a8 F968     	 ldr r1,[r7,#12]
 1632 03aa 5820     	 movs r0,#88
 1633 03ac 00FB02F2 	 mul r2,r0,r2
 1634 03b0 0A44     	 add r2,r2,r1
 1635 03b2 1832     	 adds r2,r2,#24
 1636 03b4 1268     	 ldr r2,[r2]
 1637 03b6 42F08052 	 orr r2,r2,#268435456
 1638 03ba F968     	 ldr r1,[r7,#12]
 1639 03bc 5820     	 movs r0,#88
 1640 03be 00FB03F3 	 mul r3,r0,r3
 1641 03c2 0B44     	 add r3,r3,r1
 1642 03c4 1833     	 adds r3,r3,#24
 1643 03c6 1A60     	 str r2,[r3]
 424:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1644              	 .loc 2 424 0
 1645 03c8 13E0     	 b .L87
 1646              	.L86:
 425:../Libraries/XMCLib/src/xmc_dma.c **** 
 426:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 427:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1647              	 .loc 2 427 0
 1648 03ca FB7A     	 ldrb r3,[r7,#11]
 1649 03cc FA7A     	 ldrb r2,[r7,#11]
 1650 03ce F968     	 ldr r1,[r7,#12]
 1651 03d0 5820     	 movs r0,#88
 1652 03d2 00FB02F2 	 mul r2,r0,r2
 1653 03d6 0A44     	 add r2,r2,r1
 1654 03d8 1832     	 adds r2,r2,#24
 1655 03da 1268     	 ldr r2,[r2]
 1656 03dc 42F0C052 	 orr r2,r2,#402653184
 1657 03e0 F968     	 ldr r1,[r7,#12]
 1658 03e2 5820     	 movs r0,#88
 1659 03e4 00FB03F3 	 mul r3,r0,r3
 1660 03e8 0B44     	 add r3,r3,r1
 1661 03ea 1833     	 adds r3,r3,#24
 1662 03ec 1A60     	 str r2,[r3]
 428:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 429:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1663              	 .loc 2 429 0
 1664 03ee 00E0     	 b .L87
 1665              	.L91:
 430:../Libraries/XMCLib/src/xmc_dma.c **** 
 431:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 432:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1666              	 .loc 2 432 0
 1667 03f0 00BF     	 nop
 1668              	.L87:
 433:../Libraries/XMCLib/src/xmc_dma.c ****       }
 434:../Libraries/XMCLib/src/xmc_dma.c **** 
 435:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1669              	 .loc 2 435 0
 1670 03f2 0023     	 movs r3,#0
 1671 03f4 FB75     	 strb r3,[r7,#23]
 1672 03f6 04E0     	 b .L89
 1673              	.L66:
 436:../Libraries/XMCLib/src/xmc_dma.c **** 
 437:../Libraries/XMCLib/src/xmc_dma.c ****     }
 438:../Libraries/XMCLib/src/xmc_dma.c ****     else
 439:../Libraries/XMCLib/src/xmc_dma.c ****     {
 440:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1674              	 .loc 2 440 0
 1675 03f8 0223     	 movs r3,#2
 1676 03fa FB75     	 strb r3,[r7,#23]
 1677 03fc 01E0     	 b .L89
 1678              	.L65:
 441:../Libraries/XMCLib/src/xmc_dma.c ****     }
 442:../Libraries/XMCLib/src/xmc_dma.c ****   }
 443:../Libraries/XMCLib/src/xmc_dma.c ****   else 
 444:../Libraries/XMCLib/src/xmc_dma.c ****   {
 445:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1679              	 .loc 2 445 0
 1680 03fe 0123     	 movs r3,#1
 1681 0400 FB75     	 strb r3,[r7,#23]
 1682              	.L89:
 446:../Libraries/XMCLib/src/xmc_dma.c ****   }
 447:../Libraries/XMCLib/src/xmc_dma.c ****   
 448:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1683              	 .loc 2 448 0
 1684 0402 FB7D     	 ldrb r3,[r7,#23]
 449:../Libraries/XMCLib/src/xmc_dma.c **** }
 1685              	 .loc 2 449 0
 1686 0404 1846     	 mov r0,r3
 1687 0406 1837     	 adds r7,r7,#24
 1688              	.LCFI107:
 1689              	 .cfi_def_cfa_offset 8
 1690 0408 BD46     	 mov sp,r7
 1691              	.LCFI108:
 1692              	 .cfi_def_cfa_register 13
 1693              	 
 1694 040a 80BD     	 pop {r7,pc}
 1695              	 .cfi_endproc
 1696              	.LFE173:
 1698              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1699              	 .align 2
 1700              	 .global XMC_DMA_CH_Suspend
 1701              	 .thumb
 1702              	 .thumb_func
 1704              	XMC_DMA_CH_Suspend:
 1705              	.LFB174:
 450:../Libraries/XMCLib/src/xmc_dma.c **** 
 451:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 452:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 453:../Libraries/XMCLib/src/xmc_dma.c **** {
 1706              	 .loc 2 453 0
 1707              	 .cfi_startproc
 1708              	 
 1709              	 
 1710              	 
 1711 0000 80B4     	 push {r7}
 1712              	.LCFI109:
 1713              	 .cfi_def_cfa_offset 4
 1714              	 .cfi_offset 7,-4
 1715 0002 83B0     	 sub sp,sp,#12
 1716              	.LCFI110:
 1717              	 .cfi_def_cfa_offset 16
 1718 0004 00AF     	 add r7,sp,#0
 1719              	.LCFI111:
 1720              	 .cfi_def_cfa_register 7
 1721 0006 7860     	 str r0,[r7,#4]
 1722 0008 0B46     	 mov r3,r1
 1723 000a FB70     	 strb r3,[r7,#3]
 454:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1724              	 .loc 2 454 0
 1725 000c FB78     	 ldrb r3,[r7,#3]
 1726 000e FA78     	 ldrb r2,[r7,#3]
 1727 0010 7968     	 ldr r1,[r7,#4]
 1728 0012 5820     	 movs r0,#88
 1729 0014 00FB02F2 	 mul r2,r0,r2
 1730 0018 0A44     	 add r2,r2,r1
 1731 001a 4032     	 adds r2,r2,#64
 1732 001c 1268     	 ldr r2,[r2]
 1733 001e 42F48072 	 orr r2,r2,#256
 1734 0022 7968     	 ldr r1,[r7,#4]
 1735 0024 5820     	 movs r0,#88
 1736 0026 00FB03F3 	 mul r3,r0,r3
 1737 002a 0B44     	 add r3,r3,r1
 1738 002c 4033     	 adds r3,r3,#64
 1739 002e 1A60     	 str r2,[r3]
 455:../Libraries/XMCLib/src/xmc_dma.c **** }
 1740              	 .loc 2 455 0
 1741 0030 0C37     	 adds r7,r7,#12
 1742              	.LCFI112:
 1743              	 .cfi_def_cfa_offset 4
 1744 0032 BD46     	 mov sp,r7
 1745              	.LCFI113:
 1746              	 .cfi_def_cfa_register 13
 1747              	 
 1748 0034 5DF8047B 	 ldr r7,[sp],#4
 1749              	.LCFI114:
 1750              	 .cfi_restore 7
 1751              	 .cfi_def_cfa_offset 0
 1752 0038 7047     	 bx lr
 1753              	 .cfi_endproc
 1754              	.LFE174:
 1756 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1757              	 .align 2
 1758              	 .global XMC_DMA_CH_Resume
 1759              	 .thumb
 1760              	 .thumb_func
 1762              	XMC_DMA_CH_Resume:
 1763              	.LFB175:
 456:../Libraries/XMCLib/src/xmc_dma.c **** 
 457:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 458:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 459:../Libraries/XMCLib/src/xmc_dma.c **** {
 1764              	 .loc 2 459 0
 1765              	 .cfi_startproc
 1766              	 
 1767              	 
 1768              	 
 1769 0000 80B4     	 push {r7}
 1770              	.LCFI115:
 1771              	 .cfi_def_cfa_offset 4
 1772              	 .cfi_offset 7,-4
 1773 0002 83B0     	 sub sp,sp,#12
 1774              	.LCFI116:
 1775              	 .cfi_def_cfa_offset 16
 1776 0004 00AF     	 add r7,sp,#0
 1777              	.LCFI117:
 1778              	 .cfi_def_cfa_register 7
 1779 0006 7860     	 str r0,[r7,#4]
 1780 0008 0B46     	 mov r3,r1
 1781 000a FB70     	 strb r3,[r7,#3]
 460:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1782              	 .loc 2 460 0
 1783 000c FB78     	 ldrb r3,[r7,#3]
 1784 000e FA78     	 ldrb r2,[r7,#3]
 1785 0010 7968     	 ldr r1,[r7,#4]
 1786 0012 5820     	 movs r0,#88
 1787 0014 00FB02F2 	 mul r2,r0,r2
 1788 0018 0A44     	 add r2,r2,r1
 1789 001a 4032     	 adds r2,r2,#64
 1790 001c 1268     	 ldr r2,[r2]
 1791 001e 22F48072 	 bic r2,r2,#256
 1792 0022 7968     	 ldr r1,[r7,#4]
 1793 0024 5820     	 movs r0,#88
 1794 0026 00FB03F3 	 mul r3,r0,r3
 1795 002a 0B44     	 add r3,r3,r1
 1796 002c 4033     	 adds r3,r3,#64
 1797 002e 1A60     	 str r2,[r3]
 461:../Libraries/XMCLib/src/xmc_dma.c **** }
 1798              	 .loc 2 461 0
 1799 0030 0C37     	 adds r7,r7,#12
 1800              	.LCFI118:
 1801              	 .cfi_def_cfa_offset 4
 1802 0032 BD46     	 mov sp,r7
 1803              	.LCFI119:
 1804              	 .cfi_def_cfa_register 13
 1805              	 
 1806 0034 5DF8047B 	 ldr r7,[sp],#4
 1807              	.LCFI120:
 1808              	 .cfi_restore 7
 1809              	 .cfi_def_cfa_offset 0
 1810 0038 7047     	 bx lr
 1811              	 .cfi_endproc
 1812              	.LFE175:
 1814 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1815              	 .align 2
 1816              	 .global XMC_DMA_CH_IsSuspended
 1817              	 .thumb
 1818              	 .thumb_func
 1820              	XMC_DMA_CH_IsSuspended:
 1821              	.LFB176:
 462:../Libraries/XMCLib/src/xmc_dma.c **** 
 463:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 464:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 465:../Libraries/XMCLib/src/xmc_dma.c **** {
 1822              	 .loc 2 465 0
 1823              	 .cfi_startproc
 1824              	 
 1825              	 
 1826              	 
 1827 0000 80B4     	 push {r7}
 1828              	.LCFI121:
 1829              	 .cfi_def_cfa_offset 4
 1830              	 .cfi_offset 7,-4
 1831 0002 83B0     	 sub sp,sp,#12
 1832              	.LCFI122:
 1833              	 .cfi_def_cfa_offset 16
 1834 0004 00AF     	 add r7,sp,#0
 1835              	.LCFI123:
 1836              	 .cfi_def_cfa_register 7
 1837 0006 7860     	 str r0,[r7,#4]
 1838 0008 0B46     	 mov r3,r1
 1839 000a FB70     	 strb r3,[r7,#3]
 466:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1840              	 .loc 2 466 0
 1841 000c FB78     	 ldrb r3,[r7,#3]
 1842 000e 7A68     	 ldr r2,[r7,#4]
 1843 0010 5821     	 movs r1,#88
 1844 0012 01FB03F3 	 mul r3,r1,r3
 1845 0016 1344     	 add r3,r3,r2
 1846 0018 4033     	 adds r3,r3,#64
 1847 001a 1B68     	 ldr r3,[r3]
 1848 001c 03F48073 	 and r3,r3,#256
 1849 0020 002B     	 cmp r3,#0
 1850 0022 14BF     	 ite ne
 1851 0024 0123     	 movne r3,#1
 1852 0026 0023     	 moveq r3,#0
 1853 0028 DBB2     	 uxtb r3,r3
 467:../Libraries/XMCLib/src/xmc_dma.c **** }
 1854              	 .loc 2 467 0
 1855 002a 1846     	 mov r0,r3
 1856 002c 0C37     	 adds r7,r7,#12
 1857              	.LCFI124:
 1858              	 .cfi_def_cfa_offset 4
 1859 002e BD46     	 mov sp,r7
 1860              	.LCFI125:
 1861              	 .cfi_def_cfa_register 13
 1862              	 
 1863 0030 5DF8047B 	 ldr r7,[sp],#4
 1864              	.LCFI126:
 1865              	 .cfi_restore 7
 1866              	 .cfi_def_cfa_offset 0
 1867 0034 7047     	 bx lr
 1868              	 .cfi_endproc
 1869              	.LFE176:
 1871 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1872              	 .align 2
 1873              	 .global XMC_DMA_CH_EnableEvent
 1874              	 .thumb
 1875              	 .thumb_func
 1877              	XMC_DMA_CH_EnableEvent:
 1878              	.LFB177:
 468:../Libraries/XMCLib/src/xmc_dma.c **** 
 469:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 470:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 471:../Libraries/XMCLib/src/xmc_dma.c **** {
 1879              	 .loc 2 471 0
 1880              	 .cfi_startproc
 1881              	 
 1882              	 
 1883              	 
 1884 0000 80B4     	 push {r7}
 1885              	.LCFI127:
 1886              	 .cfi_def_cfa_offset 4
 1887              	 .cfi_offset 7,-4
 1888 0002 87B0     	 sub sp,sp,#28
 1889              	.LCFI128:
 1890              	 .cfi_def_cfa_offset 32
 1891 0004 00AF     	 add r7,sp,#0
 1892              	.LCFI129:
 1893              	 .cfi_def_cfa_register 7
 1894 0006 F860     	 str r0,[r7,#12]
 1895 0008 0B46     	 mov r3,r1
 1896 000a 7A60     	 str r2,[r7,#4]
 1897 000c FB72     	 strb r3,[r7,#11]
 472:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 473:../Libraries/XMCLib/src/xmc_dma.c **** 
 474:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1898              	 .loc 2 474 0
 1899 000e 0023     	 movs r3,#0
 1900 0010 7B61     	 str r3,[r7,#20]
 1901 0012 1CE0     	 b .L99
 1902              	.L101:
 475:../Libraries/XMCLib/src/xmc_dma.c ****   {
 476:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1903              	 .loc 2 476 0
 1904 0014 7B69     	 ldr r3,[r7,#20]
 1905 0016 7A68     	 ldr r2,[r7,#4]
 1906 0018 22FA03F3 	 lsr r3,r2,r3
 1907 001c 03F00103 	 and r3,r3,#1
 1908 0020 002B     	 cmp r3,#0
 1909 0022 11D0     	 beq .L100
 477:../Libraries/XMCLib/src/xmc_dma.c ****     {
 478:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] |= ((uint32_t)0x101UL << channel);
 1910              	 .loc 2 478 0
 1911 0024 7B69     	 ldr r3,[r7,#20]
 1912 0026 5A00     	 lsls r2,r3,#1
 1913 0028 7B69     	 ldr r3,[r7,#20]
 1914 002a 5900     	 lsls r1,r3,#1
 1915 002c FB68     	 ldr r3,[r7,#12]
 1916 002e C431     	 adds r1,r1,#196
 1917 0030 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1918 0034 FB7A     	 ldrb r3,[r7,#11]
 1919 0036 40F20110 	 movw r0,#257
 1920 003a 00FA03F3 	 lsl r3,r0,r3
 1921 003e 1943     	 orrs r1,r1,r3
 1922 0040 FB68     	 ldr r3,[r7,#12]
 1923 0042 C432     	 adds r2,r2,#196
 1924 0044 43F82210 	 str r1,[r3,r2,lsl#2]
 1925              	.L100:
 474:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1926              	 .loc 2 474 0 discriminator 2
 1927 0048 7B69     	 ldr r3,[r7,#20]
 1928 004a 0133     	 adds r3,r3,#1
 1929 004c 7B61     	 str r3,[r7,#20]
 1930              	.L99:
 474:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1931              	 .loc 2 474 0 is_stmt 0 discriminator 1
 1932 004e 7B69     	 ldr r3,[r7,#20]
 1933 0050 042B     	 cmp r3,#4
 1934 0052 DFD9     	 bls .L101
 479:../Libraries/XMCLib/src/xmc_dma.c ****     }
 480:../Libraries/XMCLib/src/xmc_dma.c ****   }
 481:../Libraries/XMCLib/src/xmc_dma.c **** }
 1935              	 .loc 2 481 0 is_stmt 1
 1936 0054 1C37     	 adds r7,r7,#28
 1937              	.LCFI130:
 1938              	 .cfi_def_cfa_offset 4
 1939 0056 BD46     	 mov sp,r7
 1940              	.LCFI131:
 1941              	 .cfi_def_cfa_register 13
 1942              	 
 1943 0058 5DF8047B 	 ldr r7,[sp],#4
 1944              	.LCFI132:
 1945              	 .cfi_restore 7
 1946              	 .cfi_def_cfa_offset 0
 1947 005c 7047     	 bx lr
 1948              	 .cfi_endproc
 1949              	.LFE177:
 1951 005e 00BF     	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1952              	 .align 2
 1953              	 .global XMC_DMA_CH_DisableEvent
 1954              	 .thumb
 1955              	 .thumb_func
 1957              	XMC_DMA_CH_DisableEvent:
 1958              	.LFB178:
 482:../Libraries/XMCLib/src/xmc_dma.c **** 
 483:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 484:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 485:../Libraries/XMCLib/src/xmc_dma.c **** {
 1959              	 .loc 2 485 0
 1960              	 .cfi_startproc
 1961              	 
 1962              	 
 1963              	 
 1964 0000 80B4     	 push {r7}
 1965              	.LCFI133:
 1966              	 .cfi_def_cfa_offset 4
 1967              	 .cfi_offset 7,-4
 1968 0002 87B0     	 sub sp,sp,#28
 1969              	.LCFI134:
 1970              	 .cfi_def_cfa_offset 32
 1971 0004 00AF     	 add r7,sp,#0
 1972              	.LCFI135:
 1973              	 .cfi_def_cfa_register 7
 1974 0006 F860     	 str r0,[r7,#12]
 1975 0008 0B46     	 mov r3,r1
 1976 000a 7A60     	 str r2,[r7,#4]
 1977 000c FB72     	 strb r3,[r7,#11]
 486:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 487:../Libraries/XMCLib/src/xmc_dma.c **** 
 488:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1978              	 .loc 2 488 0
 1979 000e 0023     	 movs r3,#0
 1980 0010 7B61     	 str r3,[r7,#20]
 1981 0012 1CE0     	 b .L103
 1982              	.L105:
 489:../Libraries/XMCLib/src/xmc_dma.c ****   {
 490:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1983              	 .loc 2 490 0
 1984 0014 7B69     	 ldr r3,[r7,#20]
 1985 0016 7A68     	 ldr r2,[r7,#4]
 1986 0018 22FA03F3 	 lsr r3,r2,r3
 1987 001c 03F00103 	 and r3,r3,#1
 1988 0020 002B     	 cmp r3,#0
 1989 0022 11D0     	 beq .L104
 491:../Libraries/XMCLib/src/xmc_dma.c ****     {
 492:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] |= ((uint32_t)0x100UL << channel);
 1990              	 .loc 2 492 0
 1991 0024 7B69     	 ldr r3,[r7,#20]
 1992 0026 5A00     	 lsls r2,r3,#1
 1993 0028 7B69     	 ldr r3,[r7,#20]
 1994 002a 5900     	 lsls r1,r3,#1
 1995 002c FB68     	 ldr r3,[r7,#12]
 1996 002e C431     	 adds r1,r1,#196
 1997 0030 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1998 0034 FB7A     	 ldrb r3,[r7,#11]
 1999 0036 4FF48070 	 mov r0,#256
 2000 003a 00FA03F3 	 lsl r3,r0,r3
 2001 003e 1943     	 orrs r1,r1,r3
 2002 0040 FB68     	 ldr r3,[r7,#12]
 2003 0042 C432     	 adds r2,r2,#196
 2004 0044 43F82210 	 str r1,[r3,r2,lsl#2]
 2005              	.L104:
 488:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2006              	 .loc 2 488 0 discriminator 2
 2007 0048 7B69     	 ldr r3,[r7,#20]
 2008 004a 0133     	 adds r3,r3,#1
 2009 004c 7B61     	 str r3,[r7,#20]
 2010              	.L103:
 488:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2011              	 .loc 2 488 0 is_stmt 0 discriminator 1
 2012 004e 7B69     	 ldr r3,[r7,#20]
 2013 0050 042B     	 cmp r3,#4
 2014 0052 DFD9     	 bls .L105
 493:../Libraries/XMCLib/src/xmc_dma.c ****     }
 494:../Libraries/XMCLib/src/xmc_dma.c ****   }
 495:../Libraries/XMCLib/src/xmc_dma.c **** }
 2015              	 .loc 2 495 0 is_stmt 1
 2016 0054 1C37     	 adds r7,r7,#28
 2017              	.LCFI136:
 2018              	 .cfi_def_cfa_offset 4
 2019 0056 BD46     	 mov sp,r7
 2020              	.LCFI137:
 2021              	 .cfi_def_cfa_register 13
 2022              	 
 2023 0058 5DF8047B 	 ldr r7,[sp],#4
 2024              	.LCFI138:
 2025              	 .cfi_restore 7
 2026              	 .cfi_def_cfa_offset 0
 2027 005c 7047     	 bx lr
 2028              	 .cfi_endproc
 2029              	.LFE178:
 2031 005e 00BF     	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 2032              	 .align 2
 2033              	 .global XMC_DMA_CH_ClearEventStatus
 2034              	 .thumb
 2035              	 .thumb_func
 2037              	XMC_DMA_CH_ClearEventStatus:
 2038              	.LFB179:
 496:../Libraries/XMCLib/src/xmc_dma.c **** 
 497:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 498:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 499:../Libraries/XMCLib/src/xmc_dma.c **** {
 2039              	 .loc 2 499 0
 2040              	 .cfi_startproc
 2041              	 
 2042              	 
 2043              	 
 2044 0000 80B4     	 push {r7}
 2045              	.LCFI139:
 2046              	 .cfi_def_cfa_offset 4
 2047              	 .cfi_offset 7,-4
 2048 0002 87B0     	 sub sp,sp,#28
 2049              	.LCFI140:
 2050              	 .cfi_def_cfa_offset 32
 2051 0004 00AF     	 add r7,sp,#0
 2052              	.LCFI141:
 2053              	 .cfi_def_cfa_register 7
 2054 0006 F860     	 str r0,[r7,#12]
 2055 0008 0B46     	 mov r3,r1
 2056 000a 7A60     	 str r2,[r7,#4]
 2057 000c FB72     	 strb r3,[r7,#11]
 500:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 501:../Libraries/XMCLib/src/xmc_dma.c **** 
 502:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2058              	 .loc 2 502 0
 2059 000e 0023     	 movs r3,#0
 2060 0010 7B61     	 str r3,[r7,#20]
 2061 0012 13E0     	 b .L107
 2062              	.L109:
 503:../Libraries/XMCLib/src/xmc_dma.c ****   {
 504:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 2063              	 .loc 2 504 0
 2064 0014 7B69     	 ldr r3,[r7,#20]
 2065 0016 7A68     	 ldr r2,[r7,#4]
 2066 0018 22FA03F3 	 lsr r3,r2,r3
 2067 001c 03F00103 	 and r3,r3,#1
 2068 0020 002B     	 cmp r3,#0
 2069 0022 08D0     	 beq .L108
 505:../Libraries/XMCLib/src/xmc_dma.c ****     {
 506:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 2070              	 .loc 2 506 0
 2071 0024 7B69     	 ldr r3,[r7,#20]
 2072 0026 5A00     	 lsls r2,r3,#1
 2073 0028 FB7A     	 ldrb r3,[r7,#11]
 2074 002a 0121     	 movs r1,#1
 2075 002c 9940     	 lsls r1,r1,r3
 2076 002e FB68     	 ldr r3,[r7,#12]
 2077 0030 CE32     	 adds r2,r2,#206
 2078 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 2079              	.L108:
 502:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2080              	 .loc 2 502 0 discriminator 2
 2081 0036 7B69     	 ldr r3,[r7,#20]
 2082 0038 0133     	 adds r3,r3,#1
 2083 003a 7B61     	 str r3,[r7,#20]
 2084              	.L107:
 502:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2085              	 .loc 2 502 0 is_stmt 0 discriminator 1
 2086 003c 7B69     	 ldr r3,[r7,#20]
 2087 003e 042B     	 cmp r3,#4
 2088 0040 E8D9     	 bls .L109
 507:../Libraries/XMCLib/src/xmc_dma.c ****     }
 508:../Libraries/XMCLib/src/xmc_dma.c ****   }
 509:../Libraries/XMCLib/src/xmc_dma.c **** 
 510:../Libraries/XMCLib/src/xmc_dma.c **** }
 2089              	 .loc 2 510 0 is_stmt 1
 2090 0042 1C37     	 adds r7,r7,#28
 2091              	.LCFI142:
 2092              	 .cfi_def_cfa_offset 4
 2093 0044 BD46     	 mov sp,r7
 2094              	.LCFI143:
 2095              	 .cfi_def_cfa_register 13
 2096              	 
 2097 0046 5DF8047B 	 ldr r7,[sp],#4
 2098              	.LCFI144:
 2099              	 .cfi_restore 7
 2100              	 .cfi_def_cfa_offset 0
 2101 004a 7047     	 bx lr
 2102              	 .cfi_endproc
 2103              	.LFE179:
 2105              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 2106              	 .align 2
 2107              	 .global XMC_DMA_CH_GetEventStatus
 2108              	 .thumb
 2109              	 .thumb_func
 2111              	XMC_DMA_CH_GetEventStatus:
 2112              	.LFB180:
 511:../Libraries/XMCLib/src/xmc_dma.c **** 
 512:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 513:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 514:../Libraries/XMCLib/src/xmc_dma.c **** {
 2113              	 .loc 2 514 0
 2114              	 .cfi_startproc
 2115              	 
 2116              	 
 2117              	 
 2118 0000 80B4     	 push {r7}
 2119              	.LCFI145:
 2120              	 .cfi_def_cfa_offset 4
 2121              	 .cfi_offset 7,-4
 2122 0002 85B0     	 sub sp,sp,#20
 2123              	.LCFI146:
 2124              	 .cfi_def_cfa_offset 24
 2125 0004 00AF     	 add r7,sp,#0
 2126              	.LCFI147:
 2127              	 .cfi_def_cfa_register 7
 2128 0006 7860     	 str r0,[r7,#4]
 2129 0008 0B46     	 mov r3,r1
 2130 000a FB70     	 strb r3,[r7,#3]
 515:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 516:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 2131              	 .loc 2 516 0
 2132 000c 0023     	 movs r3,#0
 2133 000e BB60     	 str r3,[r7,#8]
 517:../Libraries/XMCLib/src/xmc_dma.c **** 
 518:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2134              	 .loc 2 518 0
 2135 0010 0023     	 movs r3,#0
 2136 0012 FB60     	 str r3,[r7,#12]
 2137 0014 18E0     	 b .L111
 2138              	.L114:
 519:../Libraries/XMCLib/src/xmc_dma.c ****   {
 520:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 2139              	 .loc 2 520 0
 2140 0016 FB68     	 ldr r3,[r7,#12]
 2141 0018 5A00     	 lsls r2,r3,#1
 2142 001a 7B68     	 ldr r3,[r7,#4]
 2143 001c BA32     	 adds r2,r2,#186
 2144 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 2145 0022 FB78     	 ldrb r3,[r7,#3]
 2146 0024 22FA03F3 	 lsr r3,r2,r3
 2147 0028 03F00103 	 and r3,r3,#1
 2148 002c 002B     	 cmp r3,#0
 2149 002e 04D0     	 beq .L112
 2150              	 .loc 2 520 0 is_stmt 0 discriminator 1
 2151 0030 FB68     	 ldr r3,[r7,#12]
 2152 0032 0122     	 movs r2,#1
 2153 0034 02FA03F3 	 lsl r3,r2,r3
 2154 0038 00E0     	 b .L113
 2155              	.L112:
 2156              	 .loc 2 520 0 discriminator 2
 2157 003a 0023     	 movs r3,#0
 2158              	.L113:
 2159              	 .loc 2 520 0 discriminator 4
 2160 003c BA68     	 ldr r2,[r7,#8]
 2161 003e 1343     	 orrs r3,r3,r2
 2162 0040 BB60     	 str r3,[r7,#8]
 518:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2163              	 .loc 2 518 0 is_stmt 1 discriminator 4
 2164 0042 FB68     	 ldr r3,[r7,#12]
 2165 0044 0133     	 adds r3,r3,#1
 2166 0046 FB60     	 str r3,[r7,#12]
 2167              	.L111:
 518:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2168              	 .loc 2 518 0 is_stmt 0 discriminator 2
 2169 0048 FB68     	 ldr r3,[r7,#12]
 2170 004a 042B     	 cmp r3,#4
 2171 004c E3D9     	 bls .L114
 521:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 522:../Libraries/XMCLib/src/xmc_dma.c ****   }
 523:../Libraries/XMCLib/src/xmc_dma.c **** 
 524:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2172              	 .loc 2 524 0 is_stmt 1
 2173 004e BB68     	 ldr r3,[r7,#8]
 525:../Libraries/XMCLib/src/xmc_dma.c **** }
 2174              	 .loc 2 525 0
 2175 0050 1846     	 mov r0,r3
 2176 0052 1437     	 adds r7,r7,#20
 2177              	.LCFI148:
 2178              	 .cfi_def_cfa_offset 4
 2179 0054 BD46     	 mov sp,r7
 2180              	.LCFI149:
 2181              	 .cfi_def_cfa_register 13
 2182              	 
 2183 0056 5DF8047B 	 ldr r7,[sp],#4
 2184              	.LCFI150:
 2185              	 .cfi_restore 7
 2186              	 .cfi_def_cfa_offset 0
 2187 005a 7047     	 bx lr
 2188              	 .cfi_endproc
 2189              	.LFE180:
 2191              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2192              	 .align 2
 2193              	 .global XMC_DMA_CH_EnableSourceGather
 2194              	 .thumb
 2195              	 .thumb_func
 2197              	XMC_DMA_CH_EnableSourceGather:
 2198              	.LFB181:
 526:../Libraries/XMCLib/src/xmc_dma.c **** 
 527:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 528:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 529:../Libraries/XMCLib/src/xmc_dma.c **** {
 2199              	 .loc 2 529 0
 2200              	 .cfi_startproc
 2201              	 
 2202              	 
 2203              	 
 2204 0000 80B4     	 push {r7}
 2205              	.LCFI151:
 2206              	 .cfi_def_cfa_offset 4
 2207              	 .cfi_offset 7,-4
 2208 0002 85B0     	 sub sp,sp,#20
 2209              	.LCFI152:
 2210              	 .cfi_def_cfa_offset 24
 2211 0004 00AF     	 add r7,sp,#0
 2212              	.LCFI153:
 2213              	 .cfi_def_cfa_register 7
 2214 0006 F860     	 str r0,[r7,#12]
 2215 0008 7A60     	 str r2,[r7,#4]
 2216 000a 1A46     	 mov r2,r3
 2217 000c 0B46     	 mov r3,r1
 2218 000e FB72     	 strb r3,[r7,#11]
 2219 0010 1346     	 mov r3,r2
 2220 0012 3B81     	 strh r3,[r7,#8]
 530:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2221              	 .loc 2 530 0
 2222 0014 FB7A     	 ldrb r3,[r7,#11]
 2223 0016 FA7A     	 ldrb r2,[r7,#11]
 2224 0018 F968     	 ldr r1,[r7,#12]
 2225 001a 5820     	 movs r0,#88
 2226 001c 00FB02F2 	 mul r2,r0,r2
 2227 0020 0A44     	 add r2,r2,r1
 2228 0022 1832     	 adds r2,r2,#24
 2229 0024 1268     	 ldr r2,[r2]
 2230 0026 42F40032 	 orr r2,r2,#131072
 2231 002a F968     	 ldr r1,[r7,#12]
 2232 002c 5820     	 movs r0,#88
 2233 002e 00FB03F3 	 mul r3,r0,r3
 2234 0032 0B44     	 add r3,r3,r1
 2235 0034 1833     	 adds r3,r3,#24
 2236 0036 1A60     	 str r2,[r3]
 531:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2237              	 .loc 2 531 0
 2238 0038 FB7A     	 ldrb r3,[r7,#11]
 2239 003a 3A89     	 ldrh r2,[r7,#8]
 2240 003c 1105     	 lsls r1,r2,#20
 2241 003e 7A68     	 ldr r2,[r7,#4]
 2242 0040 0A43     	 orrs r2,r2,r1
 2243 0042 F968     	 ldr r1,[r7,#12]
 2244 0044 5820     	 movs r0,#88
 2245 0046 00FB03F3 	 mul r3,r0,r3
 2246 004a 0B44     	 add r3,r3,r1
 2247 004c 4833     	 adds r3,r3,#72
 2248 004e 1A60     	 str r2,[r3]
 532:../Libraries/XMCLib/src/xmc_dma.c **** }
 2249              	 .loc 2 532 0
 2250 0050 1437     	 adds r7,r7,#20
 2251              	.LCFI154:
 2252              	 .cfi_def_cfa_offset 4
 2253 0052 BD46     	 mov sp,r7
 2254              	.LCFI155:
 2255              	 .cfi_def_cfa_register 13
 2256              	 
 2257 0054 5DF8047B 	 ldr r7,[sp],#4
 2258              	.LCFI156:
 2259              	 .cfi_restore 7
 2260              	 .cfi_def_cfa_offset 0
 2261 0058 7047     	 bx lr
 2262              	 .cfi_endproc
 2263              	.LFE181:
 2265 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2266              	 .align 2
 2267              	 .global XMC_DMA_CH_DisableSourceGather
 2268              	 .thumb
 2269              	 .thumb_func
 2271              	XMC_DMA_CH_DisableSourceGather:
 2272              	.LFB182:
 533:../Libraries/XMCLib/src/xmc_dma.c **** 
 534:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 535:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 536:../Libraries/XMCLib/src/xmc_dma.c **** {
 2273              	 .loc 2 536 0
 2274              	 .cfi_startproc
 2275              	 
 2276              	 
 2277              	 
 2278 0000 80B4     	 push {r7}
 2279              	.LCFI157:
 2280              	 .cfi_def_cfa_offset 4
 2281              	 .cfi_offset 7,-4
 2282 0002 83B0     	 sub sp,sp,#12
 2283              	.LCFI158:
 2284              	 .cfi_def_cfa_offset 16
 2285 0004 00AF     	 add r7,sp,#0
 2286              	.LCFI159:
 2287              	 .cfi_def_cfa_register 7
 2288 0006 7860     	 str r0,[r7,#4]
 2289 0008 0B46     	 mov r3,r1
 2290 000a FB70     	 strb r3,[r7,#3]
 537:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2291              	 .loc 2 537 0
 2292 000c FB78     	 ldrb r3,[r7,#3]
 2293 000e FA78     	 ldrb r2,[r7,#3]
 2294 0010 7968     	 ldr r1,[r7,#4]
 2295 0012 5820     	 movs r0,#88
 2296 0014 00FB02F2 	 mul r2,r0,r2
 2297 0018 0A44     	 add r2,r2,r1
 2298 001a 1832     	 adds r2,r2,#24
 2299 001c 1268     	 ldr r2,[r2]
 2300 001e 22F40032 	 bic r2,r2,#131072
 2301 0022 7968     	 ldr r1,[r7,#4]
 2302 0024 5820     	 movs r0,#88
 2303 0026 00FB03F3 	 mul r3,r0,r3
 2304 002a 0B44     	 add r3,r3,r1
 2305 002c 1833     	 adds r3,r3,#24
 2306 002e 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_dma.c **** }
 2307              	 .loc 2 538 0
 2308 0030 0C37     	 adds r7,r7,#12
 2309              	.LCFI160:
 2310              	 .cfi_def_cfa_offset 4
 2311 0032 BD46     	 mov sp,r7
 2312              	.LCFI161:
 2313              	 .cfi_def_cfa_register 13
 2314              	 
 2315 0034 5DF8047B 	 ldr r7,[sp],#4
 2316              	.LCFI162:
 2317              	 .cfi_restore 7
 2318              	 .cfi_def_cfa_offset 0
 2319 0038 7047     	 bx lr
 2320              	 .cfi_endproc
 2321              	.LFE182:
 2323 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2324              	 .align 2
 2325              	 .global XMC_DMA_CH_EnableDestinationScatter
 2326              	 .thumb
 2327              	 .thumb_func
 2329              	XMC_DMA_CH_EnableDestinationScatter:
 2330              	.LFB183:
 539:../Libraries/XMCLib/src/xmc_dma.c **** 
 540:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 541:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 542:../Libraries/XMCLib/src/xmc_dma.c **** {
 2331              	 .loc 2 542 0
 2332              	 .cfi_startproc
 2333              	 
 2334              	 
 2335              	 
 2336 0000 80B4     	 push {r7}
 2337              	.LCFI163:
 2338              	 .cfi_def_cfa_offset 4
 2339              	 .cfi_offset 7,-4
 2340 0002 85B0     	 sub sp,sp,#20
 2341              	.LCFI164:
 2342              	 .cfi_def_cfa_offset 24
 2343 0004 00AF     	 add r7,sp,#0
 2344              	.LCFI165:
 2345              	 .cfi_def_cfa_register 7
 2346 0006 F860     	 str r0,[r7,#12]
 2347 0008 7A60     	 str r2,[r7,#4]
 2348 000a 1A46     	 mov r2,r3
 2349 000c 0B46     	 mov r3,r1
 2350 000e FB72     	 strb r3,[r7,#11]
 2351 0010 1346     	 mov r3,r2
 2352 0012 3B81     	 strh r3,[r7,#8]
 543:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2353              	 .loc 2 543 0
 2354 0014 FB7A     	 ldrb r3,[r7,#11]
 2355 0016 FA7A     	 ldrb r2,[r7,#11]
 2356 0018 F968     	 ldr r1,[r7,#12]
 2357 001a 5820     	 movs r0,#88
 2358 001c 00FB02F2 	 mul r2,r0,r2
 2359 0020 0A44     	 add r2,r2,r1
 2360 0022 1832     	 adds r2,r2,#24
 2361 0024 1268     	 ldr r2,[r2]
 2362 0026 42F48022 	 orr r2,r2,#262144
 2363 002a F968     	 ldr r1,[r7,#12]
 2364 002c 5820     	 movs r0,#88
 2365 002e 00FB03F3 	 mul r3,r0,r3
 2366 0032 0B44     	 add r3,r3,r1
 2367 0034 1833     	 adds r3,r3,#24
 2368 0036 1A60     	 str r2,[r3]
 544:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2369              	 .loc 2 544 0
 2370 0038 FB7A     	 ldrb r3,[r7,#11]
 2371 003a 3A89     	 ldrh r2,[r7,#8]
 2372 003c 1105     	 lsls r1,r2,#20
 2373 003e 7A68     	 ldr r2,[r7,#4]
 2374 0040 0A43     	 orrs r2,r2,r1
 2375 0042 F968     	 ldr r1,[r7,#12]
 2376 0044 5820     	 movs r0,#88
 2377 0046 00FB03F3 	 mul r3,r0,r3
 2378 004a 0B44     	 add r3,r3,r1
 2379 004c 5033     	 adds r3,r3,#80
 2380 004e 1A60     	 str r2,[r3]
 545:../Libraries/XMCLib/src/xmc_dma.c **** }
 2381              	 .loc 2 545 0
 2382 0050 1437     	 adds r7,r7,#20
 2383              	.LCFI166:
 2384              	 .cfi_def_cfa_offset 4
 2385 0052 BD46     	 mov sp,r7
 2386              	.LCFI167:
 2387              	 .cfi_def_cfa_register 13
 2388              	 
 2389 0054 5DF8047B 	 ldr r7,[sp],#4
 2390              	.LCFI168:
 2391              	 .cfi_restore 7
 2392              	 .cfi_def_cfa_offset 0
 2393 0058 7047     	 bx lr
 2394              	 .cfi_endproc
 2395              	.LFE183:
 2397 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2398              	 .align 2
 2399              	 .global XMC_DMA_CH_DisableDestinationScatter
 2400              	 .thumb
 2401              	 .thumb_func
 2403              	XMC_DMA_CH_DisableDestinationScatter:
 2404              	.LFB184:
 546:../Libraries/XMCLib/src/xmc_dma.c **** 
 547:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 548:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 549:../Libraries/XMCLib/src/xmc_dma.c **** {
 2405              	 .loc 2 549 0
 2406              	 .cfi_startproc
 2407              	 
 2408              	 
 2409              	 
 2410 0000 80B4     	 push {r7}
 2411              	.LCFI169:
 2412              	 .cfi_def_cfa_offset 4
 2413              	 .cfi_offset 7,-4
 2414 0002 83B0     	 sub sp,sp,#12
 2415              	.LCFI170:
 2416              	 .cfi_def_cfa_offset 16
 2417 0004 00AF     	 add r7,sp,#0
 2418              	.LCFI171:
 2419              	 .cfi_def_cfa_register 7
 2420 0006 7860     	 str r0,[r7,#4]
 2421 0008 0B46     	 mov r3,r1
 2422 000a FB70     	 strb r3,[r7,#3]
 550:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2423              	 .loc 2 550 0
 2424 000c FB78     	 ldrb r3,[r7,#3]
 2425 000e FA78     	 ldrb r2,[r7,#3]
 2426 0010 7968     	 ldr r1,[r7,#4]
 2427 0012 5820     	 movs r0,#88
 2428 0014 00FB02F2 	 mul r2,r0,r2
 2429 0018 0A44     	 add r2,r2,r1
 2430 001a 1832     	 adds r2,r2,#24
 2431 001c 1268     	 ldr r2,[r2]
 2432 001e 22F48022 	 bic r2,r2,#262144
 2433 0022 7968     	 ldr r1,[r7,#4]
 2434 0024 5820     	 movs r0,#88
 2435 0026 00FB03F3 	 mul r3,r0,r3
 2436 002a 0B44     	 add r3,r3,r1
 2437 002c 1833     	 adds r3,r3,#24
 2438 002e 1A60     	 str r2,[r3]
 551:../Libraries/XMCLib/src/xmc_dma.c **** }
 2439              	 .loc 2 551 0
 2440 0030 0C37     	 adds r7,r7,#12
 2441              	.LCFI172:
 2442              	 .cfi_def_cfa_offset 4
 2443 0032 BD46     	 mov sp,r7
 2444              	.LCFI173:
 2445              	 .cfi_def_cfa_register 13
 2446              	 
 2447 0034 5DF8047B 	 ldr r7,[sp],#4
 2448              	.LCFI174:
 2449              	 .cfi_restore 7
 2450              	 .cfi_def_cfa_offset 0
 2451 0038 7047     	 bx lr
 2452              	 .cfi_endproc
 2453              	.LFE184:
 2455 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2456              	 .align 2
 2457              	 .global XMC_DMA_CH_TriggerSourceRequest
 2458              	 .thumb
 2459              	 .thumb_func
 2461              	XMC_DMA_CH_TriggerSourceRequest:
 2462              	.LFB185:
 552:../Libraries/XMCLib/src/xmc_dma.c **** 
 553:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 554:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 555:../Libraries/XMCLib/src/xmc_dma.c **** {
 2463              	 .loc 2 555 0
 2464              	 .cfi_startproc
 2465              	 
 2466              	 
 2467              	 
 2468 0000 80B4     	 push {r7}
 2469              	.LCFI175:
 2470              	 .cfi_def_cfa_offset 4
 2471              	 .cfi_offset 7,-4
 2472 0002 83B0     	 sub sp,sp,#12
 2473              	.LCFI176:
 2474              	 .cfi_def_cfa_offset 16
 2475 0004 00AF     	 add r7,sp,#0
 2476              	.LCFI177:
 2477              	 .cfi_def_cfa_register 7
 2478 0006 7860     	 str r0,[r7,#4]
 2479 0008 0846     	 mov r0,r1
 2480 000a 1146     	 mov r1,r2
 2481 000c 1A46     	 mov r2,r3
 2482 000e 0346     	 mov r3,r0
 2483 0010 FB70     	 strb r3,[r7,#3]
 2484 0012 0B46     	 mov r3,r1
 2485 0014 BB70     	 strb r3,[r7,#2]
 2486 0016 1346     	 mov r3,r2
 2487 0018 7B70     	 strb r3,[r7,#1]
 556:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2488              	 .loc 2 556 0
 2489 001a BB78     	 ldrb r3,[r7,#2]
 2490 001c 002B     	 cmp r3,#0
 2491 001e 06D1     	 bne .L121
 557:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 558:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2492              	 .loc 2 558 0
 2493 0020 FB78     	 ldrb r3,[r7,#3]
 2494 0022 40F20112 	 movw r2,#257
 2495 0026 9A40     	 lsls r2,r2,r3
 2496 0028 7B68     	 ldr r3,[r7,#4]
 2497 002a C3F87823 	 str r2,[r3,#888]
 2498              	.L121:
 559:../Libraries/XMCLib/src/xmc_dma.c ****   }
 560:../Libraries/XMCLib/src/xmc_dma.c **** 
 561:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2499              	 .loc 2 561 0
 2500 002e 7B78     	 ldrb r3,[r7,#1]
 2501 0030 002B     	 cmp r3,#0
 2502 0032 06D0     	 beq .L122
 562:../Libraries/XMCLib/src/xmc_dma.c ****   {
 563:../Libraries/XMCLib/src/xmc_dma.c ****   dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2503              	 .loc 2 563 0
 2504 0034 FB78     	 ldrb r3,[r7,#3]
 2505 0036 40F20112 	 movw r2,#257
 2506 003a 9A40     	 lsls r2,r2,r3
 2507 003c 7B68     	 ldr r3,[r7,#4]
 2508 003e C3F88823 	 str r2,[r3,#904]
 2509              	.L122:
 564:../Libraries/XMCLib/src/xmc_dma.c ****   }
 565:../Libraries/XMCLib/src/xmc_dma.c ****   
 566:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2510              	 .loc 2 566 0
 2511 0042 FB78     	 ldrb r3,[r7,#3]
 2512 0044 40F20112 	 movw r2,#257
 2513 0048 9A40     	 lsls r2,r2,r3
 2514 004a 7B68     	 ldr r3,[r7,#4]
 2515 004c C3F86823 	 str r2,[r3,#872]
 567:../Libraries/XMCLib/src/xmc_dma.c **** }
 2516              	 .loc 2 567 0
 2517 0050 0C37     	 adds r7,r7,#12
 2518              	.LCFI178:
 2519              	 .cfi_def_cfa_offset 4
 2520 0052 BD46     	 mov sp,r7
 2521              	.LCFI179:
 2522              	 .cfi_def_cfa_register 13
 2523              	 
 2524 0054 5DF8047B 	 ldr r7,[sp],#4
 2525              	.LCFI180:
 2526              	 .cfi_restore 7
 2527              	 .cfi_def_cfa_offset 0
 2528 0058 7047     	 bx lr
 2529              	 .cfi_endproc
 2530              	.LFE185:
 2532 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2533              	 .align 2
 2534              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2535              	 .thumb
 2536              	 .thumb_func
 2538              	XMC_DMA_CH_TriggerDestinationRequest:
 2539              	.LFB186:
 568:../Libraries/XMCLib/src/xmc_dma.c **** 
 569:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 570:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 571:../Libraries/XMCLib/src/xmc_dma.c **** {
 2540              	 .loc 2 571 0
 2541              	 .cfi_startproc
 2542              	 
 2543              	 
 2544              	 
 2545 0000 80B4     	 push {r7}
 2546              	.LCFI181:
 2547              	 .cfi_def_cfa_offset 4
 2548              	 .cfi_offset 7,-4
 2549 0002 83B0     	 sub sp,sp,#12
 2550              	.LCFI182:
 2551              	 .cfi_def_cfa_offset 16
 2552 0004 00AF     	 add r7,sp,#0
 2553              	.LCFI183:
 2554              	 .cfi_def_cfa_register 7
 2555 0006 7860     	 str r0,[r7,#4]
 2556 0008 0846     	 mov r0,r1
 2557 000a 1146     	 mov r1,r2
 2558 000c 1A46     	 mov r2,r3
 2559 000e 0346     	 mov r3,r0
 2560 0010 FB70     	 strb r3,[r7,#3]
 2561 0012 0B46     	 mov r3,r1
 2562 0014 BB70     	 strb r3,[r7,#2]
 2563 0016 1346     	 mov r3,r2
 2564 0018 7B70     	 strb r3,[r7,#1]
 572:../Libraries/XMCLib/src/xmc_dma.c ****   if(type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2565              	 .loc 2 572 0
 2566 001a BB78     	 ldrb r3,[r7,#2]
 2567 001c 002B     	 cmp r3,#0
 2568 001e 06D1     	 bne .L124
 573:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 574:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2569              	 .loc 2 574 0
 2570 0020 FB78     	 ldrb r3,[r7,#3]
 2571 0022 40F20112 	 movw r2,#257
 2572 0026 9A40     	 lsls r2,r2,r3
 2573 0028 7B68     	 ldr r3,[r7,#4]
 2574 002a C3F88023 	 str r2,[r3,#896]
 2575              	.L124:
 575:../Libraries/XMCLib/src/xmc_dma.c ****   }
 576:../Libraries/XMCLib/src/xmc_dma.c **** 
 577:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2576              	 .loc 2 577 0
 2577 002e 7B78     	 ldrb r3,[r7,#1]
 2578 0030 002B     	 cmp r3,#0
 2579 0032 06D0     	 beq .L125
 578:../Libraries/XMCLib/src/xmc_dma.c ****   {
 579:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2580              	 .loc 2 579 0
 2581 0034 FB78     	 ldrb r3,[r7,#3]
 2582 0036 40F20112 	 movw r2,#257
 2583 003a 9A40     	 lsls r2,r2,r3
 2584 003c 7B68     	 ldr r3,[r7,#4]
 2585 003e C3F89023 	 str r2,[r3,#912]
 2586              	.L125:
 580:../Libraries/XMCLib/src/xmc_dma.c ****   }
 581:../Libraries/XMCLib/src/xmc_dma.c **** 
 582:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2587              	 .loc 2 582 0
 2588 0042 FB78     	 ldrb r3,[r7,#3]
 2589 0044 40F20112 	 movw r2,#257
 2590 0048 9A40     	 lsls r2,r2,r3
 2591 004a 7B68     	 ldr r3,[r7,#4]
 2592 004c C3F87023 	 str r2,[r3,#880]
 583:../Libraries/XMCLib/src/xmc_dma.c **** }
 2593              	 .loc 2 583 0
 2594 0050 0C37     	 adds r7,r7,#12
 2595              	.LCFI184:
 2596              	 .cfi_def_cfa_offset 4
 2597 0052 BD46     	 mov sp,r7
 2598              	.LCFI185:
 2599              	 .cfi_def_cfa_register 13
 2600              	 
 2601 0054 5DF8047B 	 ldr r7,[sp],#4
 2602              	.LCFI186:
 2603              	 .cfi_restore 7
 2604              	 .cfi_def_cfa_offset 0
 2605 0058 7047     	 bx lr
 2606              	 .cfi_endproc
 2607              	.LFE186:
 2609 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2610              	 .align 2
 2611              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2612              	 .thumb
 2613              	 .thumb_func
 2615              	XMC_DMA_CH_EnableSourceAddressReload:
 2616              	.LFB187:
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 586:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 587:../Libraries/XMCLib/src/xmc_dma.c **** {
 2617              	 .loc 2 587 0
 2618              	 .cfi_startproc
 2619              	 
 2620              	 
 2621              	 
 2622 0000 80B4     	 push {r7}
 2623              	.LCFI187:
 2624              	 .cfi_def_cfa_offset 4
 2625              	 .cfi_offset 7,-4
 2626 0002 83B0     	 sub sp,sp,#12
 2627              	.LCFI188:
 2628              	 .cfi_def_cfa_offset 16
 2629 0004 00AF     	 add r7,sp,#0
 2630              	.LCFI189:
 2631              	 .cfi_def_cfa_register 7
 2632 0006 7860     	 str r0,[r7,#4]
 2633 0008 0B46     	 mov r3,r1
 2634 000a FB70     	 strb r3,[r7,#3]
 588:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2635              	 .loc 2 588 0
 2636 000c FB78     	 ldrb r3,[r7,#3]
 2637 000e FA78     	 ldrb r2,[r7,#3]
 2638 0010 7968     	 ldr r1,[r7,#4]
 2639 0012 5820     	 movs r0,#88
 2640 0014 00FB02F2 	 mul r2,r0,r2
 2641 0018 0A44     	 add r2,r2,r1
 2642 001a 4032     	 adds r2,r2,#64
 2643 001c 1268     	 ldr r2,[r2]
 2644 001e 42F08042 	 orr r2,r2,#1073741824
 2645 0022 7968     	 ldr r1,[r7,#4]
 2646 0024 5820     	 movs r0,#88
 2647 0026 00FB03F3 	 mul r3,r0,r3
 2648 002a 0B44     	 add r3,r3,r1
 2649 002c 4033     	 adds r3,r3,#64
 2650 002e 1A60     	 str r2,[r3]
 589:../Libraries/XMCLib/src/xmc_dma.c **** }
 2651              	 .loc 2 589 0
 2652 0030 0C37     	 adds r7,r7,#12
 2653              	.LCFI190:
 2654              	 .cfi_def_cfa_offset 4
 2655 0032 BD46     	 mov sp,r7
 2656              	.LCFI191:
 2657              	 .cfi_def_cfa_register 13
 2658              	 
 2659 0034 5DF8047B 	 ldr r7,[sp],#4
 2660              	.LCFI192:
 2661              	 .cfi_restore 7
 2662              	 .cfi_def_cfa_offset 0
 2663 0038 7047     	 bx lr
 2664              	 .cfi_endproc
 2665              	.LFE187:
 2667 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2668              	 .align 2
 2669              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2670              	 .thumb
 2671              	 .thumb_func
 2673              	XMC_DMA_CH_DisableSourceAddressReload:
 2674              	.LFB188:
 590:../Libraries/XMCLib/src/xmc_dma.c **** 
 591:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 592:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 593:../Libraries/XMCLib/src/xmc_dma.c **** {
 2675              	 .loc 2 593 0
 2676              	 .cfi_startproc
 2677              	 
 2678              	 
 2679              	 
 2680 0000 80B4     	 push {r7}
 2681              	.LCFI193:
 2682              	 .cfi_def_cfa_offset 4
 2683              	 .cfi_offset 7,-4
 2684 0002 83B0     	 sub sp,sp,#12
 2685              	.LCFI194:
 2686              	 .cfi_def_cfa_offset 16
 2687 0004 00AF     	 add r7,sp,#0
 2688              	.LCFI195:
 2689              	 .cfi_def_cfa_register 7
 2690 0006 7860     	 str r0,[r7,#4]
 2691 0008 0B46     	 mov r3,r1
 2692 000a FB70     	 strb r3,[r7,#3]
 594:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2693              	 .loc 2 594 0
 2694 000c FB78     	 ldrb r3,[r7,#3]
 2695 000e FA78     	 ldrb r2,[r7,#3]
 2696 0010 7968     	 ldr r1,[r7,#4]
 2697 0012 5820     	 movs r0,#88
 2698 0014 00FB02F2 	 mul r2,r0,r2
 2699 0018 0A44     	 add r2,r2,r1
 2700 001a 4032     	 adds r2,r2,#64
 2701 001c 1268     	 ldr r2,[r2]
 2702 001e 22F08042 	 bic r2,r2,#1073741824
 2703 0022 7968     	 ldr r1,[r7,#4]
 2704 0024 5820     	 movs r0,#88
 2705 0026 00FB03F3 	 mul r3,r0,r3
 2706 002a 0B44     	 add r3,r3,r1
 2707 002c 4033     	 adds r3,r3,#64
 2708 002e 1A60     	 str r2,[r3]
 595:../Libraries/XMCLib/src/xmc_dma.c **** }
 2709              	 .loc 2 595 0
 2710 0030 0C37     	 adds r7,r7,#12
 2711              	.LCFI196:
 2712              	 .cfi_def_cfa_offset 4
 2713 0032 BD46     	 mov sp,r7
 2714              	.LCFI197:
 2715              	 .cfi_def_cfa_register 13
 2716              	 
 2717 0034 5DF8047B 	 ldr r7,[sp],#4
 2718              	.LCFI198:
 2719              	 .cfi_restore 7
 2720              	 .cfi_def_cfa_offset 0
 2721 0038 7047     	 bx lr
 2722              	 .cfi_endproc
 2723              	.LFE188:
 2725 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2726              	 .align 2
 2727              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2728              	 .thumb
 2729              	 .thumb_func
 2731              	XMC_DMA_CH_EnableDestinationAddressReload:
 2732              	.LFB189:
 596:../Libraries/XMCLib/src/xmc_dma.c **** 
 597:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 598:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 599:../Libraries/XMCLib/src/xmc_dma.c **** {
 2733              	 .loc 2 599 0
 2734              	 .cfi_startproc
 2735              	 
 2736              	 
 2737              	 
 2738 0000 80B4     	 push {r7}
 2739              	.LCFI199:
 2740              	 .cfi_def_cfa_offset 4
 2741              	 .cfi_offset 7,-4
 2742 0002 83B0     	 sub sp,sp,#12
 2743              	.LCFI200:
 2744              	 .cfi_def_cfa_offset 16
 2745 0004 00AF     	 add r7,sp,#0
 2746              	.LCFI201:
 2747              	 .cfi_def_cfa_register 7
 2748 0006 7860     	 str r0,[r7,#4]
 2749 0008 0B46     	 mov r3,r1
 2750 000a FB70     	 strb r3,[r7,#3]
 600:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2751              	 .loc 2 600 0
 2752 000c FB78     	 ldrb r3,[r7,#3]
 2753 000e FA78     	 ldrb r2,[r7,#3]
 2754 0010 7968     	 ldr r1,[r7,#4]
 2755 0012 5820     	 movs r0,#88
 2756 0014 00FB02F2 	 mul r2,r0,r2
 2757 0018 0A44     	 add r2,r2,r1
 2758 001a 4032     	 adds r2,r2,#64
 2759 001c 1268     	 ldr r2,[r2]
 2760 001e 42F00042 	 orr r2,r2,#-2147483648
 2761 0022 7968     	 ldr r1,[r7,#4]
 2762 0024 5820     	 movs r0,#88
 2763 0026 00FB03F3 	 mul r3,r0,r3
 2764 002a 0B44     	 add r3,r3,r1
 2765 002c 4033     	 adds r3,r3,#64
 2766 002e 1A60     	 str r2,[r3]
 601:../Libraries/XMCLib/src/xmc_dma.c **** }
 2767              	 .loc 2 601 0
 2768 0030 0C37     	 adds r7,r7,#12
 2769              	.LCFI202:
 2770              	 .cfi_def_cfa_offset 4
 2771 0032 BD46     	 mov sp,r7
 2772              	.LCFI203:
 2773              	 .cfi_def_cfa_register 13
 2774              	 
 2775 0034 5DF8047B 	 ldr r7,[sp],#4
 2776              	.LCFI204:
 2777              	 .cfi_restore 7
 2778              	 .cfi_def_cfa_offset 0
 2779 0038 7047     	 bx lr
 2780              	 .cfi_endproc
 2781              	.LFE189:
 2783 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2784              	 .align 2
 2785              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2786              	 .thumb
 2787              	 .thumb_func
 2789              	XMC_DMA_CH_DisableDestinationAddressReload:
 2790              	.LFB190:
 602:../Libraries/XMCLib/src/xmc_dma.c **** 
 603:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 604:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 605:../Libraries/XMCLib/src/xmc_dma.c **** {
 2791              	 .loc 2 605 0
 2792              	 .cfi_startproc
 2793              	 
 2794              	 
 2795              	 
 2796 0000 80B4     	 push {r7}
 2797              	.LCFI205:
 2798              	 .cfi_def_cfa_offset 4
 2799              	 .cfi_offset 7,-4
 2800 0002 83B0     	 sub sp,sp,#12
 2801              	.LCFI206:
 2802              	 .cfi_def_cfa_offset 16
 2803 0004 00AF     	 add r7,sp,#0
 2804              	.LCFI207:
 2805              	 .cfi_def_cfa_register 7
 2806 0006 7860     	 str r0,[r7,#4]
 2807 0008 0B46     	 mov r3,r1
 2808 000a FB70     	 strb r3,[r7,#3]
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2809              	 .loc 2 606 0
 2810 000c FB78     	 ldrb r3,[r7,#3]
 2811 000e FA78     	 ldrb r2,[r7,#3]
 2812 0010 7968     	 ldr r1,[r7,#4]
 2813 0012 5820     	 movs r0,#88
 2814 0014 00FB02F2 	 mul r2,r0,r2
 2815 0018 0A44     	 add r2,r2,r1
 2816 001a 4032     	 adds r2,r2,#64
 2817 001c 1268     	 ldr r2,[r2]
 2818 001e 22F00042 	 bic r2,r2,#-2147483648
 2819 0022 7968     	 ldr r1,[r7,#4]
 2820 0024 5820     	 movs r0,#88
 2821 0026 00FB03F3 	 mul r3,r0,r3
 2822 002a 0B44     	 add r3,r3,r1
 2823 002c 4033     	 adds r3,r3,#64
 2824 002e 1A60     	 str r2,[r3]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2825              	 .loc 2 607 0
 2826 0030 0C37     	 adds r7,r7,#12
 2827              	.LCFI208:
 2828              	 .cfi_def_cfa_offset 4
 2829 0032 BD46     	 mov sp,r7
 2830              	.LCFI209:
 2831              	 .cfi_def_cfa_register 13
 2832              	 
 2833 0034 5DF8047B 	 ldr r7,[sp],#4
 2834              	.LCFI210:
 2835              	 .cfi_restore 7
 2836              	 .cfi_def_cfa_offset 0
 2837 0038 7047     	 bx lr
 2838              	 .cfi_endproc
 2839              	.LFE190:
 2841 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2842              	 .align 2
 2843              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2844              	 .thumb
 2845              	 .thumb_func
 2847              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2848              	.LFB191:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2849              	 .loc 2 611 0
 2850              	 .cfi_startproc
 2851              	 
 2852              	 
 2853              	 
 2854 0000 80B4     	 push {r7}
 2855              	.LCFI211:
 2856              	 .cfi_def_cfa_offset 4
 2857              	 .cfi_offset 7,-4
 2858 0002 83B0     	 sub sp,sp,#12
 2859              	.LCFI212:
 2860              	 .cfi_def_cfa_offset 16
 2861 0004 00AF     	 add r7,sp,#0
 2862              	.LCFI213:
 2863              	 .cfi_def_cfa_register 7
 2864 0006 7860     	 str r0,[r7,#4]
 2865 0008 0B46     	 mov r3,r1
 2866 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2867              	 .loc 2 612 0
 2868 000c FB78     	 ldrb r3,[r7,#3]
 2869 000e FA78     	 ldrb r2,[r7,#3]
 2870 0010 7968     	 ldr r1,[r7,#4]
 2871 0012 5820     	 movs r0,#88
 2872 0014 00FB02F2 	 mul r2,r0,r2
 2873 0018 0A44     	 add r2,r2,r1
 2874 001a 4032     	 adds r2,r2,#64
 2875 001c 1268     	 ldr r2,[r2]
 2876 001e 22F04042 	 bic r2,r2,#-1073741824
 2877 0022 7968     	 ldr r1,[r7,#4]
 2878 0024 5820     	 movs r0,#88
 2879 0026 00FB03F3 	 mul r3,r0,r3
 2880 002a 0B44     	 add r3,r3,r1
 2881 002c 4033     	 adds r3,r3,#64
 2882 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2883              	 .loc 2 613 0
 2884 0030 0C37     	 adds r7,r7,#12
 2885              	.LCFI214:
 2886              	 .cfi_def_cfa_offset 4
 2887 0032 BD46     	 mov sp,r7
 2888              	.LCFI215:
 2889              	 .cfi_def_cfa_register 13
 2890              	 
 2891 0034 5DF8047B 	 ldr r7,[sp],#4
 2892              	.LCFI216:
 2893              	 .cfi_restore 7
 2894              	 .cfi_def_cfa_offset 0
 2895 0038 7047     	 bx lr
 2896              	 .cfi_endproc
 2897              	.LFE191:
 2899 003a 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2900              	 .align 2
 2901              	 .global XMC_DMA_CH_SetEventHandler
 2902              	 .thumb
 2903              	 .thumb_func
 2905              	XMC_DMA_CH_SetEventHandler:
 2906              	.LFB192:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2907              	 .loc 2 617 0
 2908              	 .cfi_startproc
 2909              	 
 2910              	 
 2911              	 
 2912 0000 80B4     	 push {r7}
 2913              	.LCFI217:
 2914              	 .cfi_def_cfa_offset 4
 2915              	 .cfi_offset 7,-4
 2916 0002 85B0     	 sub sp,sp,#20
 2917              	.LCFI218:
 2918              	 .cfi_def_cfa_offset 24
 2919 0004 00AF     	 add r7,sp,#0
 2920              	.LCFI219:
 2921              	 .cfi_def_cfa_register 7
 2922 0006 F860     	 str r0,[r7,#12]
 2923 0008 0B46     	 mov r3,r1
 2924 000a 7A60     	 str r2,[r7,#4]
 2925 000c FB72     	 strb r3,[r7,#11]
 618:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 619:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 2926              	 .loc 2 619 0
 2927 000e FB68     	 ldr r3,[r7,#12]
 2928 0010 094A     	 ldr r2,.L134
 2929 0012 9342     	 cmp r3,r2
 2930 0014 05D1     	 bne .L132
 620:../Libraries/XMCLib/src/xmc_dma.c ****   {
 621:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 622:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2931              	 .loc 2 622 0
 2932 0016 FB7A     	 ldrb r3,[r7,#11]
 2933 0018 0849     	 ldr r1,.L134+4
 2934 001a 7A68     	 ldr r2,[r7,#4]
 2935 001c 41F82320 	 str r2,[r1,r3,lsl#2]
 2936 0020 04E0     	 b .L131
 2937              	.L132:
 623:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 624:../Libraries/XMCLib/src/xmc_dma.c ****   }
 625:../Libraries/XMCLib/src/xmc_dma.c ****   else
 626:../Libraries/XMCLib/src/xmc_dma.c ****   {
 627:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 2938              	 .loc 2 627 0
 2939 0022 FB7A     	 ldrb r3,[r7,#11]
 2940 0024 0649     	 ldr r1,.L134+8
 2941 0026 7A68     	 ldr r2,[r7,#4]
 2942 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 2943              	.L131:
 628:../Libraries/XMCLib/src/xmc_dma.c ****   }
 629:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 630:../Libraries/XMCLib/src/xmc_dma.c **** }
 2944              	 .loc 2 630 0
 2945 002c 1437     	 adds r7,r7,#20
 2946              	.LCFI220:
 2947              	 .cfi_def_cfa_offset 4
 2948 002e BD46     	 mov sp,r7
 2949              	.LCFI221:
 2950              	 .cfi_def_cfa_register 13
 2951              	 
 2952 0030 5DF8047B 	 ldr r7,[sp],#4
 2953              	.LCFI222:
 2954              	 .cfi_restore 7
 2955              	 .cfi_def_cfa_offset 0
 2956 0034 7047     	 bx lr
 2957              	.L135:
 2958 0036 00BF     	 .align 2
 2959              	.L134:
 2960 0038 00400150 	 .word 1342259200
 2961 003c 00000000 	 .word dma0_event_handlers
 2962 0040 00000000 	 .word dma1_event_handlers
 2963              	 .cfi_endproc
 2964              	.LFE192:
 2966              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2967              	 .align 2
 2968              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2969              	 .thumb
 2970              	 .thumb_func
 2972              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2973              	.LFB193:
 631:../Libraries/XMCLib/src/xmc_dma.c **** 
 632:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 633:../Libraries/XMCLib/src/xmc_dma.c **** {
 2974              	 .loc 2 633 0
 2975              	 .cfi_startproc
 2976              	 
 2977              	 
 2978 0000 80B5     	 push {r7,lr}
 2979              	.LCFI223:
 2980              	 .cfi_def_cfa_offset 8
 2981              	 .cfi_offset 7,-8
 2982              	 .cfi_offset 14,-4
 2983 0002 84B0     	 sub sp,sp,#16
 2984              	.LCFI224:
 2985              	 .cfi_def_cfa_offset 24
 2986 0004 00AF     	 add r7,sp,#0
 2987              	.LCFI225:
 2988              	 .cfi_def_cfa_register 7
 2989 0006 7860     	 str r0,[r7,#4]
 2990 0008 0B46     	 mov r3,r1
 2991 000a FB70     	 strb r3,[r7,#3]
 634:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 635:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2992              	 .loc 2 635 0
 2993 000c FB78     	 ldrb r3,[r7,#3]
 2994 000e 7A68     	 ldr r2,[r7,#4]
 2995 0010 5821     	 movs r1,#88
 2996 0012 01FB03F3 	 mul r3,r1,r3
 2997 0016 1344     	 add r3,r3,r2
 2998 0018 4033     	 adds r3,r3,#64
 2999 001a 5B68     	 ldr r3,[r3,#4]
 3000 001c 03F4F063 	 and r3,r3,#1920
 3001 0020 DB09     	 lsrs r3,r3,#7
 3002 0022 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_dma.c **** 
 637:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3003              	 .loc 2 637 0
 3004 0024 FB68     	 ldr r3,[r7,#12]
 3005 0026 DBB2     	 uxtb r3,r3
 3006 0028 7868     	 ldr r0,[r7,#4]
 3007 002a 1946     	 mov r1,r3
 3008 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 638:../Libraries/XMCLib/src/xmc_dma.c **** }
 3009              	 .loc 2 638 0
 3010 0030 1037     	 adds r7,r7,#16
 3011              	.LCFI226:
 3012              	 .cfi_def_cfa_offset 8
 3013 0032 BD46     	 mov sp,r7
 3014              	.LCFI227:
 3015              	 .cfi_def_cfa_register 13
 3016              	 
 3017 0034 80BD     	 pop {r7,pc}
 3018              	 .cfi_endproc
 3019              	.LFE193:
 3021 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 3022              	 .align 2
 3023              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 3024              	 .thumb
 3025              	 .thumb_func
 3027              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 3028              	.LFB194:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 641:../Libraries/XMCLib/src/xmc_dma.c **** {
 3029              	 .loc 2 641 0
 3030              	 .cfi_startproc
 3031              	 
 3032              	 
 3033 0000 80B5     	 push {r7,lr}
 3034              	.LCFI228:
 3035              	 .cfi_def_cfa_offset 8
 3036              	 .cfi_offset 7,-8
 3037              	 .cfi_offset 14,-4
 3038 0002 84B0     	 sub sp,sp,#16
 3039              	.LCFI229:
 3040              	 .cfi_def_cfa_offset 24
 3041 0004 00AF     	 add r7,sp,#0
 3042              	.LCFI230:
 3043              	 .cfi_def_cfa_register 7
 3044 0006 7860     	 str r0,[r7,#4]
 3045 0008 0B46     	 mov r3,r1
 3046 000a FB70     	 strb r3,[r7,#3]
 642:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 643:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 3047              	 .loc 2 643 0
 3048 000c FB78     	 ldrb r3,[r7,#3]
 3049 000e 7A68     	 ldr r2,[r7,#4]
 3050 0010 5821     	 movs r1,#88
 3051 0012 01FB03F3 	 mul r3,r1,r3
 3052 0016 1344     	 add r3,r3,r2
 3053 0018 4033     	 adds r3,r3,#64
 3054 001a 5B68     	 ldr r3,[r3,#4]
 3055 001c 03F4F043 	 and r3,r3,#30720
 3056 0020 DB0A     	 lsrs r3,r3,#11
 3057 0022 FB60     	 str r3,[r7,#12]
 644:../Libraries/XMCLib/src/xmc_dma.c **** 
 645:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3058              	 .loc 2 645 0
 3059 0024 FB68     	 ldr r3,[r7,#12]
 3060 0026 DBB2     	 uxtb r3,r3
 3061 0028 7868     	 ldr r0,[r7,#4]
 3062 002a 1946     	 mov r1,r3
 3063 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 646:../Libraries/XMCLib/src/xmc_dma.c **** }
 3064              	 .loc 2 646 0
 3065 0030 1037     	 adds r7,r7,#16
 3066              	.LCFI231:
 3067              	 .cfi_def_cfa_offset 8
 3068 0032 BD46     	 mov sp,r7
 3069              	.LCFI232:
 3070              	 .cfi_def_cfa_register 13
 3071              	 
 3072 0034 80BD     	 pop {r7,pc}
 3073              	 .cfi_endproc
 3074              	.LFE194:
 3076 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 3077              	 .align 2
 3078              	 .global XMC_DMA_IRQHandler
 3079              	 .thumb
 3080              	 .thumb_func
 3082              	XMC_DMA_IRQHandler:
 3083              	.LFB195:
 647:../Libraries/XMCLib/src/xmc_dma.c **** 
 648:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 649:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 650:../Libraries/XMCLib/src/xmc_dma.c **** {
 3084              	 .loc 2 650 0
 3085              	 .cfi_startproc
 3086              	 
 3087              	 
 3088 0000 80B5     	 push {r7,lr}
 3089              	.LCFI233:
 3090              	 .cfi_def_cfa_offset 8
 3091              	 .cfi_offset 7,-8
 3092              	 .cfi_offset 14,-4
 3093 0002 88B0     	 sub sp,sp,#32
 3094              	.LCFI234:
 3095              	 .cfi_def_cfa_offset 40
 3096 0004 00AF     	 add r7,sp,#0
 3097              	.LCFI235:
 3098              	 .cfi_def_cfa_register 7
 3099 0006 7860     	 str r0,[r7,#4]
 651:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 652:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 653:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 654:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 656:../Libraries/XMCLib/src/xmc_dma.c **** 
 657:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 658:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 3100              	 .loc 2 658 0
 3101 0008 7B68     	 ldr r3,[r7,#4]
 3102 000a 804A     	 ldr r2,.L171
 3103 000c 9342     	 cmp r3,r2
 3104 000e 02D1     	 bne .L139
 659:../Libraries/XMCLib/src/xmc_dma.c ****   {
 660:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 661:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 3105              	 .loc 2 661 0
 3106 0010 7F4B     	 ldr r3,.L171+4
 3107 0012 BB61     	 str r3,[r7,#24]
 3108 0014 01E0     	 b .L140
 3109              	.L139:
 662:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 663:../Libraries/XMCLib/src/xmc_dma.c ****   }
 664:../Libraries/XMCLib/src/xmc_dma.c ****   else
 665:../Libraries/XMCLib/src/xmc_dma.c ****   {
 666:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 3110              	 .loc 2 666 0
 3111 0016 7F4B     	 ldr r3,.L171+8
 3112 0018 BB61     	 str r3,[r7,#24]
 3113              	.L140:
 667:../Libraries/XMCLib/src/xmc_dma.c ****   }
 668:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 669:../Libraries/XMCLib/src/xmc_dma.c ****   
 670:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 3114              	 .loc 2 670 0
 3115 001a 7868     	 ldr r0,[r7,#4]
 3116 001c FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 3117 0020 7861     	 str r0,[r7,#20]
 671:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 3118              	 .loc 2 671 0
 3119 0022 0023     	 movs r3,#0
 3120 0024 FB61     	 str r3,[r7,#28]
 672:../Libraries/XMCLib/src/xmc_dma.c **** 
 673:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 3121              	 .loc 2 673 0
 3122 0026 7B69     	 ldr r3,[r7,#20]
 3123 0028 03F01003 	 and r3,r3,#16
 3124 002c 002B     	 cmp r3,#0
 3125 002e 2AD0     	 beq .L141
 674:../Libraries/XMCLib/src/xmc_dma.c ****   {
 675:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 3126              	 .loc 2 675 0
 3127 0030 7868     	 ldr r0,[r7,#4]
 3128 0032 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 3129 0036 7861     	 str r0,[r7,#20]
 676:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3130              	 .loc 2 676 0
 3131 0038 21E0     	 b .L142
 3132              	.L146:
 677:../Libraries/XMCLib/src/xmc_dma.c ****     {
 678:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3133              	 .loc 2 678 0
 3134 003a 0122     	 movs r2,#1
 3135 003c FB69     	 ldr r3,[r7,#28]
 3136 003e 02FA03F3 	 lsl r3,r2,r3
 3137 0042 3B61     	 str r3,[r7,#16]
 679:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 3138              	 .loc 2 679 0
 3139 0044 7A69     	 ldr r2,[r7,#20]
 3140 0046 3B69     	 ldr r3,[r7,#16]
 3141 0048 1340     	 ands r3,r3,r2
 3142 004a 002B     	 cmp r3,#0
 3143 004c 14D0     	 beq .L143
 680:../Libraries/XMCLib/src/xmc_dma.c ****       {
 681:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3144              	 .loc 2 681 0
 3145 004e FB69     	 ldr r3,[r7,#28]
 3146 0050 9B00     	 lsls r3,r3,#2
 3147 0052 BA69     	 ldr r2,[r7,#24]
 3148 0054 1344     	 add r3,r3,r2
 3149 0056 1B68     	 ldr r3,[r3]
 3150 0058 FB60     	 str r3,[r7,#12]
 682:../Libraries/XMCLib/src/xmc_dma.c **** 
 683:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 684:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3151              	 .loc 2 684 0
 3152 005a FB68     	 ldr r3,[r7,#12]
 3153 005c 002B     	 cmp r3,#0
 3154 005e 02D0     	 beq .L144
 685:../Libraries/XMCLib/src/xmc_dma.c ****         {
 686:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 3155              	 .loc 2 686 0
 3156 0060 FB68     	 ldr r3,[r7,#12]
 3157 0062 1020     	 movs r0,#16
 3158 0064 9847     	 blx r3
 3159              	.L144:
 687:../Libraries/XMCLib/src/xmc_dma.c ****         }
 688:../Libraries/XMCLib/src/xmc_dma.c **** 
 689:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 3160              	 .loc 2 689 0
 3161 0066 FB69     	 ldr r3,[r7,#28]
 3162 0068 DBB2     	 uxtb r3,r3
 3163 006a 7868     	 ldr r0,[r7,#4]
 3164 006c 1946     	 mov r1,r3
 3165 006e 1022     	 movs r2,#16
 3166 0070 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 690:../Libraries/XMCLib/src/xmc_dma.c ****         
 691:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3167              	 .loc 2 691 0
 3168 0074 00BF     	 nop
 3169 0076 C5E0     	 b .L138
 3170              	.L143:
 692:../Libraries/XMCLib/src/xmc_dma.c ****       }
 693:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3171              	 .loc 2 693 0
 3172 0078 FB69     	 ldr r3,[r7,#28]
 3173 007a 0133     	 adds r3,r3,#1
 3174 007c FB61     	 str r3,[r7,#28]
 3175              	.L142:
 676:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3176              	 .loc 2 676 0
 3177 007e 7B69     	 ldr r3,[r7,#20]
 3178 0080 002B     	 cmp r3,#0
 3179 0082 DAD1     	 bne .L146
 3180 0084 BEE0     	 b .L138
 3181              	.L141:
 694:../Libraries/XMCLib/src/xmc_dma.c ****     }
 695:../Libraries/XMCLib/src/xmc_dma.c ****   }
 696:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3182              	 .loc 2 696 0
 3183 0086 7B69     	 ldr r3,[r7,#20]
 3184 0088 03F00103 	 and r3,r3,#1
 3185 008c 002B     	 cmp r3,#0
 3186 008e 2AD0     	 beq .L148
 697:../Libraries/XMCLib/src/xmc_dma.c ****   {
 698:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 3187              	 .loc 2 698 0
 3188 0090 7868     	 ldr r0,[r7,#4]
 3189 0092 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 3190 0096 7861     	 str r0,[r7,#20]
 699:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3191              	 .loc 2 699 0
 3192 0098 21E0     	 b .L149
 3193              	.L153:
 700:../Libraries/XMCLib/src/xmc_dma.c ****     {
 701:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3194              	 .loc 2 701 0
 3195 009a 0122     	 movs r2,#1
 3196 009c FB69     	 ldr r3,[r7,#28]
 3197 009e 02FA03F3 	 lsl r3,r2,r3
 3198 00a2 3B61     	 str r3,[r7,#16]
 702:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3199              	 .loc 2 702 0
 3200 00a4 7A69     	 ldr r2,[r7,#20]
 3201 00a6 3B69     	 ldr r3,[r7,#16]
 3202 00a8 1340     	 ands r3,r3,r2
 3203 00aa 002B     	 cmp r3,#0
 3204 00ac 14D0     	 beq .L150
 703:../Libraries/XMCLib/src/xmc_dma.c ****       {
 704:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3205              	 .loc 2 704 0
 3206 00ae FB69     	 ldr r3,[r7,#28]
 3207 00b0 9B00     	 lsls r3,r3,#2
 3208 00b2 BA69     	 ldr r2,[r7,#24]
 3209 00b4 1344     	 add r3,r3,r2
 3210 00b6 1B68     	 ldr r3,[r3]
 3211 00b8 FB60     	 str r3,[r7,#12]
 705:../Libraries/XMCLib/src/xmc_dma.c **** 
 706:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 707:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3212              	 .loc 2 707 0
 3213 00ba FB68     	 ldr r3,[r7,#12]
 3214 00bc 002B     	 cmp r3,#0
 3215 00be 02D0     	 beq .L151
 708:../Libraries/XMCLib/src/xmc_dma.c ****         {
 709:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 3216              	 .loc 2 709 0
 3217 00c0 FB68     	 ldr r3,[r7,#12]
 3218 00c2 0120     	 movs r0,#1
 3219 00c4 9847     	 blx r3
 3220              	.L151:
 710:../Libraries/XMCLib/src/xmc_dma.c ****         }
 711:../Libraries/XMCLib/src/xmc_dma.c **** 
 712:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 3221              	 .loc 2 712 0
 3222 00c6 FB69     	 ldr r3,[r7,#28]
 3223 00c8 DBB2     	 uxtb r3,r3
 3224 00ca 7868     	 ldr r0,[r7,#4]
 3225 00cc 1946     	 mov r1,r3
 3226 00ce 0F22     	 movs r2,#15
 3227 00d0 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 713:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_BL
 714:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 715:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 716:../Libraries/XMCLib/src/xmc_dma.c **** 																	  
 717:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3228              	 .loc 2 717 0
 3229 00d4 00BF     	 nop
 3230 00d6 95E0     	 b .L138
 3231              	.L150:
 718:../Libraries/XMCLib/src/xmc_dma.c ****       }
 719:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3232              	 .loc 2 719 0
 3233 00d8 FB69     	 ldr r3,[r7,#28]
 3234 00da 0133     	 adds r3,r3,#1
 3235 00dc FB61     	 str r3,[r7,#28]
 3236              	.L149:
 699:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3237              	 .loc 2 699 0
 3238 00de 7B69     	 ldr r3,[r7,#20]
 3239 00e0 002B     	 cmp r3,#0
 3240 00e2 DAD1     	 bne .L153
 3241 00e4 8EE0     	 b .L138
 3242              	.L148:
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 721:../Libraries/XMCLib/src/xmc_dma.c ****   }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3243              	 .loc 2 722 0
 3244 00e6 7B69     	 ldr r3,[r7,#20]
 3245 00e8 03F00203 	 and r3,r3,#2
 3246 00ec 002B     	 cmp r3,#0
 3247 00ee 2AD0     	 beq .L154
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 724:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3248              	 .loc 2 724 0
 3249 00f0 7868     	 ldr r0,[r7,#4]
 3250 00f2 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3251 00f6 7861     	 str r0,[r7,#20]
 725:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3252              	 .loc 2 725 0
 3253 00f8 21E0     	 b .L155
 3254              	.L159:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 727:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3255              	 .loc 2 727 0
 3256 00fa 0122     	 movs r2,#1
 3257 00fc FB69     	 ldr r3,[r7,#28]
 3258 00fe 02FA03F3 	 lsl r3,r2,r3
 3259 0102 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3260              	 .loc 2 728 0
 3261 0104 7A69     	 ldr r2,[r7,#20]
 3262 0106 3B69     	 ldr r3,[r7,#16]
 3263 0108 1340     	 ands r3,r3,r2
 3264 010a 002B     	 cmp r3,#0
 3265 010c 14D0     	 beq .L156
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 730:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3266              	 .loc 2 730 0
 3267 010e FB69     	 ldr r3,[r7,#28]
 3268 0110 9B00     	 lsls r3,r3,#2
 3269 0112 BA69     	 ldr r2,[r7,#24]
 3270 0114 1344     	 add r3,r3,r2
 3271 0116 1B68     	 ldr r3,[r3]
 3272 0118 FB60     	 str r3,[r7,#12]
 731:../Libraries/XMCLib/src/xmc_dma.c **** 
 732:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 733:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3273              	 .loc 2 733 0
 3274 011a FB68     	 ldr r3,[r7,#12]
 3275 011c 002B     	 cmp r3,#0
 3276 011e 02D0     	 beq .L157
 734:../Libraries/XMCLib/src/xmc_dma.c ****         {
 735:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3277              	 .loc 2 735 0
 3278 0120 FB68     	 ldr r3,[r7,#12]
 3279 0122 0220     	 movs r0,#2
 3280 0124 9847     	 blx r3
 3281              	.L157:
 736:../Libraries/XMCLib/src/xmc_dma.c ****         }
 737:../Libraries/XMCLib/src/xmc_dma.c **** 
 738:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3282              	 .loc 2 738 0
 3283 0126 FB69     	 ldr r3,[r7,#28]
 3284 0128 DBB2     	 uxtb r3,r3
 3285 012a 7868     	 ldr r0,[r7,#4]
 3286 012c 1946     	 mov r1,r3
 3287 012e 0E22     	 movs r2,#14
 3288 0130 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 739:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 740:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 741:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3289              	 .loc 2 741 0
 3290 0134 00BF     	 nop
 3291 0136 65E0     	 b .L138
 3292              	.L156:
 742:../Libraries/XMCLib/src/xmc_dma.c ****       }
 743:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3293              	 .loc 2 743 0
 3294 0138 FB69     	 ldr r3,[r7,#28]
 3295 013a 0133     	 adds r3,r3,#1
 3296 013c FB61     	 str r3,[r7,#28]
 3297              	.L155:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3298              	 .loc 2 725 0
 3299 013e 7B69     	 ldr r3,[r7,#20]
 3300 0140 002B     	 cmp r3,#0
 3301 0142 DAD1     	 bne .L159
 3302 0144 5EE0     	 b .L138
 3303              	.L154:
 744:../Libraries/XMCLib/src/xmc_dma.c ****     }
 745:../Libraries/XMCLib/src/xmc_dma.c ****   }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3304              	 .loc 2 746 0
 3305 0146 7B69     	 ldr r3,[r7,#20]
 3306 0148 03F00403 	 and r3,r3,#4
 3307 014c 002B     	 cmp r3,#0
 3308 014e 2AD0     	 beq .L160
 747:../Libraries/XMCLib/src/xmc_dma.c ****   {
 748:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3309              	 .loc 2 748 0
 3310 0150 7868     	 ldr r0,[r7,#4]
 3311 0152 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3312 0156 7861     	 str r0,[r7,#20]
 749:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3313              	 .loc 2 749 0
 3314 0158 21E0     	 b .L161
 3315              	.L165:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 751:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3316              	 .loc 2 751 0
 3317 015a 0122     	 movs r2,#1
 3318 015c FB69     	 ldr r3,[r7,#28]
 3319 015e 02FA03F3 	 lsl r3,r2,r3
 3320 0162 3B61     	 str r3,[r7,#16]
 752:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3321              	 .loc 2 752 0
 3322 0164 7A69     	 ldr r2,[r7,#20]
 3323 0166 3B69     	 ldr r3,[r7,#16]
 3324 0168 1340     	 ands r3,r3,r2
 3325 016a 002B     	 cmp r3,#0
 3326 016c 14D0     	 beq .L162
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 754:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3327              	 .loc 2 754 0
 3328 016e FB69     	 ldr r3,[r7,#28]
 3329 0170 9B00     	 lsls r3,r3,#2
 3330 0172 BA69     	 ldr r2,[r7,#24]
 3331 0174 1344     	 add r3,r3,r2
 3332 0176 1B68     	 ldr r3,[r3]
 3333 0178 FB60     	 str r3,[r7,#12]
 755:../Libraries/XMCLib/src/xmc_dma.c **** 
 756:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 757:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3334              	 .loc 2 757 0
 3335 017a FB68     	 ldr r3,[r7,#12]
 3336 017c 002B     	 cmp r3,#0
 3337 017e 02D0     	 beq .L163
 758:../Libraries/XMCLib/src/xmc_dma.c ****         {
 759:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3338              	 .loc 2 759 0
 3339 0180 FB68     	 ldr r3,[r7,#12]
 3340 0182 0420     	 movs r0,#4
 3341 0184 9847     	 blx r3
 3342              	.L163:
 760:../Libraries/XMCLib/src/xmc_dma.c ****         }
 761:../Libraries/XMCLib/src/xmc_dma.c **** 
 762:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3343              	 .loc 2 762 0
 3344 0186 FB69     	 ldr r3,[r7,#28]
 3345 0188 DBB2     	 uxtb r3,r3
 3346 018a 7868     	 ldr r0,[r7,#4]
 3347 018c 1946     	 mov r1,r3
 3348 018e 0422     	 movs r2,#4
 3349 0190 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 763:../Libraries/XMCLib/src/xmc_dma.c ****         
 764:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3350              	 .loc 2 764 0
 3351 0194 00BF     	 nop
 3352 0196 35E0     	 b .L138
 3353              	.L162:
 765:../Libraries/XMCLib/src/xmc_dma.c ****       }
 766:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3354              	 .loc 2 766 0
 3355 0198 FB69     	 ldr r3,[r7,#28]
 3356 019a 0133     	 adds r3,r3,#1
 3357 019c FB61     	 str r3,[r7,#28]
 3358              	.L161:
 749:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3359              	 .loc 2 749 0
 3360 019e 7B69     	 ldr r3,[r7,#20]
 3361 01a0 002B     	 cmp r3,#0
 3362 01a2 DAD1     	 bne .L165
 3363 01a4 2EE0     	 b .L138
 3364              	.L160:
 767:../Libraries/XMCLib/src/xmc_dma.c ****     }
 768:../Libraries/XMCLib/src/xmc_dma.c ****   }
 769:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3365              	 .loc 2 769 0
 3366 01a6 7B69     	 ldr r3,[r7,#20]
 3367 01a8 03F00803 	 and r3,r3,#8
 3368 01ac 002B     	 cmp r3,#0
 3369 01ae 29D0     	 beq .L138
 770:../Libraries/XMCLib/src/xmc_dma.c ****   {
 771:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3370              	 .loc 2 771 0
 3371 01b0 7868     	 ldr r0,[r7,#4]
 3372 01b2 FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3373 01b6 7861     	 str r0,[r7,#20]
 772:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3374              	 .loc 2 772 0
 3375 01b8 21E0     	 b .L166
 3376              	.L170:
 773:../Libraries/XMCLib/src/xmc_dma.c ****     {
 774:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3377              	 .loc 2 774 0
 3378 01ba 0122     	 movs r2,#1
 3379 01bc FB69     	 ldr r3,[r7,#28]
 3380 01be 02FA03F3 	 lsl r3,r2,r3
 3381 01c2 3B61     	 str r3,[r7,#16]
 775:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3382              	 .loc 2 775 0
 3383 01c4 7A69     	 ldr r2,[r7,#20]
 3384 01c6 3B69     	 ldr r3,[r7,#16]
 3385 01c8 1340     	 ands r3,r3,r2
 3386 01ca 002B     	 cmp r3,#0
 3387 01cc 14D0     	 beq .L167
 776:../Libraries/XMCLib/src/xmc_dma.c ****       {
 777:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3388              	 .loc 2 777 0
 3389 01ce FB69     	 ldr r3,[r7,#28]
 3390 01d0 9B00     	 lsls r3,r3,#2
 3391 01d2 BA69     	 ldr r2,[r7,#24]
 3392 01d4 1344     	 add r3,r3,r2
 3393 01d6 1B68     	 ldr r3,[r3]
 3394 01d8 FB60     	 str r3,[r7,#12]
 778:../Libraries/XMCLib/src/xmc_dma.c **** 
 779:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 780:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3395              	 .loc 2 780 0
 3396 01da FB68     	 ldr r3,[r7,#12]
 3397 01dc 002B     	 cmp r3,#0
 3398 01de 02D0     	 beq .L168
 781:../Libraries/XMCLib/src/xmc_dma.c ****         {
 782:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3399              	 .loc 2 782 0
 3400 01e0 FB68     	 ldr r3,[r7,#12]
 3401 01e2 0820     	 movs r0,#8
 3402 01e4 9847     	 blx r3
 3403              	.L168:
 783:../Libraries/XMCLib/src/xmc_dma.c ****         }
 784:../Libraries/XMCLib/src/xmc_dma.c ****         
 785:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3404              	 .loc 2 785 0
 3405 01e6 FB69     	 ldr r3,[r7,#28]
 3406 01e8 DBB2     	 uxtb r3,r3
 3407 01ea 7868     	 ldr r0,[r7,#4]
 3408 01ec 1946     	 mov r1,r3
 3409 01ee 0822     	 movs r2,#8
 3410 01f0 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 786:../Libraries/XMCLib/src/xmc_dma.c **** 
 787:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3411              	 .loc 2 787 0
 3412 01f4 00BF     	 nop
 3413 01f6 05E0     	 b .L138
 3414              	.L167:
 788:../Libraries/XMCLib/src/xmc_dma.c ****       }
 789:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3415              	 .loc 2 789 0
 3416 01f8 FB69     	 ldr r3,[r7,#28]
 3417 01fa 0133     	 adds r3,r3,#1
 3418 01fc FB61     	 str r3,[r7,#28]
 3419              	.L166:
 772:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3420              	 .loc 2 772 0
 3421 01fe 7B69     	 ldr r3,[r7,#20]
 3422 0200 002B     	 cmp r3,#0
 3423 0202 DAD1     	 bne .L170
 3424              	.L138:
 790:../Libraries/XMCLib/src/xmc_dma.c ****     }
 791:../Libraries/XMCLib/src/xmc_dma.c ****   }
 792:../Libraries/XMCLib/src/xmc_dma.c ****   else
 793:../Libraries/XMCLib/src/xmc_dma.c ****   {
 794:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 795:../Libraries/XMCLib/src/xmc_dma.c ****   }
 796:../Libraries/XMCLib/src/xmc_dma.c **** 
 797:../Libraries/XMCLib/src/xmc_dma.c **** }
 3425              	 .loc 2 797 0
 3426 0204 2037     	 adds r7,r7,#32
 3427              	.LCFI236:
 3428              	 .cfi_def_cfa_offset 8
 3429 0206 BD46     	 mov sp,r7
 3430              	.LCFI237:
 3431              	 .cfi_def_cfa_register 13
 3432              	 
 3433 0208 80BD     	 pop {r7,pc}
 3434              	.L172:
 3435 020a 00BF     	 .align 2
 3436              	.L171:
 3437 020c 00400150 	 .word 1342259200
 3438 0210 00000000 	 .word dma0_event_handlers
 3439 0214 00000000 	 .word dma1_event_handlers
 3440              	 .cfi_endproc
 3441              	.LFE195:
 3443              	 .text
 3444              	.Letext0:
 3445              	 .file 3 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3446              	 .file 4 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3447              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3448              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc4_scu.h"
 3449              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Include/core_cm4.h"
 3450              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:19     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:23     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:63     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:67     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:106    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:110    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:149    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:153    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:192    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:196    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:235    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:239    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
                            *COM*:00000020 dma0_event_handlers
                            *COM*:00000010 dma1_event_handlers
    {standard input}:280    .text.XMC_DMA_Init:00000000 $t
    {standard input}:285    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:325    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:320    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:373    .text.XMC_DMA_Enable:0000002c $d
    {standard input}:380    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:385    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:433    .text.XMC_DMA_Disable:0000002c $d
    {standard input}:440    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:445    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:542    .text.XMC_DMA_IsEnabled:00000088 $d
    {standard input}:549    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:554    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:657    .text.XMC_DMA_EnableRequestLine:00000090 $d
    {standard input}:663    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:668    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:732    .text.XMC_DMA_DisableRequestLine:0000004c $d
    {standard input}:738    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:743    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:825    .text.XMC_DMA_ClearRequestLine:00000070 $d
    {standard input}:831    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:836    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:906    .text.XMC_DMA_GetOverrunStatus:00000058 $d
    {standard input}:912    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:917    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:979    .text.XMC_DMA_ClearOverrunStatus:00000048 $d
    {standard input}:985    .text.XMC_DMA_CH_Enable:00000000 $t
    {standard input}:990    .text.XMC_DMA_CH_Enable:00000000 XMC_DMA_CH_Enable
    {standard input}:1033   .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:1038   .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:1092   .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:1097   .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1146   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1151   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:2037   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1467   .text.XMC_DMA_CH_Init:00000250 $d
    {standard input}:1476   .text.XMC_DMA_CH_Init:00000274 $t
    {standard input}:1610   .text.XMC_DMA_CH_Init:0000037c $d
    {standard input}:1613   .text.XMC_DMA_CH_Init:00000380 $t
    {standard input}:1699   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1704   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1757   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1762   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1815   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1820   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1872   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1877   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1952   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1957   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:2032   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:2106   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:2111   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2192   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2197   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2266   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2271   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2324   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2329   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2398   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2403   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2456   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2461   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2533   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2538   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2610   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2615   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2668   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2673   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2726   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2731   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2784   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2789   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2842   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2847   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2900   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2905   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2960   .text.XMC_DMA_CH_SetEventHandler:00000038 $d
    {standard input}:2967   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2972   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:3022   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:3027   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:3077   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:3082   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3437   .text.XMC_DMA_IRQHandler:0000020c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
