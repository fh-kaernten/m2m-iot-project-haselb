   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_can.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_CAN_PanelControl:
  24              	.LFB151:
  25              	 .file 1 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2015-07-09
   4:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  56:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  57:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  58:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  59:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  60:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  61:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  62:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  64:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  65:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  66:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  67:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  68:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  69:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  70:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  71:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  72:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  73:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  74:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  75:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  76:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  77:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  78:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  79:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
  80:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
  81:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
  82:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
  83:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
  84:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
  85:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
  86:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
  87:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  88:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
  89:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
  90:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
  91:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
  92:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
  93:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
  94:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
  95:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
  96:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
  97:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @{
  98:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
  99:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 100:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 101:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 102:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 103:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 105:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 106:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 107:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 108:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 109:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 110:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 111:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 112:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 
 113:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:\n
 114:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:\n
 115:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 116:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 117:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 118:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 
 119:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:\n
 120:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 121:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 122:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 123:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 124:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 125:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 126:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 127:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 128:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:\n
 130:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 131:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 132:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 133:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 134:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 135:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 136:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:\n
 137:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 138:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 139:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 140:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:\n
 141:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 142:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 143:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 144:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 145:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 146:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 147:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 148:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 149:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)		/**< Standard Identifier bitposition */
 150:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 151:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 152:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 153:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL)	/**< Node event mask */
 154:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 155:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)	/**< Message Object event mask */
 156:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 157:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 158:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 159:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 160:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 161:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 162:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 163:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 164:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 165:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 166:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 167:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 168:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 169:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 170:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 171:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 172:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 173:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 174:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 175:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 176:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 177:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 178:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 179:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 180:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 181:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,	  /**< Remove a message object from the list and insert
 182:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 183:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 184:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 185:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 186:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 187:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 188:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 189:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 190:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 191:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 192:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 193:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 194:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 195:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 196:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 199:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 200:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 201:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 202:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 203:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 204:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 205:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 206:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 207:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 208:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 209:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 210:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 211:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 212:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 213:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 214:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 215:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 216:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 217:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 218:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 219:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 220:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 221:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 222:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 223:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 224:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 225:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 226:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 227:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 228:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 229:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 230:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 231:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U, 			 /**< Frame Count Mode */
 232:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 233:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 234:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 235:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 236:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 237:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 238:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 239:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 240:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 241:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 242:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 243:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 244:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 245:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 246:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 247:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 248:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 249:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 250:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 251:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 252:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 253:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 254:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 255:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 256:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 257:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 258:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 259:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 260:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 261:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 262:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 263:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 264:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 265:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 266:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 267:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 268:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 269:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 270:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 271:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 272:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 273:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 274:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 275:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 276:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 277:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 278:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 279:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 280:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 281:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 282:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 283:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 284:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 285:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 286:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 287:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 288:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 289:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 290:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 291:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 292:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 293:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 294:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 295:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 296:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 297:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 298:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 299:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 300:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 301:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 302:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,    	/**< Pointer to previous 
 303:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 304:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 305:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 306:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 307:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 308:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 309:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 310:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 311:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 312:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 313:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 314:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 315:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 316:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,				/**< Bus-off status */
 317:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 318:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 319:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 320:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 321:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 322:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 323:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 324:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 325:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 326:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 327:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 328:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 329:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 330:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 331:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 332:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 333:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 334:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 335:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 336:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 337:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 338:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 339:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 340:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 341:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 342:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 343:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 344:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 345:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 346:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 347:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 348:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 349:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 351:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 352:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 353:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 354:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 355:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 356:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 357:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 358:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 359:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 360:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 361:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 362:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 363:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 364:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 365:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 366:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 367:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 368:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 369:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 370:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 371:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 372:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 373:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 374:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 375:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 376:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 377:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 378:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 379:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 380:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 381:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 382:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 383:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 384:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA, 	/**< CAN Receive Input A */
 385:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,		/**< CAN Receive Input B */
 386:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,		/**< CAN Receive Input C */
 387:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,		/**< CAN Receive Input D */
 388:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,		/**< CAN Receive Input E */
 389:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,		/**< CAN Receive Input F */
 390:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,		/**< CAN Receive Input G */
 391:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH		/**< CAN Receive Input H */
 392:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 393:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 394:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 395:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 396:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 397:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 398:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 399:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 400:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 401:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 402:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 403:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 404:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 405:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 406:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 407:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 408:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 409:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 410:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 411:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 412:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 413:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 414:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 415:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 416:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 417:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 418:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0X1U,
 419:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0X2U,
 420:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0X4U,
 421:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0X8U,
 422:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0X16U,
 423:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0X32U,
 424:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0X64U,
 425:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0X128U,
 426:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 427:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 428:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 429:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 430:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 431:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 432:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 433:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 434:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 435:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 436:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 437:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;        	/**< Specifies the node baud rate. Unit: baud \a baudrate shall be ran
 438:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;    	/**< Sample point is used to compensate mismatch between transmitter a
 439:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 									 the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 100%] of 
 440:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;             	/**< (Re) Synchronization Jump Width. Range:0-3 */
 441:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 442:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 443:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 444:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 445:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 446:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 447:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 448:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 449:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;		/**< points to the first element(slave object) in a FIFO structure.Range :0
 450:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;			/**< points to the last element(slave object) in a FIFO structure. Range :0-6
 451:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;		/**< points to the actual target object(Base object) within a FIFO/Gateway st
 452:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 453:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 454:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 455:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 456:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 457:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 458:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 459:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 460:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom; 			/**< points to the first element(gateway destination object) in a FIFO
 461:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;				/**< points to the last element(gateway destination object) in a FIFO str
 462:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;				/**< points to the actual target object within a FIFO/Gateway structure.
 463:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;		/**< TXRQ updated in the gateway destination object after the inte
 464:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object */
 465:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;		/**< The identifier of the gateway source object (after storing th
 466:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object. */
 467:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 468:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 469:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	   gateway destination object */
 470:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 471:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	are copied to the gateway destination.*/
 472:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 473:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 474:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 475:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 476:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 477:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 478:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 479:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 480:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 481:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 482:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 483:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 484:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 485:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 486:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #endif
 487:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 488:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 489:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 490:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 491:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 492:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 493:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 494:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 495:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 496:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   union{
 497:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	  struct{
 498:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 16;
 499:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_selection:3;		/**<   Defines function of the frame counter  */
 500:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_mode:2;			/**<   Determines the operation mode of the frame counter */
 501:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 11;
 502:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	  };
 503:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	  uint32_t nfcr;
 504:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 505:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   };
 506:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 507:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 508:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 509:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 510:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** */
 511:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 512:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 513:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 514:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 515:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 516:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 517:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 518:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register */
 519:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 520:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 521:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message identifi
 522:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 523:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 524:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		};
 525:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_ar;
 526:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	};
 527:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 528:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 529:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 530:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 531:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		};
 532:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_amr;
 533:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	};
 534:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 535:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 536:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   union{
 537:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 538:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   		uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 539:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   		uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 540:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   		uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 541:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   		 	 	 	 	 	 	 	 	 	 	    of the data */
 542:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   		uint64_t can_data_long;                   /** Data of the Message Object*/
 543:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   	  };
 544:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 545:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 546:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 547:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 548:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 549:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 550:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 551:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 552:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 553:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #endif
 554:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 555:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 556:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 557:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 558:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 559:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** #endif
 560:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /* GLOBAL APIs */
 561:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 562:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 563:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 564:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj	Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 565:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 				for details.
 566:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 567:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 568:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 569:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 570:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 571:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 572:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 573:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 574:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 575:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 576:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 578:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 580:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 581:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 582:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 			   for details.
 583:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 584:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 585:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 586:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 587:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 588:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 589:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 590:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 591:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 592:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 593:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 594:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 595:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 596:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 597:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 598:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 599:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 600:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 		   for details.
 601:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 602:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num	CAN node number,Range : 0-2
 603:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num 	CAN Message Object number,Range : 0-63
 604:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 605:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 606:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 607:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 608:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 609:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 610:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 611:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 613:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 614:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 616:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 617:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 618:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 619:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 620:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 622:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 623:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 625:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1	 Panel Argument 1,Range : 0-2
 626:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2 	 Panel Argument 2, Range : 0-63
 627:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 628:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 629:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 631:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 632:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 633:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 634:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 635:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 636:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 637:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 638:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 639:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 640:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 641:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 642:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 643:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 644:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg1,
 645:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg2)
 646:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
  26              	 .loc 1 646 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
  42 0008 0846     	 mov r0,r1
  43 000a 1146     	 mov r1,r2
  44 000c 1A46     	 mov r2,r3
  45 000e 0346     	 mov r3,r0
  46 0010 FB70     	 strb r3,[r7,#3]
  47 0012 0B46     	 mov r3,r1
  48 0014 BB70     	 strb r3,[r7,#2]
  49 0016 1346     	 mov r3,r2
  50 0018 7B70     	 strb r3,[r7,#1]
 647:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  51              	 .loc 1 647 0
  52 001a FA78     	 ldrb r2,[r7,#3]
 648:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
  53              	 .loc 1 648 0
  54 001c BB78     	 ldrb r3,[r7,#2]
  55 001e 1B04     	 lsls r3,r3,#16
  56 0020 03F47F03 	 and r3,r3,#16711680
 647:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  57              	 .loc 1 647 0
  58 0024 1A43     	 orrs r2,r2,r3
 649:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
  59              	 .loc 1 649 0
  60 0026 7B78     	 ldrb r3,[r7,#1]
  61 0028 1B06     	 lsls r3,r3,#24
 648:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
  62              	 .loc 1 648 0
  63 002a 1A43     	 orrs r2,r2,r3
 647:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
  64              	 .loc 1 647 0
  65 002c 7B68     	 ldr r3,[r7,#4]
  66 002e C3F8C421 	 str r2,[r3,#452]
 650:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
  67              	 .loc 1 650 0
  68 0032 0C37     	 adds r7,r7,#12
  69              	.LCFI3:
  70              	 .cfi_def_cfa_offset 4
  71 0034 BD46     	 mov sp,r7
  72              	.LCFI4:
  73              	 .cfi_def_cfa_register 13
  74              	 
  75 0036 5DF8047B 	 ldr r7,[sp],#4
  76              	.LCFI5:
  77              	 .cfi_restore 7
  78              	 .cfi_def_cfa_offset 0
  79 003a 7047     	 bx lr
  80              	 .cfi_endproc
  81              	.LFE151:
  83              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
  84              	 .align 2
  85              	 .thumb
  86              	 .thumb_func
  88              	XMC_CAN_NODE_EnableConfigurationChange:
  89              	.LFB167:
 651:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 652:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 653:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 654:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 656:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 657:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 658:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr	Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_TR
 659:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 							 Multiple interrupt trigger events can be ORed.
 660:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 661:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 662:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 663:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 664:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 665:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 666:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 668:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 669:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 670:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 671:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 672:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 673:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 674:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 675:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 676:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 677:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 678:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 679:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 								/*INIT APIs*/
 680:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 681:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 682:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 684:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 685:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 686:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency	CAN module frequency(fCAN). Range : 5MHz to 120MHz
 687:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 688:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 689:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 690:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 691:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 692:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() to configure baud rate for current CAN frequency.It 
 693:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 694:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 695:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure()\n\n\n
 696:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 697:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 698:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 699:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 700:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 701:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 702:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 703:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 704:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param pndreg Pending register number
 705:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param pndbit Pending bit number
 706:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 707:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 708:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 709:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 710:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 711:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 712:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 713:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 714:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 715:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 716:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 717:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 718:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 719:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 720:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 721:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 	  /*NODE APIs*/
 722:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 723:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 724:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  	  Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 727:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event		  CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_t
 728:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 729:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 730:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 731:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 733:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 734:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 735:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 736:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 737:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 739:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 740:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 741:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 742:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const uint32_t service_request)
 743:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 744:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 745:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 746:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 747:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 748:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 749:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 750:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node		Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CAN_
 751:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time	Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMIN
 752:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 753:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 754:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 755:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 756:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 757:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 758:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 759:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 760:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 761:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 762:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 763:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 764:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 765:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 766:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 767:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 768:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 769:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 771:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 773:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 774:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 775:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 776:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 777:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 778:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 779:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 780:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 782:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 783:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 785:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 786:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 787:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 		                                          const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 788:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 789:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 790:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 791:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 792:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 793:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 794:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 795:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node	Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 796:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 797:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 798:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 799:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 800:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 801:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 802:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 803:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 804:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 805:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 807:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 808:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 809:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 810:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 811:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 812:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 813:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 814:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 815:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 816:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 817:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 818:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 819:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 820:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 821:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 822:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 824:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 825:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 826:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 827:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 828:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 829:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 830:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 831:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 832:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 834:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 835:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 836:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 837:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 838:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 839:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 840:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 841:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 842:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 843:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 844:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 845:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 846:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 847:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 848:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 849:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 850:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 851:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 852:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 854:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
 855:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 856:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 857:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
 858:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 859:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 860:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 861:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 862:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 863:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 864:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 865:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 866:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 867:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 868:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 869:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 870:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 871:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 872:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 873:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
 874:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 876:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
 877:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 878:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 879:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 880:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 881:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 882:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 883:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 884:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 885:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 886:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 887:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
 888:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 889:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 890:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
 891:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 892:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 893:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 894:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 896:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 897:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
 898:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 899:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
 900:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 901:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 902:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 903:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 904:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 905:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 906:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
 908:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 909:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 910:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
 911:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 912:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 913:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * None
 914:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 915:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 916:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 917:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
 918:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 919:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
 920:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 921:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 922:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 923:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 924:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 925:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 926:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level	Error Warning level value. Range :0-255.
 927:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 928:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 929:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 930:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 931:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
 932:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
 933:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 934:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 935:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
 936:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 938:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
 939:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 940:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 941:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 942:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
 943:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 944:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
 945:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
 946:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 947:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 949:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 950:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 952:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
 953:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 955:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 956:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 957:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
 958:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
 959:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 960:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 961:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
 962:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 963:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 964:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
 965:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 967:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 968:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 969:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
 970:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 971:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
 972:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
 973:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 974:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 975:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 976:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
 977:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 979:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
 980:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 981:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 982:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 983:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 984:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
 985:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
 986:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 987:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 988:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
 989:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 991:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
 992:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
 993:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
 994:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
 995:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
 996:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 997:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
 998:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
 999:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1000:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1001:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1002:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1003:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1005:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1006:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1007:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1008:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1009:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns error warning level. This determines the threshold value (warning level, default 96) to 
1010:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	to set the corresponding error warning bit EWRN. It reads NECNT register.
1011:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1012:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1013:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1014:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1015:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1016:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1017:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1018:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1019:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
1020:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1021:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1022:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1023:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1024:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1025:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1027:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1028:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1029:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1030:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1031:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a transm
1032:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the erro
1033:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1034:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1035:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1036:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1037:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1038:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1039:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1040:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1041:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1042:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1043:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1044:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
1045:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1046:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1047:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1048:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1049:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1050:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1051:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1052:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1053:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t	receive error counter value.
1054:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1055:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1056:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Receive Error Counter value. It reads NECNT register.
1057:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1058:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1059:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1060:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1061:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1062:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1063:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1064:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
1065:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1066:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1067:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1068:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1069:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1070:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1071:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1072:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1073:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1074:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1075:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1076:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1077:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1078:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1079:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1080:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1081:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1082:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1083:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1084:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
1085:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1086:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1087:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1088:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1089:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1090:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1091:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1093:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1094:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1095:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1096:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1098:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1099:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1100:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1101:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1102:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1103:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
1104:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1105:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
1106:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1107:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1108:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1109:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1110:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1111:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1112:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1113:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1114:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1115:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1116:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1117:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1119:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1120:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1122:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1124:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
  90              	 .loc 1 1124 0
  91              	 .cfi_startproc
  92              	 
  93              	 
  94              	 
  95 0000 80B4     	 push {r7}
  96              	.LCFI6:
  97              	 .cfi_def_cfa_offset 4
  98              	 .cfi_offset 7,-4
  99 0002 83B0     	 sub sp,sp,#12
 100              	.LCFI7:
 101              	 .cfi_def_cfa_offset 16
 102 0004 00AF     	 add r7,sp,#0
 103              	.LCFI8:
 104              	 .cfi_def_cfa_register 7
 105 0006 7860     	 str r0,[r7,#4]
1125:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 106              	 .loc 1 1125 0
 107 0008 7B68     	 ldr r3,[r7,#4]
 108 000a 1B68     	 ldr r3,[r3]
 109 000c 43F04002 	 orr r2,r3,#64
 110 0010 7B68     	 ldr r3,[r7,#4]
 111 0012 1A60     	 str r2,[r3]
1126:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 112              	 .loc 1 1126 0
 113 0014 0C37     	 adds r7,r7,#12
 114              	.LCFI9:
 115              	 .cfi_def_cfa_offset 4
 116 0016 BD46     	 mov sp,r7
 117              	.LCFI10:
 118              	 .cfi_def_cfa_register 13
 119              	 
 120 0018 5DF8047B 	 ldr r7,[sp],#4
 121              	.LCFI11:
 122              	 .cfi_restore 7
 123              	 .cfi_def_cfa_offset 0
 124 001c 7047     	 bx lr
 125              	 .cfi_endproc
 126              	.LFE167:
 128 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 129              	 .align 2
 130              	 .thumb
 131              	 .thumb_func
 133              	XMC_CAN_NODE_DisableConfigurationChange:
 134              	.LFB168:
1127:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1128:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1129:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** /**
1130:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1131:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1132:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1134:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1135:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1136:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *	Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1137:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1139:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1140:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  *
1141:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****  */
1142:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1144:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** {
 135              	 .loc 1 1144 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0000 80B4     	 push {r7}
 141              	.LCFI12:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0002 83B0     	 sub sp,sp,#12
 145              	.LCFI13:
 146              	 .cfi_def_cfa_offset 16
 147 0004 00AF     	 add r7,sp,#0
 148              	.LCFI14:
 149              	 .cfi_def_cfa_register 7
 150 0006 7860     	 str r0,[r7,#4]
1145:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 151              	 .loc 1 1145 0
 152 0008 7B68     	 ldr r3,[r7,#4]
 153 000a 1B68     	 ldr r3,[r3]
 154 000c 23F04002 	 bic r2,r3,#64
 155 0010 7B68     	 ldr r3,[r7,#4]
 156 0012 1A60     	 str r2,[r3]
1146:C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc\xmc_can.h **** }
 157              	 .loc 1 1146 0
 158 0014 0C37     	 adds r7,r7,#12
 159              	.LCFI15:
 160              	 .cfi_def_cfa_offset 4
 161 0016 BD46     	 mov sp,r7
 162              	.LCFI16:
 163              	 .cfi_def_cfa_register 13
 164              	 
 165 0018 5DF8047B 	 ldr r7,[sp],#4
 166              	.LCFI17:
 167              	 .cfi_restore 7
 168              	 .cfi_def_cfa_offset 0
 169 001c 7047     	 bx lr
 170              	 .cfi_endproc
 171              	.LFE168:
 173 001e 00BF     	 .section .text.max,"ax",%progbits
 174              	 .align 2
 175              	 .thumb
 176              	 .thumb_func
 178              	max:
 179              	.LFB203:
 180              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *      
  50:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  51:../Libraries/XMCLib/src/xmc_can.c ****  *
  52:../Libraries/XMCLib/src/xmc_can.c ****  */
  53:../Libraries/XMCLib/src/xmc_can.c **** 
  54:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  55:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  56:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  57:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  58:../Libraries/XMCLib/src/xmc_can.c **** 
  59:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  60:../Libraries/XMCLib/src/xmc_can.c **** 
  61:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  62:../Libraries/XMCLib/src/xmc_can.c **** {
 181              	 .loc 2 62 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185              	 
 186 0000 80B4     	 push {r7}
 187              	.LCFI18:
 188              	 .cfi_def_cfa_offset 4
 189              	 .cfi_offset 7,-4
 190 0002 83B0     	 sub sp,sp,#12
 191              	.LCFI19:
 192              	 .cfi_def_cfa_offset 16
 193 0004 00AF     	 add r7,sp,#0
 194              	.LCFI20:
 195              	 .cfi_def_cfa_register 7
 196 0006 7860     	 str r0,[r7,#4]
 197 0008 3960     	 str r1,[r7]
  63:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 198              	 .loc 2 63 0
 199 000a 3A68     	 ldr r2,[r7]
 200 000c 7B68     	 ldr r3,[r7,#4]
 201 000e 9342     	 cmp r3,r2
 202 0010 38BF     	 it cc
 203 0012 1346     	 movcc r3,r2
  64:../Libraries/XMCLib/src/xmc_can.c **** }
 204              	 .loc 2 64 0
 205 0014 1846     	 mov r0,r3
 206 0016 0C37     	 adds r7,r7,#12
 207              	.LCFI21:
 208              	 .cfi_def_cfa_offset 4
 209 0018 BD46     	 mov sp,r7
 210              	.LCFI22:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 001a 5DF8047B 	 ldr r7,[sp],#4
 214              	.LCFI23:
 215              	 .cfi_restore 7
 216              	 .cfi_def_cfa_offset 0
 217 001e 7047     	 bx lr
 218              	 .cfi_endproc
 219              	.LFE203:
 221              	 .section .text.min,"ax",%progbits
 222              	 .align 2
 223              	 .thumb
 224              	 .thumb_func
 226              	min:
 227              	.LFB204:
  65:../Libraries/XMCLib/src/xmc_can.c **** 
  66:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  67:../Libraries/XMCLib/src/xmc_can.c **** {
 228              	 .loc 2 67 0
 229              	 .cfi_startproc
 230              	 
 231              	 
 232              	 
 233 0000 80B4     	 push {r7}
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 4
 236              	 .cfi_offset 7,-4
 237 0002 83B0     	 sub sp,sp,#12
 238              	.LCFI25:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI26:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 244 0008 3960     	 str r1,[r7]
  68:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 245              	 .loc 2 68 0
 246 000a 3A68     	 ldr r2,[r7]
 247 000c 7B68     	 ldr r3,[r7,#4]
 248 000e 9342     	 cmp r3,r2
 249 0010 28BF     	 it cs
 250 0012 1346     	 movcs r3,r2
  69:../Libraries/XMCLib/src/xmc_can.c **** }
 251              	 .loc 2 69 0
 252 0014 1846     	 mov r0,r3
 253 0016 0C37     	 adds r7,r7,#12
 254              	.LCFI27:
 255              	 .cfi_def_cfa_offset 4
 256 0018 BD46     	 mov sp,r7
 257              	.LCFI28:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 001a 5DF8047B 	 ldr r7,[sp],#4
 261              	.LCFI29:
 262              	 .cfi_restore 7
 263              	 .cfi_def_cfa_offset 0
 264 001e 7047     	 bx lr
 265              	 .cfi_endproc
 266              	.LFE204:
 268              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 269              	 .align 2
 270              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 271              	 .thumb
 272              	 .thumb_func
 274              	XMC_CAN_NODE_NominalBitTimeConfigure:
 275              	.LFB205:
  70:../Libraries/XMCLib/src/xmc_can.c **** 
  71:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  72:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
  73:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  74:../Libraries/XMCLib/src/xmc_can.c **** 
  75:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
  76:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
  77:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
  78:../Libraries/XMCLib/src/xmc_can.c **** {
 276              	 .loc 2 78 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280 0000 80B5     	 push {r7,lr}
 281              	.LCFI30:
 282              	 .cfi_def_cfa_offset 8
 283              	 .cfi_offset 7,-8
 284              	 .cfi_offset 14,-4
 285 0002 90B0     	 sub sp,sp,#64
 286              	.LCFI31:
 287              	 .cfi_def_cfa_offset 72
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI32:
 290              	 .cfi_def_cfa_register 7
 291 0006 7860     	 str r0,[r7,#4]
 292 0008 3960     	 str r1,[r7]
  79:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 293              	 .loc 2 79 0
 294 000a 0C23     	 movs r3,#12
 295 000c FB63     	 str r3,[r7,#60]
  80:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 296              	 .loc 2 80 0
 297 000e 0C23     	 movs r3,#12
 298 0010 BB63     	 str r3,[r7,#56]
  81:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 299              	 .loc 2 81 0
 300 0012 0023     	 movs r3,#0
 301 0014 7B63     	 str r3,[r7,#52]
  82:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 302              	 .loc 2 82 0
 303 0016 0123     	 movs r3,#1
 304 0018 3B63     	 str r3,[r7,#48]
  83:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 305              	 .loc 2 83 0
 306 001a 0023     	 movs r3,#0
 307 001c 7B61     	 str r3,[r7,#20]
  84:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 308              	 .loc 2 84 0
 309 001e 0023     	 movs r3,#0
 310 0020 FB62     	 str r3,[r7,#44]
  85:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 311              	 .loc 2 85 0
 312 0022 42F21073 	 movw r3,#10000
 313 0026 BB62     	 str r3,[r7,#40]
  86:../Libraries/XMCLib/src/xmc_can.c **** 
  87:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
  88:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
  89:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
  90:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
  91:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
  92:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
  93:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
  94:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
  95:../Libraries/XMCLib/src/xmc_can.c **** 			 
  96:../Libraries/XMCLib/src/xmc_can.c ****   /*
  97:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
  98:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
  99:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 100:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 101:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 102:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 103:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 104:../Libraries/XMCLib/src/xmc_can.c ****    *
 105:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 106:../Libraries/XMCLib/src/xmc_can.c ****    *
 107:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 108:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 109:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 110:../Libraries/XMCLib/src/xmc_can.c ****    */
 111:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 112:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 314              	 .loc 2 112 0
 315 0028 0123     	 movs r3,#1
 316 002a FB63     	 str r3,[r7,#60]
 317 002c 67E0     	 b .L9
 318              	.L18:
 319              	.LBB2:
 113:../Libraries/XMCLib/src/xmc_can.c ****   {
 114:../Libraries/XMCLib/src/xmc_can.c **** 
 115:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 320              	 .loc 2 115 0
 321 002e 3B68     	 ldr r3,[r7]
 322 0030 1A68     	 ldr r2,[r3]
 323 0032 1346     	 mov r3,r2
 324 0034 9B00     	 lsls r3,r3,#2
 325 0036 1344     	 add r3,r3,r2
 326 0038 5B00     	 lsls r3,r3,#1
 327 003a 1A46     	 mov r2,r3
 328 003c FB6B     	 ldr r3,[r7,#60]
 329 003e B2FBF3F3 	 udiv r3,r2,r3
 330 0042 3B61     	 str r3,[r7,#16]
 116:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 331              	 .loc 2 116 0
 332 0044 3B68     	 ldr r3,[r7]
 333 0046 5B68     	 ldr r3,[r3,#4]
 334 0048 3A69     	 ldr r2,[r7,#16]
 335 004a B2FBF3F3 	 udiv r3,r2,r3
 336 004e 7B62     	 str r3,[r7,#36]
 117:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 118:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 119:../Libraries/XMCLib/src/xmc_can.c **** 
 120:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
 337              	 .loc 2 120 0
 338 0050 796A     	 ldr r1,[r7,#36]
 339 0052 5B4B     	 ldr r3,.L26
 340 0054 A3FB0123 	 umull r2,r3,r3,r1
 341 0058 DA08     	 lsrs r2,r3,#3
 342 005a 1346     	 mov r3,r2
 343 005c 9B00     	 lsls r3,r3,#2
 344 005e 1344     	 add r3,r3,r2
 345 0060 5B00     	 lsls r3,r3,#1
 346 0062 CA1A     	 subs r2,r1,r3
 347 0064 052A     	 cmp r2,#5
 348 0066 09D9     	 bls .L10
 121:../Libraries/XMCLib/src/xmc_can.c ****   {
 122:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 349              	 .loc 2 122 0
 350 0068 7B6A     	 ldr r3,[r7,#36]
 351 006a 554A     	 ldr r2,.L26
 352 006c A2FB0323 	 umull r2,r3,r2,r3
 353 0070 DB08     	 lsrs r3,r3,#3
 354 0072 7B62     	 str r3,[r7,#36]
 123:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud++;
 355              	 .loc 2 123 0
 356 0074 7B6A     	 ldr r3,[r7,#36]
 357 0076 0133     	 adds r3,r3,#1
 358 0078 7B62     	 str r3,[r7,#36]
 359 007a 05E0     	 b .L11
 360              	.L10:
 124:../Libraries/XMCLib/src/xmc_can.c ****   }
 125:../Libraries/XMCLib/src/xmc_can.c ****   else
 126:../Libraries/XMCLib/src/xmc_can.c ****   {
 127:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 361              	 .loc 2 127 0
 362 007c 7B6A     	 ldr r3,[r7,#36]
 363 007e 504A     	 ldr r2,.L26
 364 0080 A2FB0323 	 umull r2,r3,r2,r3
 365 0084 DB08     	 lsrs r3,r3,#3
 366 0086 7B62     	 str r3,[r7,#36]
 367              	.L11:
 128:../Libraries/XMCLib/src/xmc_can.c ****   }
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 368              	 .loc 2 130 0
 369 0088 7B6A     	 ldr r3,[r7,#36]
 370 008a 002B     	 cmp r3,#0
 371 008c 0AD0     	 beq .L12
 131:../Libraries/XMCLib/src/xmc_can.c ****   {
 132:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 372              	 .loc 2 132 0
 373 008e 7A6A     	 ldr r2,[r7,#36]
 374 0090 1346     	 mov r3,r2
 375 0092 9B00     	 lsls r3,r3,#2
 376 0094 1344     	 add r3,r3,r2
 377 0096 5B00     	 lsls r3,r3,#1
 378 0098 1A46     	 mov r2,r3
 379 009a 3B69     	 ldr r3,[r7,#16]
 380 009c B3FBF2F3 	 udiv r3,r3,r2
 381 00a0 3B62     	 str r3,[r7,#32]
 382 00a2 07E0     	 b .L13
 383              	.L12:
 133:../Libraries/XMCLib/src/xmc_can.c ****   }
 134:../Libraries/XMCLib/src/xmc_can.c ****   else
 135:../Libraries/XMCLib/src/xmc_can.c ****   {
 136:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 384              	 .loc 2 136 0
 385 00a4 3B69     	 ldr r3,[r7,#16]
 386 00a6 464A     	 ldr r2,.L26
 387 00a8 A2FB0323 	 umull r2,r3,r2,r3
 388 00ac DB08     	 lsrs r3,r3,#3
 389 00ae 3B62     	 str r3,[r7,#32]
 137:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = 1;
 390              	 .loc 2 137 0
 391 00b0 0123     	 movs r3,#1
 392 00b2 7B62     	 str r3,[r7,#36]
 393              	.L13:
 138:../Libraries/XMCLib/src/xmc_can.c ****   }
 139:../Libraries/XMCLib/src/xmc_can.c **** 
 140:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
 394              	 .loc 2 140 0
 395 00b4 3B68     	 ldr r3,[r7]
 396 00b6 5A68     	 ldr r2,[r3,#4]
 397 00b8 3B6A     	 ldr r3,[r7,#32]
 398 00ba 9A42     	 cmp r2,r3
 399 00bc 05D8     	 bhi .L14
 141:../Libraries/XMCLib/src/xmc_can.c ****   {
 142:../Libraries/XMCLib/src/xmc_can.c **** 	error = temp_baudrate - can_bit_time->baudrate;
 400              	 .loc 2 142 0
 401 00be 3B68     	 ldr r3,[r7]
 402 00c0 5B68     	 ldr r3,[r3,#4]
 403 00c2 3A6A     	 ldr r2,[r7,#32]
 404 00c4 D31A     	 subs r3,r2,r3
 405 00c6 FB61     	 str r3,[r7,#28]
 406 00c8 04E0     	 b .L15
 407              	.L14:
 143:../Libraries/XMCLib/src/xmc_can.c ****   }
 144:../Libraries/XMCLib/src/xmc_can.c ****   else
 145:../Libraries/XMCLib/src/xmc_can.c ****   {
 146:../Libraries/XMCLib/src/xmc_can.c **** 	error = can_bit_time->baudrate - temp_baudrate;
 408              	 .loc 2 146 0
 409 00ca 3B68     	 ldr r3,[r7]
 410 00cc 5A68     	 ldr r2,[r3,#4]
 411 00ce 3B6A     	 ldr r3,[r7,#32]
 412 00d0 D31A     	 subs r3,r2,r3
 413 00d2 FB61     	 str r3,[r7,#28]
 414              	.L15:
 147:../Libraries/XMCLib/src/xmc_can.c ****   }
 148:../Libraries/XMCLib/src/xmc_can.c **** 
 149:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
 415              	 .loc 2 149 0
 416 00d4 7B6A     	 ldr r3,[r7,#36]
 417 00d6 142B     	 cmp r3,#20
 418 00d8 0ED8     	 bhi .L16
 419              	 .loc 2 149 0 is_stmt 0 discriminator 1
 420 00da BA6A     	 ldr r2,[r7,#40]
 421 00dc FB69     	 ldr r3,[r7,#28]
 422 00de 9A42     	 cmp r2,r3
 423 00e0 0AD9     	 bls .L16
 150:../Libraries/XMCLib/src/xmc_can.c ****   {
 151:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 424              	 .loc 2 151 0 is_stmt 1
 425 00e2 FB6B     	 ldr r3,[r7,#60]
 426 00e4 7B63     	 str r3,[r7,#52]
 152:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 427              	 .loc 2 152 0
 428 00e6 7B6A     	 ldr r3,[r7,#36]
 429 00e8 FB62     	 str r3,[r7,#44]
 153:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 430              	 .loc 2 153 0
 431 00ea FB69     	 ldr r3,[r7,#28]
 432 00ec BB62     	 str r3,[r7,#40]
 154:../Libraries/XMCLib/src/xmc_can.c **** 
 155:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
 433              	 .loc 2 155 0
 434 00ee FB69     	 ldr r3,[r7,#28]
 435 00f0 B3F57A7F 	 cmp r3,#1000
 436 00f4 00D2     	 bcs .L16
 156:../Libraries/XMCLib/src/xmc_can.c ****     {
 157:../Libraries/XMCLib/src/xmc_can.c ****       break;
 437              	 .loc 2 157 0
 438 00f6 05E0     	 b .L17
 439              	.L16:
 440              	.LBE2:
 112:../Libraries/XMCLib/src/xmc_can.c ****   {
 441              	 .loc 2 112 0 discriminator 2
 442 00f8 FB6B     	 ldr r3,[r7,#60]
 443 00fa 0133     	 adds r3,r3,#1
 444 00fc FB63     	 str r3,[r7,#60]
 445              	.L9:
 112:../Libraries/XMCLib/src/xmc_can.c ****   {
 446              	 .loc 2 112 0 is_stmt 0 discriminator 1
 447 00fe FB6B     	 ldr r3,[r7,#60]
 448 0100 402B     	 cmp r3,#64
 449 0102 94D9     	 bls .L18
 450              	.L17:
 158:../Libraries/XMCLib/src/xmc_can.c ****     }
 159:../Libraries/XMCLib/src/xmc_can.c ****    }
 160:../Libraries/XMCLib/src/xmc_can.c ****   }
 161:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 162:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 451              	 .loc 2 162 0 is_stmt 1
 452 0104 42F21073 	 movw r3,#10000
 453 0108 BB62     	 str r3,[r7,#40]
 163:../Libraries/XMCLib/src/xmc_can.c **** 
 164:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 454              	 .loc 2 164 0
 455 010a 4023     	 movs r3,#64
 456 010c BB63     	 str r3,[r7,#56]
 457 010e 2EE0     	 b .L19
 458              	.L25:
 459              	.LBB3:
 165:../Libraries/XMCLib/src/xmc_can.c ****   {
 166:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 460              	 .loc 2 166 0
 461 0110 BB6B     	 ldr r3,[r7,#56]
 462 0112 0133     	 adds r3,r3,#1
 463 0114 42F21072 	 movw r2,#10000
 464 0118 02FB03F2 	 mul r2,r2,r3
 465 011c FB6A     	 ldr r3,[r7,#44]
 466 011e B2FBF3F3 	 udiv r3,r2,r3
 467 0122 FB60     	 str r3,[r7,#12]
 167:../Libraries/XMCLib/src/xmc_can.c **** 	uint32_t error;
 168:../Libraries/XMCLib/src/xmc_can.c **** 	if (tempSamplePoint >= can_bit_time->sample_point)
 468              	 .loc 2 168 0
 469 0124 3B68     	 ldr r3,[r7]
 470 0126 1B89     	 ldrh r3,[r3,#8]
 471 0128 1A46     	 mov r2,r3
 472 012a FB68     	 ldr r3,[r7,#12]
 473 012c 9A42     	 cmp r2,r3
 474 012e 06D8     	 bhi .L20
 169:../Libraries/XMCLib/src/xmc_can.c **** 	{
 170:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 475              	 .loc 2 170 0
 476 0130 3B68     	 ldr r3,[r7]
 477 0132 1B89     	 ldrh r3,[r3,#8]
 478 0134 1A46     	 mov r2,r3
 479 0136 FB68     	 ldr r3,[r7,#12]
 480 0138 9B1A     	 subs r3,r3,r2
 481 013a BB61     	 str r3,[r7,#24]
 482 013c 05E0     	 b .L21
 483              	.L20:
 171:../Libraries/XMCLib/src/xmc_can.c **** 	}
 172:../Libraries/XMCLib/src/xmc_can.c **** 	else
 173:../Libraries/XMCLib/src/xmc_can.c **** 	{
 174:../Libraries/XMCLib/src/xmc_can.c **** 	  error = can_bit_time->sample_point  - tempSamplePoint;
 484              	 .loc 2 174 0
 485 013e 3B68     	 ldr r3,[r7]
 486 0140 1B89     	 ldrh r3,[r3,#8]
 487 0142 1A46     	 mov r2,r3
 488 0144 FB68     	 ldr r3,[r7,#12]
 489 0146 D31A     	 subs r3,r2,r3
 490 0148 BB61     	 str r3,[r7,#24]
 491              	.L21:
 175:../Libraries/XMCLib/src/xmc_can.c **** 	}
 176:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 492              	 .loc 2 176 0
 493 014a BA6A     	 ldr r2,[r7,#40]
 494 014c BB69     	 ldr r3,[r7,#24]
 495 014e 9A42     	 cmp r2,r3
 496 0150 03D9     	 bls .L22
 177:../Libraries/XMCLib/src/xmc_can.c ****     {
 178:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 497              	 .loc 2 178 0
 498 0152 BB6B     	 ldr r3,[r7,#56]
 499 0154 3B63     	 str r3,[r7,#48]
 179:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 500              	 .loc 2 179 0
 501 0156 BB69     	 ldr r3,[r7,#24]
 502 0158 BB62     	 str r3,[r7,#40]
 503              	.L22:
 180:../Libraries/XMCLib/src/xmc_can.c ****     }
 181:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 504              	 .loc 2 181 0
 505 015a 3B68     	 ldr r3,[r7]
 506 015c 1B89     	 ldrh r3,[r3,#8]
 507 015e 1A46     	 mov r2,r3
 508 0160 FB68     	 ldr r3,[r7,#12]
 509 0162 9A42     	 cmp r2,r3
 510 0164 00D9     	 bls .L23
 182:../Libraries/XMCLib/src/xmc_can.c ****     {
 183:../Libraries/XMCLib/src/xmc_can.c ****       break;
 511              	 .loc 2 183 0
 512 0166 05E0     	 b .L24
 513              	.L23:
 514              	.LBE3:
 164:../Libraries/XMCLib/src/xmc_can.c ****   {
 515              	 .loc 2 164 0 discriminator 2
 516 0168 BB6B     	 ldr r3,[r7,#56]
 517 016a 013B     	 subs r3,r3,#1
 518 016c BB63     	 str r3,[r7,#56]
 519              	.L19:
 164:../Libraries/XMCLib/src/xmc_can.c ****   {
 520              	 .loc 2 164 0 is_stmt 0 discriminator 1
 521 016e BB6B     	 ldr r3,[r7,#56]
 522 0170 022B     	 cmp r3,#2
 523 0172 CDD8     	 bhi .L25
 524              	.L24:
 184:../Libraries/XMCLib/src/xmc_can.c ****     }
 185:../Libraries/XMCLib/src/xmc_can.c ****   }
 186:../Libraries/XMCLib/src/xmc_can.c **** 
 187:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 525              	 .loc 2 187 0 is_stmt 1
 526 0174 FA6A     	 ldr r2,[r7,#44]
 527 0176 3B6B     	 ldr r3,[r7,#48]
 528 0178 D31A     	 subs r3,r2,r3
 529 017a 013B     	 subs r3,r3,#1
 530 017c 7B61     	 str r3,[r7,#20]
 188:../Libraries/XMCLib/src/xmc_can.c **** 
 189:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 531              	 .loc 2 189 0
 532 017e 7868     	 ldr r0,[r7,#4]
 533 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 190:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 191:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 534              	 .loc 2 191 0
 535 0184 7B69     	 ldr r3,[r7,#20]
 536 0186 013B     	 subs r3,r3,#1
 537 0188 1B03     	 lsls r3,r3,#12
 538 018a 03F4E042 	 and r2,r3,#28672
 192:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 539              	 .loc 2 192 0
 540 018e 3B68     	 ldr r3,[r7]
 541 0190 5B89     	 ldrh r3,[r3,#10]
 542 0192 013B     	 subs r3,r3,#1
 543 0194 9B01     	 lsls r3,r3,#6
 544 0196 DBB2     	 uxtb r3,r3
 191:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 545              	 .loc 2 191 0
 546 0198 1A43     	 orrs r2,r2,r3
 193:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 547              	 .loc 2 193 0
 548 019a 3B6B     	 ldr r3,[r7,#48]
 549 019c 013B     	 subs r3,r3,#1
 550 019e 1B02     	 lsls r3,r3,#8
 551 01a0 03F47063 	 and r3,r3,#3840
 192:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 552              	 .loc 2 192 0
 553 01a4 1A43     	 orrs r2,r2,r3
 194:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 554              	 .loc 2 194 0
 555 01a6 7B6B     	 ldr r3,[r7,#52]
 556 01a8 013B     	 subs r3,r3,#1
 557 01aa 03F03F03 	 and r3,r3,#63
 558 01ae 1A43     	 orrs r2,r2,r3
 191:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 559              	 .loc 2 191 0
 560 01b0 7B68     	 ldr r3,[r7,#4]
 561 01b2 1A61     	 str r2,[r3,#16]
 195:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 196:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 562              	 .loc 2 196 0
 563 01b4 7868     	 ldr r0,[r7,#4]
 564 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 197:../Libraries/XMCLib/src/xmc_can.c **** }
 565              	 .loc 2 197 0
 566 01ba 4037     	 adds r7,r7,#64
 567              	.LCFI33:
 568              	 .cfi_def_cfa_offset 8
 569 01bc BD46     	 mov sp,r7
 570              	.LCFI34:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 01be 80BD     	 pop {r7,pc}
 574              	.L27:
 575              	 .align 2
 576              	.L26:
 577 01c0 CDCCCCCC 	 .word -858993459
 578              	 .cfi_endproc
 579              	.LFE205:
 581              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 582              	 .align 2
 583              	 .global XMC_CAN_AllocateMOtoNodeList
 584              	 .thumb
 585              	 .thumb_func
 587              	XMC_CAN_AllocateMOtoNodeList:
 588              	.LFB206:
 198:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 199:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 200:../Libraries/XMCLib/src/xmc_can.c **** {
 589              	 .loc 2 200 0
 590              	 .cfi_startproc
 591              	 
 592              	 
 593 0000 80B5     	 push {r7,lr}
 594              	.LCFI35:
 595              	 .cfi_def_cfa_offset 8
 596              	 .cfi_offset 7,-8
 597              	 .cfi_offset 14,-4
 598 0002 82B0     	 sub sp,sp,#8
 599              	.LCFI36:
 600              	 .cfi_def_cfa_offset 16
 601 0004 00AF     	 add r7,sp,#0
 602              	.LCFI37:
 603              	 .cfi_def_cfa_register 7
 604 0006 7860     	 str r0,[r7,#4]
 605 0008 0B46     	 mov r3,r1
 606 000a FB70     	 strb r3,[r7,#3]
 607 000c 1346     	 mov r3,r2
 608 000e BB70     	 strb r3,[r7,#2]
 201:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 202:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 609              	 .loc 2 202 0
 610 0010 FB78     	 ldrb r3,[r7,#3]
 611 0012 0133     	 adds r3,r3,#1
 612 0014 DBB2     	 uxtb r3,r3
 613 0016 BA78     	 ldrb r2,[r7,#2]
 614 0018 7868     	 ldr r0,[r7,#4]
 615 001a 0221     	 movs r1,#2
 616 001c FFF7FEFF 	 bl XMC_CAN_PanelControl
 203:../Libraries/XMCLib/src/xmc_can.c ****   /* wait until panel as done the command */
 204:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->PANCTR & CAN_PANCTR_BUSY_Msk)
 617              	 .loc 2 204 0
 618 0020 00BF     	 nop
 619              	.L29:
 620              	 .loc 2 204 0 is_stmt 0 discriminator 1
 621 0022 7B68     	 ldr r3,[r7,#4]
 622 0024 D3F8C431 	 ldr r3,[r3,#452]
 623 0028 03F48073 	 and r3,r3,#256
 624 002c 002B     	 cmp r3,#0
 625 002e F8D1     	 bne .L29
 205:../Libraries/XMCLib/src/xmc_can.c ****   {
 206:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 207:../Libraries/XMCLib/src/xmc_can.c ****   };
 208:../Libraries/XMCLib/src/xmc_can.c **** }
 626              	 .loc 2 208 0 is_stmt 1
 627 0030 0837     	 adds r7,r7,#8
 628              	.LCFI38:
 629              	 .cfi_def_cfa_offset 8
 630 0032 BD46     	 mov sp,r7
 631              	.LCFI39:
 632              	 .cfi_def_cfa_register 13
 633              	 
 634 0034 80BD     	 pop {r7,pc}
 635              	 .cfi_endproc
 636              	.LFE206:
 638 0036 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 639              	 .align 2
 640              	 .global XMC_CAN_Disable
 641              	 .thumb
 642              	 .thumb_func
 644              	XMC_CAN_Disable:
 645              	.LFB207:
 209:../Libraries/XMCLib/src/xmc_can.c **** 
 210:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 211:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 646              	 .loc 2 212 0
 647              	 .cfi_startproc
 648              	 
 649              	 
 650 0000 80B5     	 push {r7,lr}
 651              	.LCFI40:
 652              	 .cfi_def_cfa_offset 8
 653              	 .cfi_offset 7,-8
 654              	 .cfi_offset 14,-4
 655 0002 82B0     	 sub sp,sp,#8
 656              	.LCFI41:
 657              	 .cfi_def_cfa_offset 16
 658 0004 00AF     	 add r7,sp,#0
 659              	.LCFI42:
 660              	 .cfi_def_cfa_register 7
 661 0006 7860     	 str r0,[r7,#4]
 213:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 214:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 662              	 .loc 2 214 0
 663 0008 7B68     	 ldr r3,[r7,#4]
 664 000a 0122     	 movs r2,#1
 665 000c 1A60     	 str r2,[r3]
 215:../Libraries/XMCLib/src/xmc_can.c ****   /* Reset assert for CAN peripheral */
 216:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 666              	 .loc 2 216 0
 667 000e 0348     	 ldr r0,.L31
 668 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 217:../Libraries/XMCLib/src/xmc_can.c **** }
 669              	 .loc 2 217 0
 670 0014 0837     	 adds r7,r7,#8
 671              	.LCFI43:
 672              	 .cfi_def_cfa_offset 8
 673 0016 BD46     	 mov sp,r7
 674              	.LCFI44:
 675              	 .cfi_def_cfa_register 13
 676              	 
 677 0018 80BD     	 pop {r7,pc}
 678              	.L32:
 679 001a 00BF     	 .align 2
 680              	.L31:
 681 001c 10000010 	 .word 268435472
 682              	 .cfi_endproc
 683              	.LFE207:
 685              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 686              	 .align 2
 687              	 .global XMC_CAN_Enable
 688              	 .thumb
 689              	 .thumb_func
 691              	XMC_CAN_Enable:
 692              	.LFB208:
 218:../Libraries/XMCLib/src/xmc_can.c **** 
 219:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 220:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 221:../Libraries/XMCLib/src/xmc_can.c **** {
 693              	 .loc 2 221 0
 694              	 .cfi_startproc
 695              	 
 696              	 
 697 0000 80B5     	 push {r7,lr}
 698              	.LCFI45:
 699              	 .cfi_def_cfa_offset 8
 700              	 .cfi_offset 7,-8
 701              	 .cfi_offset 14,-4
 702 0002 82B0     	 sub sp,sp,#8
 703              	.LCFI46:
 704              	 .cfi_def_cfa_offset 16
 705 0004 00AF     	 add r7,sp,#0
 706              	.LCFI47:
 707              	 .cfi_def_cfa_register 7
 708 0006 7860     	 str r0,[r7,#4]
 222:../Libraries/XMCLib/src/xmc_can.c **** #if(UC_SERIES != XMC45)
 223:../Libraries/XMCLib/src/xmc_can.c ****   /* Ungate the can module clock */
 224:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 225:../Libraries/XMCLib/src/xmc_can.c **** #endif
 226:../Libraries/XMCLib/src/xmc_can.c ****   /* Reset deassert for CAN peripheral */
 227:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 709              	 .loc 2 227 0
 710 0008 0948     	 ldr r0,.L35
 711 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 228:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 229:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 712              	 .loc 2 229 0
 713 000e 7B68     	 ldr r3,[r7,#4]
 714 0010 1B68     	 ldr r3,[r3]
 715 0012 23F00102 	 bic r2,r3,#1
 716 0016 7B68     	 ldr r3,[r7,#4]
 717 0018 1A60     	 str r2,[r3]
 230:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 718              	 .loc 2 230 0
 719 001a 00BF     	 nop
 720              	.L34:
 721              	 .loc 2 230 0 is_stmt 0 discriminator 1
 722 001c 7B68     	 ldr r3,[r7,#4]
 723 001e 1B68     	 ldr r3,[r3]
 724 0020 03F00203 	 and r3,r3,#2
 725 0024 002B     	 cmp r3,#0
 726 0026 F9D1     	 bne .L34
 231:../Libraries/XMCLib/src/xmc_can.c ****   {
 232:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 233:../Libraries/XMCLib/src/xmc_can.c ****   };
 234:../Libraries/XMCLib/src/xmc_can.c **** }
 727              	 .loc 2 234 0 is_stmt 1
 728 0028 0837     	 adds r7,r7,#8
 729              	.LCFI48:
 730              	 .cfi_def_cfa_offset 8
 731 002a BD46     	 mov sp,r7
 732              	.LCFI49:
 733              	 .cfi_def_cfa_register 13
 734              	 
 735 002c 80BD     	 pop {r7,pc}
 736              	.L36:
 737 002e 00BF     	 .align 2
 738              	.L35:
 739 0030 10000010 	 .word 268435472
 740              	 .cfi_endproc
 741              	.LFE208:
 743              	 .section .text.XMC_CAN_Init,"ax",%progbits
 744              	 .align 2
 745              	 .global XMC_CAN_Init
 746              	 .thumb
 747              	 .thumb_func
 749              	XMC_CAN_Init:
 750              	.LFB209:
 235:../Libraries/XMCLib/src/xmc_can.c **** 
 236:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 237:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 238:../Libraries/XMCLib/src/xmc_can.c **** {
 751              	 .loc 2 238 0
 752              	 .cfi_startproc
 753              	 
 754              	 
 755 0000 80B5     	 push {r7,lr}
 756              	.LCFI50:
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 7,-8
 759              	 .cfi_offset 14,-4
 760 0002 8CB0     	 sub sp,sp,#48
 761              	.LCFI51:
 762              	 .cfi_def_cfa_offset 56
 763 0004 00AF     	 add r7,sp,#0
 764              	.LCFI52:
 765              	 .cfi_def_cfa_register 7
 766 0006 7860     	 str r0,[r7,#4]
 767 0008 3960     	 str r1,[r7]
 239:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 240:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 241:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 242:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 243:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 244:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 245:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 246:../Libraries/XMCLib/src/xmc_can.c **** 
 247:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 768              	 .loc 2 247 0
 769 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 770 000e F862     	 str r0,[r7,#44]
 248:../Libraries/XMCLib/src/xmc_can.c **** 
 249:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 250:../Libraries/XMCLib/src/xmc_can.c **** 
 251:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 252:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 771              	 .loc 2 252 0
 772 0010 7868     	 ldr r0,[r7,#4]
 773 0012 FFF7FEFF 	 bl XMC_CAN_Enable
 253:../Libraries/XMCLib/src/xmc_can.c **** 
 254:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 255:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 774              	 .loc 2 255 0
 775 0016 FA6A     	 ldr r2,[r7,#44]
 776 0018 3B68     	 ldr r3,[r7]
 777 001a B2FBF3F3 	 udiv r3,r2,r3
 778 001e C3F58063 	 rsb r3,r3,#1024
 779 0022 0020     	 movs r0,#0
 780 0024 1946     	 mov r1,r3
 781 0026 FFF7FEFF 	 bl max
 782 002a 0346     	 mov r3,r0
 783 002c 1846     	 mov r0,r3
 784 002e 40F2FF31 	 movw r1,#1023
 785 0032 FFF7FEFF 	 bl min
 786 0036 B862     	 str r0,[r7,#40]
 256:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 787              	 .loc 2 256 0
 788 0038 BB6A     	 ldr r3,[r7,#40]
 789 003a C3F58063 	 rsb r3,r3,#1024
 790 003e FA6A     	 ldr r2,[r7,#44]
 791 0040 B2FBF3F3 	 udiv r3,r2,r3
 792 0044 7B62     	 str r3,[r7,#36]
 257:../Libraries/XMCLib/src/xmc_can.c **** 
 258:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 259:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 793              	 .loc 2 259 0
 794 0046 3B68     	 ldr r3,[r7]
 795 0048 9B09     	 lsrs r3,r3,#6
 796 004a 3B62     	 str r3,[r7,#32]
 260:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 797              	 .loc 2 260 0
 798 004c FB6A     	 ldr r3,[r7,#44]
 799 004e 9B09     	 lsrs r3,r3,#6
 800 0050 FB61     	 str r3,[r7,#28]
 261:../Libraries/XMCLib/src/xmc_can.c **** 
 262:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 801              	 .loc 2 262 0
 802 0052 3B6A     	 ldr r3,[r7,#32]
 803 0054 9A02     	 lsls r2,r3,#10
 804 0056 FB69     	 ldr r3,[r7,#28]
 805 0058 B2FBF3F3 	 udiv r3,r2,r3
 806 005c 1846     	 mov r0,r3
 807 005e 40F2FF31 	 movw r1,#1023
 808 0062 FFF7FEFF 	 bl min
 809 0066 B861     	 str r0,[r7,#24]
 263:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 810              	 .loc 2 263 0
 811 0068 FB69     	 ldr r3,[r7,#28]
 812 006a BA69     	 ldr r2,[r7,#24]
 813 006c 02FB03F3 	 mul r3,r2,r3
 814 0070 9B0A     	 lsrs r3,r3,#10
 815 0072 7B61     	 str r3,[r7,#20]
 264:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 816              	 .loc 2 264 0
 817 0074 7B69     	 ldr r3,[r7,#20]
 818 0076 9B01     	 lsls r3,r3,#6
 819 0078 7B61     	 str r3,[r7,#20]
 265:../Libraries/XMCLib/src/xmc_can.c **** 
 266:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 820              	 .loc 2 266 0
 821 007a 3A68     	 ldr r2,[r7]
 822 007c 7B6A     	 ldr r3,[r7,#36]
 823 007e D21A     	 subs r2,r2,r3
 824 0080 3968     	 ldr r1,[r7]
 825 0082 7B69     	 ldr r3,[r7,#20]
 826 0084 CB1A     	 subs r3,r1,r3
 827 0086 9A42     	 cmp r2,r3
 828 0088 94BF     	 ite ls
 829 008a 0123     	 movls r3,#1
 830 008c 0023     	 movhi r3,#0
 831 008e FB74     	 strb r3,[r7,#19]
 267:../Libraries/XMCLib/src/xmc_can.c **** 
 268:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 832              	 .loc 2 268 0
 833 0090 FB7C     	 ldrb r3,[r7,#19]
 834 0092 002B     	 cmp r3,#0
 835 0094 01D0     	 beq .L38
 836              	 .loc 2 268 0 is_stmt 0 discriminator 1
 837 0096 BB6A     	 ldr r3,[r7,#40]
 838 0098 00E0     	 b .L39
 839              	.L38:
 840              	 .loc 2 268 0 discriminator 2
 841 009a BB69     	 ldr r3,[r7,#24]
 842              	.L39:
 843              	 .loc 2 268 0 discriminator 4
 844 009c FB60     	 str r3,[r7,#12]
 269:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 845              	 .loc 2 269 0 is_stmt 1 discriminator 4
 846 009e FB7C     	 ldrb r3,[r7,#19]
 847 00a0 002B     	 cmp r3,#0
 848 00a2 01D0     	 beq .L40
 849              	 .loc 2 269 0 is_stmt 0 discriminator 1
 850 00a4 0123     	 movs r3,#1
 851 00a6 00E0     	 b .L41
 852              	.L40:
 853              	 .loc 2 269 0 discriminator 2
 854 00a8 0223     	 movs r3,#2
 855              	.L41:
 856              	 .loc 2 269 0 discriminator 4
 857 00aa FB72     	 strb r3,[r7,#11]
 270:../Libraries/XMCLib/src/xmc_can.c **** 
 271:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 858              	 .loc 2 271 0 is_stmt 1 discriminator 4
 859 00ac 7B68     	 ldr r3,[r7,#4]
 860 00ae DB68     	 ldr r3,[r3,#12]
 861 00b0 23F44343 	 bic r3,r3,#49920
 862 00b4 23F0FF03 	 bic r3,r3,#255
 863 00b8 7A68     	 ldr r2,[r7,#4]
 864 00ba D360     	 str r3,[r2,#12]
 272:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 865              	 .loc 2 272 0 discriminator 4
 866 00bc 7B68     	 ldr r3,[r7,#4]
 867 00be DA68     	 ldr r2,[r3,#12]
 868 00c0 FB7A     	 ldrb r3,[r7,#11]
 869 00c2 9903     	 lsls r1,r3,#14
 870 00c4 FB68     	 ldr r3,[r7,#12]
 871 00c6 0B43     	 orrs r3,r3,r1
 872 00c8 1A43     	 orrs r2,r2,r3
 873 00ca 7B68     	 ldr r3,[r7,#4]
 874 00cc DA60     	 str r2,[r3,#12]
 273:../Libraries/XMCLib/src/xmc_can.c **** }
 875              	 .loc 2 273 0 discriminator 4
 876 00ce 3037     	 adds r7,r7,#48
 877              	.LCFI53:
 878              	 .cfi_def_cfa_offset 8
 879 00d0 BD46     	 mov sp,r7
 880              	.LCFI54:
 881              	 .cfi_def_cfa_register 13
 882              	 
 883 00d2 80BD     	 pop {r7,pc}
 884              	 .cfi_endproc
 885              	.LFE209:
 887              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 888              	 .align 2
 889              	 .global XMC_CAN_MO_SetIdentifier
 890              	 .thumb
 891              	 .thumb_func
 893              	XMC_CAN_MO_SetIdentifier:
 894              	.LFB210:
 274:../Libraries/XMCLib/src/xmc_can.c **** 
 275:../Libraries/XMCLib/src/xmc_can.c **** 
 276:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 277:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 278:../Libraries/XMCLib/src/xmc_can.c **** {
 895              	 .loc 2 278 0
 896              	 .cfi_startproc
 897              	 
 898              	 
 899              	 
 900 0000 80B4     	 push {r7}
 901              	.LCFI55:
 902              	 .cfi_def_cfa_offset 4
 903              	 .cfi_offset 7,-4
 904 0002 83B0     	 sub sp,sp,#12
 905              	.LCFI56:
 906              	 .cfi_def_cfa_offset 16
 907 0004 00AF     	 add r7,sp,#0
 908              	.LCFI57:
 909              	 .cfi_def_cfa_register 7
 910 0006 7860     	 str r0,[r7,#4]
 911 0008 3960     	 str r1,[r7]
 279:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 912              	 .loc 2 279 0
 913 000a 7B68     	 ldr r3,[r7,#4]
 914 000c 1B68     	 ldr r3,[r3]
 915 000e 9B69     	 ldr r3,[r3,#24]
 916 0010 03F00053 	 and r3,r3,#536870912
 917 0014 002B     	 cmp r3,#0
 918 0016 0DD1     	 bne .L43
 280:../Libraries/XMCLib/src/xmc_can.c ****   {
 281:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 919              	 .loc 2 281 0
 920 0018 7B68     	 ldr r3,[r7,#4]
 921 001a 1B68     	 ldr r3,[r3]
 922 001c 7A68     	 ldr r2,[r7,#4]
 923 001e 1268     	 ldr r2,[r2]
 924 0020 9269     	 ldr r2,[r2,#24]
 925 0022 02F06041 	 and r1,r2,#-536870912
 282:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 926              	 .loc 2 282 0
 927 0026 3A68     	 ldr r2,[r7]
 928 0028 9204     	 lsls r2,r2,#18
 929 002a 22F06042 	 bic r2,r2,#-536870912
 281:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 930              	 .loc 2 281 0
 931 002e 0A43     	 orrs r2,r2,r1
 932 0030 9A61     	 str r2,[r3,#24]
 933 0032 0BE0     	 b .L44
 934              	.L43:
 283:../Libraries/XMCLib/src/xmc_can.c ****   }
 284:../Libraries/XMCLib/src/xmc_can.c ****   else
 285:../Libraries/XMCLib/src/xmc_can.c ****   {
 286:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 935              	 .loc 2 286 0
 936 0034 7B68     	 ldr r3,[r7,#4]
 937 0036 1B68     	 ldr r3,[r3]
 938 0038 7A68     	 ldr r2,[r7,#4]
 939 003a 1268     	 ldr r2,[r2]
 940 003c 9269     	 ldr r2,[r2,#24]
 941 003e 02F06041 	 and r1,r2,#-536870912
 287:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 942              	 .loc 2 287 0
 943 0042 3A68     	 ldr r2,[r7]
 944 0044 22F06042 	 bic r2,r2,#-536870912
 286:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 945              	 .loc 2 286 0
 946 0048 0A43     	 orrs r2,r2,r1
 947 004a 9A61     	 str r2,[r3,#24]
 948              	.L44:
 288:../Libraries/XMCLib/src/xmc_can.c ****   }
 289:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 949              	 .loc 2 289 0
 950 004c 3B68     	 ldr r3,[r7]
 951 004e 23F06041 	 bic r1,r3,#-536870912
 952 0052 7A68     	 ldr r2,[r7,#4]
 953 0054 5368     	 ldr r3,[r2,#4]
 954 0056 61F31C03 	 bfi r3,r1,#0,#29
 955 005a 5360     	 str r3,[r2,#4]
 290:../Libraries/XMCLib/src/xmc_can.c **** }
 956              	 .loc 2 290 0
 957 005c 0C37     	 adds r7,r7,#12
 958              	.LCFI58:
 959              	 .cfi_def_cfa_offset 4
 960 005e BD46     	 mov sp,r7
 961              	.LCFI59:
 962              	 .cfi_def_cfa_register 13
 963              	 
 964 0060 5DF8047B 	 ldr r7,[sp],#4
 965              	.LCFI60:
 966              	 .cfi_restore 7
 967              	 .cfi_def_cfa_offset 0
 968 0064 7047     	 bx lr
 969              	 .cfi_endproc
 970              	.LFE210:
 972 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 973              	 .align 2
 974              	 .global XMC_CAN_MO_GetIdentifier
 975              	 .thumb
 976              	 .thumb_func
 978              	XMC_CAN_MO_GetIdentifier:
 979              	.LFB211:
 291:../Libraries/XMCLib/src/xmc_can.c **** 
 292:../Libraries/XMCLib/src/xmc_can.c **** 
 293:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 294:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 295:../Libraries/XMCLib/src/xmc_can.c **** {
 980              	 .loc 2 295 0
 981              	 .cfi_startproc
 982              	 
 983              	 
 984              	 
 985 0000 80B4     	 push {r7}
 986              	.LCFI61:
 987              	 .cfi_def_cfa_offset 4
 988              	 .cfi_offset 7,-4
 989 0002 85B0     	 sub sp,sp,#20
 990              	.LCFI62:
 991              	 .cfi_def_cfa_offset 24
 992 0004 00AF     	 add r7,sp,#0
 993              	.LCFI63:
 994              	 .cfi_def_cfa_register 7
 995 0006 7860     	 str r0,[r7,#4]
 296:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 297:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 996              	 .loc 2 297 0
 997 0008 7B68     	 ldr r3,[r7,#4]
 998 000a 1B68     	 ldr r3,[r3]
 999 000c 9B69     	 ldr r3,[r3,#24]
 1000 000e 03F00053 	 and r3,r3,#536870912
 1001 0012 002B     	 cmp r3,#0
 1002 0014 07D1     	 bne .L46
 298:../Libraries/XMCLib/src/xmc_can.c ****   {
 299:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STDI
 1003              	 .loc 2 299 0
 1004 0016 7B68     	 ldr r3,[r7,#4]
 1005 0018 1B68     	 ldr r3,[r3]
 1006 001a 9B69     	 ldr r3,[r3,#24]
 1007 001c 23F06043 	 bic r3,r3,#-536870912
 1008 0020 9B0C     	 lsrs r3,r3,#18
 1009 0022 FB60     	 str r3,[r7,#12]
 1010 0024 05E0     	 b .L47
 1011              	.L46:
 300:../Libraries/XMCLib/src/xmc_can.c ****   }
 301:../Libraries/XMCLib/src/xmc_can.c ****   else
 302:../Libraries/XMCLib/src/xmc_can.c ****   {
 303:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1012              	 .loc 2 303 0
 1013 0026 7B68     	 ldr r3,[r7,#4]
 1014 0028 1B68     	 ldr r3,[r3]
 1015 002a 9B69     	 ldr r3,[r3,#24]
 1016 002c 23F06043 	 bic r3,r3,#-536870912
 1017 0030 FB60     	 str r3,[r7,#12]
 1018              	.L47:
 304:../Libraries/XMCLib/src/xmc_can.c ****   }
 305:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1019              	 .loc 2 305 0
 1020 0032 FB68     	 ldr r3,[r7,#12]
 306:../Libraries/XMCLib/src/xmc_can.c **** }
 1021              	 .loc 2 306 0
 1022 0034 1846     	 mov r0,r3
 1023 0036 1437     	 adds r7,r7,#20
 1024              	.LCFI64:
 1025              	 .cfi_def_cfa_offset 4
 1026 0038 BD46     	 mov sp,r7
 1027              	.LCFI65:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 003a 5DF8047B 	 ldr r7,[sp],#4
 1031              	.LCFI66:
 1032              	 .cfi_restore 7
 1033              	 .cfi_def_cfa_offset 0
 1034 003e 7047     	 bx lr
 1035              	 .cfi_endproc
 1036              	.LFE211:
 1038              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1039              	 .align 2
 1040              	 .global XMC_CAN_MO_GetAcceptanceMask
 1041              	 .thumb
 1042              	 .thumb_func
 1044              	XMC_CAN_MO_GetAcceptanceMask:
 1045              	.LFB212:
 307:../Libraries/XMCLib/src/xmc_can.c **** 
 308:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 309:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 310:../Libraries/XMCLib/src/xmc_can.c **** {
 1046              	 .loc 2 310 0
 1047              	 .cfi_startproc
 1048              	 
 1049              	 
 1050              	 
 1051 0000 80B4     	 push {r7}
 1052              	.LCFI67:
 1053              	 .cfi_def_cfa_offset 4
 1054              	 .cfi_offset 7,-4
 1055 0002 85B0     	 sub sp,sp,#20
 1056              	.LCFI68:
 1057              	 .cfi_def_cfa_offset 24
 1058 0004 00AF     	 add r7,sp,#0
 1059              	.LCFI69:
 1060              	 .cfi_def_cfa_register 7
 1061 0006 7860     	 str r0,[r7,#4]
 311:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 312:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1062              	 .loc 2 312 0
 1063 0008 7B68     	 ldr r3,[r7,#4]
 1064 000a 1B68     	 ldr r3,[r3]
 1065 000c DB68     	 ldr r3,[r3,#12]
 1066 000e 03F00053 	 and r3,r3,#536870912
 1067 0012 002B     	 cmp r3,#0
 1068 0014 0ED1     	 bne .L50
 313:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1069              	 .loc 2 313 0
 1070 0016 7B68     	 ldr r3,[r7,#4]
 1071 0018 1B68     	 ldr r3,[r3]
 1072 001a 9B69     	 ldr r3,[r3,#24]
 1073 001c 03F00053 	 and r3,r3,#536870912
 1074 0020 002B     	 cmp r3,#0
 1075 0022 07D1     	 bne .L50
 314:../Libraries/XMCLib/src/xmc_can.c ****   {
 315:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1076              	 .loc 2 315 0
 1077 0024 7B68     	 ldr r3,[r7,#4]
 1078 0026 1B68     	 ldr r3,[r3]
 1079 0028 DB68     	 ldr r3,[r3,#12]
 1080 002a 23F06043 	 bic r3,r3,#-536870912
 1081 002e 9B0C     	 lsrs r3,r3,#18
 1082 0030 FB60     	 str r3,[r7,#12]
 1083 0032 05E0     	 b .L51
 1084              	.L50:
 316:../Libraries/XMCLib/src/xmc_can.c ****   }
 317:../Libraries/XMCLib/src/xmc_can.c ****   else
 318:../Libraries/XMCLib/src/xmc_can.c ****   {
 319:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1085              	 .loc 2 319 0
 1086 0034 7B68     	 ldr r3,[r7,#4]
 1087 0036 1B68     	 ldr r3,[r3]
 1088 0038 DB68     	 ldr r3,[r3,#12]
 1089 003a 23F06043 	 bic r3,r3,#-536870912
 1090 003e FB60     	 str r3,[r7,#12]
 1091              	.L51:
 320:../Libraries/XMCLib/src/xmc_can.c ****   }
 321:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1092              	 .loc 2 321 0
 1093 0040 FB68     	 ldr r3,[r7,#12]
 322:../Libraries/XMCLib/src/xmc_can.c **** }
 1094              	 .loc 2 322 0
 1095 0042 1846     	 mov r0,r3
 1096 0044 1437     	 adds r7,r7,#20
 1097              	.LCFI70:
 1098              	 .cfi_def_cfa_offset 4
 1099 0046 BD46     	 mov sp,r7
 1100              	.LCFI71:
 1101              	 .cfi_def_cfa_register 13
 1102              	 
 1103 0048 5DF8047B 	 ldr r7,[sp],#4
 1104              	.LCFI72:
 1105              	 .cfi_restore 7
 1106              	 .cfi_def_cfa_offset 0
 1107 004c 7047     	 bx lr
 1108              	 .cfi_endproc
 1109              	.LFE212:
 1111 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1112              	 .align 2
 1113              	 .global XMC_CAN_MO_SetAcceptanceMask
 1114              	 .thumb
 1115              	 .thumb_func
 1117              	XMC_CAN_MO_SetAcceptanceMask:
 1118              	.LFB213:
 323:../Libraries/XMCLib/src/xmc_can.c **** 
 324:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 325:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 326:../Libraries/XMCLib/src/xmc_can.c **** {
 1119              	 .loc 2 326 0
 1120              	 .cfi_startproc
 1121              	 
 1122              	 
 1123              	 
 1124 0000 80B4     	 push {r7}
 1125              	.LCFI73:
 1126              	 .cfi_def_cfa_offset 4
 1127              	 .cfi_offset 7,-4
 1128 0002 83B0     	 sub sp,sp,#12
 1129              	.LCFI74:
 1130              	 .cfi_def_cfa_offset 16
 1131 0004 00AF     	 add r7,sp,#0
 1132              	.LCFI75:
 1133              	 .cfi_def_cfa_register 7
 1134 0006 7860     	 str r0,[r7,#4]
 1135 0008 3960     	 str r1,[r7]
 327:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1136              	 .loc 2 327 0
 1137 000a 7B68     	 ldr r3,[r7,#4]
 1138 000c 1B68     	 ldr r3,[r3]
 1139 000e DB68     	 ldr r3,[r3,#12]
 1140 0010 03F00053 	 and r3,r3,#536870912
 1141 0014 002B     	 cmp r3,#0
 1142 0016 12D1     	 bne .L54
 328:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1143              	 .loc 2 328 0
 1144 0018 7B68     	 ldr r3,[r7,#4]
 1145 001a 1B68     	 ldr r3,[r3]
 1146 001c 9B69     	 ldr r3,[r3,#24]
 1147 001e 03F00053 	 and r3,r3,#536870912
 1148 0022 002B     	 cmp r3,#0
 1149 0024 0BD1     	 bne .L54
 329:../Libraries/XMCLib/src/xmc_can.c ****   {
 330:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1150              	 .loc 2 330 0
 1151 0026 7B68     	 ldr r3,[r7,#4]
 1152 0028 1B68     	 ldr r3,[r3]
 1153 002a 7A68     	 ldr r2,[r7,#4]
 1154 002c 1268     	 ldr r2,[r2]
 1155 002e D268     	 ldr r2,[r2,#12]
 1156 0030 02F06041 	 and r1,r2,#-536870912
 331:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1157              	 .loc 2 331 0
 1158 0034 3A68     	 ldr r2,[r7]
 1159 0036 9204     	 lsls r2,r2,#18
 330:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1160              	 .loc 2 330 0
 1161 0038 0A43     	 orrs r2,r2,r1
 1162 003a DA60     	 str r2,[r3,#12]
 1163 003c 0BE0     	 b .L55
 1164              	.L54:
 332:../Libraries/XMCLib/src/xmc_can.c ****   }
 333:../Libraries/XMCLib/src/xmc_can.c ****   else
 334:../Libraries/XMCLib/src/xmc_can.c ****   {
 335:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1165              	 .loc 2 335 0
 1166 003e 7B68     	 ldr r3,[r7,#4]
 1167 0040 1B68     	 ldr r3,[r3]
 1168 0042 7A68     	 ldr r2,[r7,#4]
 1169 0044 1268     	 ldr r2,[r2]
 1170 0046 D268     	 ldr r2,[r2,#12]
 1171 0048 02F06041 	 and r1,r2,#-536870912
 336:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1172              	 .loc 2 336 0
 1173 004c 3A68     	 ldr r2,[r7]
 1174 004e 22F06042 	 bic r2,r2,#-536870912
 335:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1175              	 .loc 2 335 0
 1176 0052 0A43     	 orrs r2,r2,r1
 1177 0054 DA60     	 str r2,[r3,#12]
 1178              	.L55:
 337:../Libraries/XMCLib/src/xmc_can.c ****   }
 338:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1179              	 .loc 2 338 0
 1180 0056 3B68     	 ldr r3,[r7]
 1181 0058 23F06041 	 bic r1,r3,#-536870912
 1182 005c 7A68     	 ldr r2,[r7,#4]
 1183 005e 9368     	 ldr r3,[r2,#8]
 1184 0060 61F31C03 	 bfi r3,r1,#0,#29
 1185 0064 9360     	 str r3,[r2,#8]
 339:../Libraries/XMCLib/src/xmc_can.c **** }
 1186              	 .loc 2 339 0
 1187 0066 0C37     	 adds r7,r7,#12
 1188              	.LCFI76:
 1189              	 .cfi_def_cfa_offset 4
 1190 0068 BD46     	 mov sp,r7
 1191              	.LCFI77:
 1192              	 .cfi_def_cfa_register 13
 1193              	 
 1194 006a 5DF8047B 	 ldr r7,[sp],#4
 1195              	.LCFI78:
 1196              	 .cfi_restore 7
 1197              	 .cfi_def_cfa_offset 0
 1198 006e 7047     	 bx lr
 1199              	 .cfi_endproc
 1200              	.LFE213:
 1202              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1203              	 .align 2
 1204              	 .global XMC_CAN_MO_Config
 1205              	 .thumb
 1206              	 .thumb_func
 1208              	XMC_CAN_MO_Config:
 1209              	.LFB214:
 340:../Libraries/XMCLib/src/xmc_can.c **** 
 341:../Libraries/XMCLib/src/xmc_can.c **** 
 342:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 343:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 344:../Libraries/XMCLib/src/xmc_can.c **** {
 1210              	 .loc 2 344 0
 1211              	 .cfi_startproc
 1212              	 
 1213              	 
 1214 0000 80B5     	 push {r7,lr}
 1215              	.LCFI79:
 1216              	 .cfi_def_cfa_offset 8
 1217              	 .cfi_offset 7,-8
 1218              	 .cfi_offset 14,-4
 1219 0002 84B0     	 sub sp,sp,#16
 1220              	.LCFI80:
 1221              	 .cfi_def_cfa_offset 24
 1222 0004 00AF     	 add r7,sp,#0
 1223              	.LCFI81:
 1224              	 .cfi_def_cfa_register 7
 1225 0006 7860     	 str r0,[r7,#4]
 345:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 346:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 347:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 1226              	 .loc 2 347 0
 1227 0008 7B68     	 ldr r3,[r7,#4]
 1228 000a 1B68     	 ldr r3,[r3]
 1229 000c 03F13843 	 add r3,r3,#-1207959552
 1230 0010 A3F5A833 	 sub r3,r3,#86016
 1231 0014 5B09     	 lsrs r3,r3,#5
 1232 0016 FB60     	 str r3,[r7,#12]
 348:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(nu
 1233              	 .loc 2 348 0
 1234 0018 7B68     	 ldr r3,[r7,#4]
 1235 001a 1B68     	 ldr r3,[r3]
 1236 001c FA68     	 ldr r2,[r7,#12]
 1237 001e 5209     	 lsrs r2,r2,#5
 1238 0020 5103     	 lsls r1,r2,#13
 1239 0022 FA68     	 ldr r2,[r7,#12]
 1240 0024 02F01F02 	 and r2,r2,#31
 1241 0028 1202     	 lsls r2,r2,#8
 1242 002a 0A43     	 orrs r2,r2,r1
 1243 002c 9A60     	 str r2,[r3,#8]
 349:../Libraries/XMCLib/src/xmc_can.c **** 
 350:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1244              	 .loc 2 350 0
 1245 002e 7B68     	 ldr r3,[r7,#4]
 1246 0030 DB79     	 ldrb r3,[r3,#7]
 1247 0032 03F02003 	 and r3,r3,#32
 1248 0036 DBB2     	 uxtb r3,r3
 1249 0038 002B     	 cmp r3,#0
 1250 003a 07D0     	 beq .L57
 351:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1251              	 .loc 2 351 0 discriminator 1
 1252 003c 7B68     	 ldr r3,[r7,#4]
 1253 003e DB79     	 ldrb r3,[r3,#7]
 1254 0040 03F02003 	 and r3,r3,#32
 1255 0044 DBB2     	 uxtb r3,r3
 350:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1256              	 .loc 2 350 0 discriminator 1
 1257 0046 002B     	 cmp r3,#0
 1258 0048 00D1     	 bne .L57
 350:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1259              	 .loc 2 350 0 is_stmt 0
 1260 004a 5CE0     	 b .L56
 1261              	.L57:
 352:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1262              	 .loc 2 352 0 is_stmt 1
 1263 004c 7B68     	 ldr r3,[r7,#4]
 1264 004e 1B7E     	 ldrb r3,[r3,#24]
 351:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1265              	 .loc 2 351 0
 1266 0050 002B     	 cmp r3,#0
 1267 0052 04D0     	 beq .L59
 353:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1268              	 .loc 2 353 0
 1269 0054 7B68     	 ldr r3,[r7,#4]
 1270 0056 1B7E     	 ldrb r3,[r3,#24]
 352:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1271              	 .loc 2 352 0
 1272 0058 012B     	 cmp r3,#1
 1273 005a 00D0     	 beq .L59
 1274 005c 53E0     	 b .L56
 1275              	.L59:
 354:../Libraries/XMCLib/src/xmc_can.c ****   {
 355:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 356:../Libraries/XMCLib/src/xmc_can.c ****   }
 357:../Libraries/XMCLib/src/xmc_can.c ****   else
 358:../Libraries/XMCLib/src/xmc_can.c ****   {
 359:../Libraries/XMCLib/src/xmc_can.c **** 
 360:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 361:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1276              	 .loc 2 361 0
 1277 005e 7B68     	 ldr r3,[r7,#4]
 1278 0060 1B68     	 ldr r3,[r3]
 1279 0062 2022     	 movs r2,#32
 1280 0064 DA61     	 str r2,[r3,#28]
 362:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1281              	 .loc 2 362 0
 1282 0066 7B68     	 ldr r3,[r7,#4]
 1283 0068 DB79     	 ldrb r3,[r3,#7]
 1284 006a 03F02003 	 and r3,r3,#32
 1285 006e DBB2     	 uxtb r3,r3
 1286 0070 002B     	 cmp r3,#0
 1287 0072 28D1     	 bne .L60
 363:../Libraries/XMCLib/src/xmc_can.c ****     {
 364:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1288              	 .loc 2 364 0
 1289 0074 7B68     	 ldr r3,[r7,#4]
 1290 0076 5B68     	 ldr r3,[r3,#4]
 1291 0078 BB60     	 str r3,[r7,#8]
 365:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1292              	 .loc 2 365 0
 1293 007a BB68     	 ldr r3,[r7,#8]
 1294 007c 03F06043 	 and r3,r3,#-536870912
 1295 0080 BB60     	 str r3,[r7,#8]
 366:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1296              	 .loc 2 366 0
 1297 0082 7B68     	 ldr r3,[r7,#4]
 1298 0084 5B68     	 ldr r3,[r3,#4]
 1299 0086 C3F31C03 	 ubfx r3,r3,#0,#29
 1300 008a 9B04     	 lsls r3,r3,#18
 1301 008c 1A46     	 mov r2,r3
 1302 008e BB68     	 ldr r3,[r7,#8]
 1303 0090 1343     	 orrs r3,r3,r2
 1304 0092 BB60     	 str r3,[r7,#8]
 367:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1305              	 .loc 2 367 0
 1306 0094 7B68     	 ldr r3,[r7,#4]
 1307 0096 1B68     	 ldr r3,[r3]
 1308 0098 BA68     	 ldr r2,[r7,#8]
 1309 009a 9A61     	 str r2,[r3,#24]
 368:../Libraries/XMCLib/src/xmc_can.c **** 
 369:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1310              	 .loc 2 369 0
 1311 009c 7B68     	 ldr r3,[r7,#4]
 1312 009e 9B68     	 ldr r3,[r3,#8]
 1313 00a0 BB60     	 str r3,[r7,#8]
 370:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1314              	 .loc 2 370 0
 1315 00a2 BB68     	 ldr r3,[r7,#8]
 1316 00a4 03F06043 	 and r3,r3,#-536870912
 1317 00a8 BB60     	 str r3,[r7,#8]
 371:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1318              	 .loc 2 371 0
 1319 00aa 7B68     	 ldr r3,[r7,#4]
 1320 00ac 9B68     	 ldr r3,[r3,#8]
 1321 00ae C3F31C03 	 ubfx r3,r3,#0,#29
 1322 00b2 9B04     	 lsls r3,r3,#18
 1323 00b4 1A46     	 mov r2,r3
 1324 00b6 BB68     	 ldr r3,[r7,#8]
 1325 00b8 1343     	 orrs r3,r3,r2
 1326 00ba BB60     	 str r3,[r7,#8]
 372:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1327              	 .loc 2 372 0
 1328 00bc 7B68     	 ldr r3,[r7,#4]
 1329 00be 1B68     	 ldr r3,[r3]
 1330 00c0 BA68     	 ldr r2,[r7,#8]
 1331 00c2 DA60     	 str r2,[r3,#12]
 1332 00c4 09E0     	 b .L61
 1333              	.L60:
 373:../Libraries/XMCLib/src/xmc_can.c ****     }
 374:../Libraries/XMCLib/src/xmc_can.c ****     else
 375:../Libraries/XMCLib/src/xmc_can.c ****     {
 376:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1334              	 .loc 2 376 0
 1335 00c6 7B68     	 ldr r3,[r7,#4]
 1336 00c8 1B68     	 ldr r3,[r3]
 1337 00ca 7A68     	 ldr r2,[r7,#4]
 1338 00cc 5268     	 ldr r2,[r2,#4]
 1339 00ce 9A61     	 str r2,[r3,#24]
 377:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1340              	 .loc 2 377 0
 1341 00d0 7B68     	 ldr r3,[r7,#4]
 1342 00d2 1B68     	 ldr r3,[r3]
 1343 00d4 7A68     	 ldr r2,[r7,#4]
 1344 00d6 9268     	 ldr r2,[r2,#8]
 1345 00d8 DA60     	 str r2,[r3,#12]
 1346              	.L61:
 378:../Libraries/XMCLib/src/xmc_can.c ****     }
 379:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 380:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1347              	 .loc 2 380 0
 1348 00da 7B68     	 ldr r3,[r7,#4]
 1349 00dc 1B7E     	 ldrb r3,[r3,#24]
 1350 00de 012B     	 cmp r3,#1
 1351 00e0 08D1     	 bne .L62
 381:../Libraries/XMCLib/src/xmc_can.c ****     {
 382:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 383:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1352              	 .loc 2 383 0
 1353 00e2 7868     	 ldr r0,[r7,#4]
 1354 00e4 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 384:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1355              	 .loc 2 384 0
 1356 00e8 7B68     	 ldr r3,[r7,#4]
 1357 00ea 1B68     	 ldr r3,[r3]
 1358 00ec 4FF00062 	 mov r2,#134217728
 1359 00f0 DA61     	 str r2,[r3,#28]
 1360 00f2 04E0     	 b .L63
 1361              	.L62:
 385:../Libraries/XMCLib/src/xmc_can.c ****     }
 386:../Libraries/XMCLib/src/xmc_can.c ****     else
 387:../Libraries/XMCLib/src/xmc_can.c ****     {
 388:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 389:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1362              	 .loc 2 389 0
 1363 00f4 7B68     	 ldr r3,[r7,#4]
 1364 00f6 1B68     	 ldr r3,[r3]
 1365 00f8 4FF40062 	 mov r2,#2048
 1366 00fc DA61     	 str r2,[r3,#28]
 1367              	.L63:
 390:../Libraries/XMCLib/src/xmc_can.c ****     }
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 393:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_MOC
 1368              	 .loc 2 393 0
 1369 00fe 7B68     	 ldr r3,[r7,#4]
 1370 0100 1B68     	 ldr r3,[r3]
 1371 0102 024A     	 ldr r2,.L64
 1372 0104 DA61     	 str r2,[r3,#28]
 1373              	.L56:
 394:../Libraries/XMCLib/src/xmc_can.c ****                                  CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 395:../Libraries/XMCLib/src/xmc_can.c ****   }
 396:../Libraries/XMCLib/src/xmc_can.c **** }
 1374              	 .loc 2 396 0
 1375 0106 1037     	 adds r7,r7,#16
 1376              	.LCFI82:
 1377              	 .cfi_def_cfa_offset 8
 1378 0108 BD46     	 mov sp,r7
 1379              	.LCFI83:
 1380              	 .cfi_def_cfa_register 13
 1381              	 
 1382 010a 80BD     	 pop {r7,pc}
 1383              	.L65:
 1384              	 .align 2
 1385              	.L64:
 1386 010c 4000A006 	 .word 111149120
 1387              	 .cfi_endproc
 1388              	.LFE214:
 1390              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1391              	 .align 2
 1392              	 .global XMC_CAN_MO_UpdateData
 1393              	 .thumb
 1394              	 .thumb_func
 1396              	XMC_CAN_MO_UpdateData:
 1397              	.LFB215:
 397:../Libraries/XMCLib/src/xmc_can.c **** 
 398:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 399:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 400:../Libraries/XMCLib/src/xmc_can.c **** {
 1398              	 .loc 2 400 0
 1399              	 .cfi_startproc
 1400              	 
 1401              	 
 1402              	 
 1403 0000 80B4     	 push {r7}
 1404              	.LCFI84:
 1405              	 .cfi_def_cfa_offset 4
 1406              	 .cfi_offset 7,-4
 1407 0002 85B0     	 sub sp,sp,#20
 1408              	.LCFI85:
 1409              	 .cfi_def_cfa_offset 24
 1410 0004 00AF     	 add r7,sp,#0
 1411              	.LCFI86:
 1412              	 .cfi_def_cfa_register 7
 1413 0006 7860     	 str r0,[r7,#4]
 401:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1414              	 .loc 2 401 0
 1415 0008 0323     	 movs r3,#3
 1416 000a FB73     	 strb r3,[r7,#15]
 402:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 403:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1417              	 .loc 2 403 0
 1418 000c 7B68     	 ldr r3,[r7,#4]
 1419 000e 1B7E     	 ldrb r3,[r3,#24]
 1420 0010 012B     	 cmp r3,#1
 1421 0012 22D1     	 bne .L67
 404:../Libraries/XMCLib/src/xmc_can.c ****   {
 405:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1422              	 .loc 2 405 0
 1423 0014 7B68     	 ldr r3,[r7,#4]
 1424 0016 1B68     	 ldr r3,[r3]
 1425 0018 2022     	 movs r2,#32
 1426 001a DA61     	 str r2,[r3,#28]
 406:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 407:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1427              	 .loc 2 407 0
 1428 001c 7B68     	 ldr r3,[r7,#4]
 1429 001e 1B68     	 ldr r3,[r3]
 1430 0020 7A68     	 ldr r2,[r7,#4]
 1431 0022 1268     	 ldr r2,[r2]
 1432 0024 1268     	 ldr r2,[r2]
 1433 0026 22F07061 	 bic r1,r2,#251658240
 408:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1434              	 .loc 2 408 0
 1435 002a 7A68     	 ldr r2,[r7,#4]
 1436 002c 127B     	 ldrb r2,[r2,#12]
 1437 002e 1206     	 lsls r2,r2,#24
 1438 0030 02F07062 	 and r2,r2,#251658240
 407:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1439              	 .loc 2 407 0
 1440 0034 0A43     	 orrs r2,r2,r1
 1441 0036 1A60     	 str r2,[r3]
 409:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 410:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 1442              	 .loc 2 410 0
 1443 0038 7B68     	 ldr r3,[r7,#4]
 1444 003a 1B68     	 ldr r3,[r3]
 1445 003c 7A68     	 ldr r2,[r7,#4]
 1446 003e 1269     	 ldr r2,[r2,#16]
 1447 0040 1A61     	 str r2,[r3,#16]
 411:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1448              	 .loc 2 411 0
 1449 0042 7B68     	 ldr r3,[r7,#4]
 1450 0044 1B68     	 ldr r3,[r3]
 1451 0046 7A68     	 ldr r2,[r7,#4]
 1452 0048 5269     	 ldr r2,[r2,#20]
 1453 004a 5A61     	 str r2,[r3,#20]
 412:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 413:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 1454              	 .loc 2 413 0
 1455 004c 7B68     	 ldr r3,[r7,#4]
 1456 004e 1B68     	 ldr r3,[r3]
 1457 0050 064A     	 ldr r2,.L70
 1458 0052 DA61     	 str r2,[r3,#28]
 414:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1459              	 .loc 2 414 0
 1460 0054 0023     	 movs r3,#0
 1461 0056 FB73     	 strb r3,[r7,#15]
 1462 0058 01E0     	 b .L68
 1463              	.L67:
 415:../Libraries/XMCLib/src/xmc_can.c ****   }
 416:../Libraries/XMCLib/src/xmc_can.c ****   else
 417:../Libraries/XMCLib/src/xmc_can.c ****   {
 418:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1464              	 .loc 2 418 0
 1465 005a 0323     	 movs r3,#3
 1466 005c FB73     	 strb r3,[r7,#15]
 1467              	.L68:
 419:../Libraries/XMCLib/src/xmc_can.c ****   }
 420:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1468              	 .loc 2 420 0
 1469 005e FB7B     	 ldrb r3,[r7,#15]
 421:../Libraries/XMCLib/src/xmc_can.c **** }
 1470              	 .loc 2 421 0
 1471 0060 1846     	 mov r0,r3
 1472 0062 1437     	 adds r7,r7,#20
 1473              	.LCFI87:
 1474              	 .cfi_def_cfa_offset 4
 1475 0064 BD46     	 mov sp,r7
 1476              	.LCFI88:
 1477              	 .cfi_def_cfa_register 13
 1478              	 
 1479 0066 5DF8047B 	 ldr r7,[sp],#4
 1480              	.LCFI89:
 1481              	 .cfi_restore 7
 1482              	 .cfi_def_cfa_offset 0
 1483 006a 7047     	 bx lr
 1484              	.L71:
 1485              	 .align 2
 1486              	.L70:
 1487 006c 40002800 	 .word 2621504
 1488              	 .cfi_endproc
 1489              	.LFE215:
 1491              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1492              	 .align 2
 1493              	 .global XMC_CAN_MO_Transmit
 1494              	 .thumb
 1495              	 .thumb_func
 1497              	XMC_CAN_MO_Transmit:
 1498              	.LFB216:
 422:../Libraries/XMCLib/src/xmc_can.c **** 
 423:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 424:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 425:../Libraries/XMCLib/src/xmc_can.c **** {
 1499              	 .loc 2 425 0
 1500              	 .cfi_startproc
 1501              	 
 1502              	 
 1503              	 
 1504 0000 80B4     	 push {r7}
 1505              	.LCFI90:
 1506              	 .cfi_def_cfa_offset 4
 1507              	 .cfi_offset 7,-4
 1508 0002 87B0     	 sub sp,sp,#28
 1509              	.LCFI91:
 1510              	 .cfi_def_cfa_offset 32
 1511 0004 00AF     	 add r7,sp,#0
 1512              	.LCFI92:
 1513              	 .cfi_def_cfa_register 7
 1514 0006 7860     	 str r0,[r7,#4]
 426:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1515              	 .loc 2 426 0
 1516 0008 0123     	 movs r3,#1
 1517 000a FB75     	 strb r3,[r7,#23]
 427:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1518              	 .loc 2 427 0
 1519 000c 7B68     	 ldr r3,[r7,#4]
 1520 000e 1B68     	 ldr r3,[r3]
 1521 0010 DB69     	 ldr r3,[r3,#28]
 1522 0012 03F02003 	 and r3,r3,#32
 1523 0016 5B09     	 lsrs r3,r3,#5
 1524 0018 3B61     	 str r3,[r7,#16]
 428:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1525              	 .loc 2 428 0
 1526 001a 7B68     	 ldr r3,[r7,#4]
 1527 001c 1B68     	 ldr r3,[r3]
 1528 001e DB69     	 ldr r3,[r3,#28]
 1529 0020 03F48073 	 and r3,r3,#256
 1530 0024 1B0A     	 lsrs r3,r3,#8
 1531 0026 FB60     	 str r3,[r7,#12]
 429:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 430:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 1532              	 .loc 2 430 0
 1533 0028 3B69     	 ldr r3,[r7,#16]
 1534 002a 002B     	 cmp r3,#0
 1535 002c 02D1     	 bne .L73
 431:../Libraries/XMCLib/src/xmc_can.c ****   {
 432:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1536              	 .loc 2 432 0
 1537 002e 0423     	 movs r3,#4
 1538 0030 FB75     	 strb r3,[r7,#23]
 1539 0032 0CE0     	 b .L74
 1540              	.L73:
 433:../Libraries/XMCLib/src/xmc_can.c ****   }
 434:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 435:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 1541              	 .loc 2 435 0
 1542 0034 FB68     	 ldr r3,[r7,#12]
 1543 0036 012B     	 cmp r3,#1
 1544 0038 02D1     	 bne .L75
 436:../Libraries/XMCLib/src/xmc_can.c ****   {
 437:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1545              	 .loc 2 437 0
 1546 003a 0223     	 movs r3,#2
 1547 003c FB75     	 strb r3,[r7,#23]
 1548 003e 06E0     	 b .L74
 1549              	.L75:
 438:../Libraries/XMCLib/src/xmc_can.c ****   }
 439:../Libraries/XMCLib/src/xmc_can.c ****   else
 440:../Libraries/XMCLib/src/xmc_can.c ****   {
 441:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 442:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 1550              	 .loc 2 442 0
 1551 0040 7B68     	 ldr r3,[r7,#4]
 1552 0042 1B68     	 ldr r3,[r3]
 1553 0044 4FF0E062 	 mov r2,#117440512
 1554 0048 DA61     	 str r2,[r3,#28]
 443:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1555              	 .loc 2 443 0
 1556 004a 0023     	 movs r3,#0
 1557 004c FB75     	 strb r3,[r7,#23]
 1558              	.L74:
 444:../Libraries/XMCLib/src/xmc_can.c ****   }
 445:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1559              	 .loc 2 445 0
 1560 004e FB7D     	 ldrb r3,[r7,#23]
 446:../Libraries/XMCLib/src/xmc_can.c **** }
 1561              	 .loc 2 446 0
 1562 0050 1846     	 mov r0,r3
 1563 0052 1C37     	 adds r7,r7,#28
 1564              	.LCFI93:
 1565              	 .cfi_def_cfa_offset 4
 1566 0054 BD46     	 mov sp,r7
 1567              	.LCFI94:
 1568              	 .cfi_def_cfa_register 13
 1569              	 
 1570 0056 5DF8047B 	 ldr r7,[sp],#4
 1571              	.LCFI95:
 1572              	 .cfi_restore 7
 1573              	 .cfi_def_cfa_offset 0
 1574 005a 7047     	 bx lr
 1575              	 .cfi_endproc
 1576              	.LFE216:
 1578              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 1579              	 .align 2
 1580              	 .global XMC_CAN_MO_ReceiveData
 1581              	 .thumb
 1582              	 .thumb_func
 1584              	XMC_CAN_MO_ReceiveData:
 1585              	.LFB217:
 447:../Libraries/XMCLib/src/xmc_can.c **** 
 448:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 449:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 450:../Libraries/XMCLib/src/xmc_can.c **** {
 1586              	 .loc 2 450 0
 1587              	 .cfi_startproc
 1588              	 
 1589              	 
 1590              	 
 1591 0000 80B4     	 push {r7}
 1592              	.LCFI96:
 1593              	 .cfi_def_cfa_offset 4
 1594              	 .cfi_offset 7,-4
 1595 0002 87B0     	 sub sp,sp,#28
 1596              	.LCFI97:
 1597              	 .cfi_def_cfa_offset 32
 1598 0004 00AF     	 add r7,sp,#0
 1599              	.LCFI98:
 1600              	 .cfi_def_cfa_register 7
 1601 0006 7860     	 str r0,[r7,#4]
 451:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1602              	 .loc 2 451 0
 1603 0008 0123     	 movs r3,#1
 1604 000a FB75     	 strb r3,[r7,#23]
 452:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 1605              	 .loc 2 452 0
 1606 000c 0023     	 movs r3,#0
 1607 000e BB75     	 strb r3,[r7,#22]
 453:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 1608              	 .loc 2 453 0
 1609 0010 0023     	 movs r3,#0
 1610 0012 7B75     	 strb r3,[r7,#21]
 454:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1611              	 .loc 2 454 0
 1612 0014 7B68     	 ldr r3,[r7,#4]
 1613 0016 1B68     	 ldr r3,[r3]
 1614 0018 DB69     	 ldr r3,[r3,#28]
 1615 001a 03F40063 	 and r3,r3,#2048
 1616 001e DB0A     	 lsrs r3,r3,#11
 1617 0020 3B61     	 str r3,[r7,#16]
 455:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1618              	 .loc 2 455 0
 1619 0022 7B68     	 ldr r3,[r7,#4]
 1620 0024 1B68     	 ldr r3,[r3]
 1621 0026 DB69     	 ldr r3,[r3,#28]
 1622 0028 03F00403 	 and r3,r3,#4
 1623 002c 9B08     	 lsrs r3,r3,#2
 1624 002e FB60     	 str r3,[r7,#12]
 456:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 457:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1625              	 .loc 2 457 0
 1626 0030 3B69     	 ldr r3,[r7,#16]
 1627 0032 002B     	 cmp r3,#0
 1628 0034 02D0     	 beq .L78
 458:../Libraries/XMCLib/src/xmc_can.c ****   {
 459:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1629              	 .loc 2 459 0
 1630 0036 0323     	 movs r3,#3
 1631 0038 FB75     	 strb r3,[r7,#23]
 1632 003a 25E0     	 b .L79
 1633              	.L78:
 460:../Libraries/XMCLib/src/xmc_can.c ****   }
 461:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 462:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 1634              	 .loc 2 462 0
 1635 003c FB68     	 ldr r3,[r7,#12]
 1636 003e 012B     	 cmp r3,#1
 1637 0040 02D1     	 bne .L80
 463:../Libraries/XMCLib/src/xmc_can.c ****   {
 464:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1638              	 .loc 2 464 0
 1639 0042 0223     	 movs r3,#2
 1640 0044 FB75     	 strb r3,[r7,#23]
 1641 0046 1FE0     	 b .L79
 1642              	.L80:
 465:../Libraries/XMCLib/src/xmc_can.c ****   }
 466:../Libraries/XMCLib/src/xmc_can.c ****   else
 467:../Libraries/XMCLib/src/xmc_can.c ****   {
 468:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 469:../Libraries/XMCLib/src/xmc_can.c ****     do
 470:../Libraries/XMCLib/src/xmc_can.c ****     {
 471:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1643              	 .loc 2 471 0 discriminator 2
 1644 0048 7B68     	 ldr r3,[r7,#4]
 1645 004a 1B68     	 ldr r3,[r3]
 1646 004c 1A69     	 ldr r2,[r3,#16]
 1647 004e 7B68     	 ldr r3,[r7,#4]
 1648 0050 1A61     	 str r2,[r3,#16]
 472:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1649              	 .loc 2 472 0 discriminator 2
 1650 0052 7B68     	 ldr r3,[r7,#4]
 1651 0054 1B68     	 ldr r3,[r3]
 1652 0056 5A69     	 ldr r2,[r3,#20]
 1653 0058 7B68     	 ldr r3,[r7,#4]
 1654 005a 5A61     	 str r2,[r3,#20]
 473:../Libraries/XMCLib/src/xmc_can.c **** 
 474:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1655              	 .loc 2 474 0 discriminator 2
 1656 005c 7B68     	 ldr r3,[r7,#4]
 1657 005e 1B68     	 ldr r3,[r3]
 1658 0060 DB69     	 ldr r3,[r3,#28]
 1659 0062 03F00403 	 and r3,r3,#4
 1660 0066 9B08     	 lsrs r3,r3,#2
 1661 0068 BB75     	 strb r3,[r7,#22]
 475:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1662              	 .loc 2 475 0 discriminator 2
 1663 006a 7B68     	 ldr r3,[r7,#4]
 1664 006c 1B68     	 ldr r3,[r3]
 1665 006e DB69     	 ldr r3,[r3,#28]
 1666 0070 03F00803 	 and r3,r3,#8
 1667 0074 DB08     	 lsrs r3,r3,#3
 1668 0076 7B75     	 strb r3,[r7,#21]
 476:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1669              	 .loc 2 476 0 discriminator 2
 1670 0078 BB7D     	 ldrb r3,[r7,#22]
 1671 007a 002B     	 cmp r3,#0
 1672 007c 02D0     	 beq .L81
 1673              	 .loc 2 476 0 is_stmt 0 discriminator 1
 1674 007e 7B7D     	 ldrb r3,[r7,#21]
 1675 0080 002B     	 cmp r3,#0
 1676 0082 E1D1     	 bne .L80
 1677              	.L81:
 477:../Libraries/XMCLib/src/xmc_can.c **** 
 478:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1678              	 .loc 2 478 0 is_stmt 1
 1679 0084 0023     	 movs r3,#0
 1680 0086 FB75     	 strb r3,[r7,#23]
 1681              	.L79:
 479:../Libraries/XMCLib/src/xmc_can.c ****   }
 480:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1682              	 .loc 2 480 0
 1683 0088 FB7D     	 ldrb r3,[r7,#23]
 481:../Libraries/XMCLib/src/xmc_can.c **** }
 1684              	 .loc 2 481 0
 1685 008a 1846     	 mov r0,r3
 1686 008c 1C37     	 adds r7,r7,#28
 1687              	.LCFI99:
 1688              	 .cfi_def_cfa_offset 4
 1689 008e BD46     	 mov sp,r7
 1690              	.LCFI100:
 1691              	 .cfi_def_cfa_register 13
 1692              	 
 1693 0090 5DF8047B 	 ldr r7,[sp],#4
 1694              	.LCFI101:
 1695              	 .cfi_restore 7
 1696              	 .cfi_def_cfa_offset 0
 1697 0094 7047     	 bx lr
 1698              	 .cfi_endproc
 1699              	.LFE217:
 1701 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 1702              	 .align 2
 1703              	 .global XMC_CAN_MO_Receive
 1704              	 .thumb
 1705              	 .thumb_func
 1707              	XMC_CAN_MO_Receive:
 1708              	.LFB218:
 482:../Libraries/XMCLib/src/xmc_can.c **** 
 483:../Libraries/XMCLib/src/xmc_can.c **** 
 484:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 485:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 486:../Libraries/XMCLib/src/xmc_can.c **** {
 1709              	 .loc 2 486 0
 1710              	 .cfi_startproc
 1711              	 
 1712              	 
 1713              	 
 1714 0000 80B4     	 push {r7}
 1715              	.LCFI102:
 1716              	 .cfi_def_cfa_offset 4
 1717              	 .cfi_offset 7,-4
 1718 0002 87B0     	 sub sp,sp,#28
 1719              	.LCFI103:
 1720              	 .cfi_def_cfa_offset 32
 1721 0004 00AF     	 add r7,sp,#0
 1722              	.LCFI104:
 1723              	 .cfi_def_cfa_register 7
 1724 0006 7860     	 str r0,[r7,#4]
 487:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1725              	 .loc 2 487 0
 1726 0008 0123     	 movs r3,#1
 1727 000a FB75     	 strb r3,[r7,#23]
 488:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 1728              	 .loc 2 488 0
 1729 000c 0023     	 movs r3,#0
 1730 000e BB75     	 strb r3,[r7,#22]
 489:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 1731              	 .loc 2 489 0
 1732 0010 0023     	 movs r3,#0
 1733 0012 7B75     	 strb r3,[r7,#21]
 490:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1734              	 .loc 2 490 0
 1735 0014 7B68     	 ldr r3,[r7,#4]
 1736 0016 1B68     	 ldr r3,[r3]
 1737 0018 DB69     	 ldr r3,[r3,#28]
 1738 001a 03F40063 	 and r3,r3,#2048
 1739 001e DB0A     	 lsrs r3,r3,#11
 1740 0020 3B61     	 str r3,[r7,#16]
 491:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1741              	 .loc 2 491 0
 1742 0022 7B68     	 ldr r3,[r7,#4]
 1743 0024 1B68     	 ldr r3,[r3]
 1744 0026 DB69     	 ldr r3,[r3,#28]
 1745 0028 03F00403 	 and r3,r3,#4
 1746 002c 9B08     	 lsrs r3,r3,#2
 1747 002e FB60     	 str r3,[r7,#12]
 492:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 493:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1748              	 .loc 2 493 0
 1749 0030 3B69     	 ldr r3,[r7,#16]
 1750 0032 002B     	 cmp r3,#0
 1751 0034 02D0     	 beq .L84
 494:../Libraries/XMCLib/src/xmc_can.c ****   {
 495:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1752              	 .loc 2 495 0
 1753 0036 0323     	 movs r3,#3
 1754 0038 FB75     	 strb r3,[r7,#23]
 1755 003a A7E0     	 b .L85
 1756              	.L84:
 496:../Libraries/XMCLib/src/xmc_can.c ****   }
 497:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 498:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 1757              	 .loc 2 498 0
 1758 003c FB68     	 ldr r3,[r7,#12]
 1759 003e 012B     	 cmp r3,#1
 1760 0040 02D1     	 bne .L86
 499:../Libraries/XMCLib/src/xmc_can.c ****   {
 500:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1761              	 .loc 2 500 0
 1762 0042 0223     	 movs r3,#2
 1763 0044 FB75     	 strb r3,[r7,#23]
 1764 0046 A1E0     	 b .L85
 1765              	.L86:
 501:../Libraries/XMCLib/src/xmc_can.c ****   }
 502:../Libraries/XMCLib/src/xmc_can.c ****   else
 503:../Libraries/XMCLib/src/xmc_can.c ****   {
 504:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 505:../Libraries/XMCLib/src/xmc_can.c ****     do
 506:../Libraries/XMCLib/src/xmc_can.c ****     {
 507:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1766              	 .loc 2 507 0
 1767 0048 7B68     	 ldr r3,[r7,#4]
 1768 004a 1B68     	 ldr r3,[r3]
 1769 004c 0822     	 movs r2,#8
 1770 004e DA61     	 str r2,[r3,#28]
 508:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 1771              	 .loc 2 508 0
 1772 0050 7B68     	 ldr r3,[r7,#4]
 1773 0052 1B68     	 ldr r3,[r3]
 1774 0054 9B69     	 ldr r3,[r3,#24]
 1775 0056 03F00053 	 and r3,r3,#536870912
 1776 005a 5B0F     	 lsrs r3,r3,#29
 1777 005c 002B     	 cmp r3,#0
 1778 005e 40D1     	 bne .L87
 509:../Libraries/XMCLib/src/xmc_can.c ****       {
 510:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 1779              	 .loc 2 510 0
 1780 0060 7A68     	 ldr r2,[r7,#4]
 1781 0062 D379     	 ldrb r3,[r2,#7]
 1782 0064 6FF34513 	 bfc r3,#5,#1
 1783 0068 D371     	 strb r3,[r2,#7]
 511:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 1784              	 .loc 2 511 0
 1785 006a 7B68     	 ldr r3,[r7,#4]
 1786 006c 1B68     	 ldr r3,[r3]
 1787 006e 9A69     	 ldr r2,[r3,#24]
 1788 0070 4A4B     	 ldr r3,.L93
 1789 0072 1340     	 ands r3,r3,r2
 1790 0074 9B0C     	 lsrs r3,r3,#18
 1791 0076 23F06041 	 bic r1,r3,#-536870912
 1792 007a 7A68     	 ldr r2,[r7,#4]
 1793 007c 5368     	 ldr r3,[r2,#4]
 1794 007e 61F31C03 	 bfi r3,r1,#0,#29
 1795 0082 5360     	 str r3,[r2,#4]
 512:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1796              	 .loc 2 512 0
 1797 0084 7B68     	 ldr r3,[r7,#4]
 1798 0086 1B68     	 ldr r3,[r3]
 1799 0088 DB68     	 ldr r3,[r3,#12]
 1800 008a 03F00053 	 and r3,r3,#536870912
 1801 008e 5B0F     	 lsrs r3,r3,#29
 1802 0090 DBB2     	 uxtb r3,r3
 1803 0092 03F00103 	 and r3,r3,#1
 1804 0096 D9B2     	 uxtb r1,r3
 1805 0098 7A68     	 ldr r2,[r7,#4]
 1806 009a D37A     	 ldrb r3,[r2,#11]
 1807 009c 61F34513 	 bfi r3,r1,#5,#1
 1808 00a0 D372     	 strb r3,[r2,#11]
 513:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 1809              	 .loc 2 513 0
 1810 00a2 7B68     	 ldr r3,[r7,#4]
 1811 00a4 DB7A     	 ldrb r3,[r3,#11]
 1812 00a6 03F02003 	 and r3,r3,#32
 1813 00aa DBB2     	 uxtb r3,r3
 1814 00ac 002B     	 cmp r3,#0
 1815 00ae 0DD0     	 beq .L88
 514:../Libraries/XMCLib/src/xmc_can.c ****         {
 515:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 1816              	 .loc 2 515 0
 1817 00b0 7B68     	 ldr r3,[r7,#4]
 1818 00b2 1B68     	 ldr r3,[r3]
 1819 00b4 DA68     	 ldr r2,[r3,#12]
 1820 00b6 394B     	 ldr r3,.L93
 1821 00b8 1340     	 ands r3,r3,r2
 1822 00ba 9B0C     	 lsrs r3,r3,#18
 1823 00bc 23F06041 	 bic r1,r3,#-536870912
 1824 00c0 7A68     	 ldr r2,[r7,#4]
 1825 00c2 9368     	 ldr r3,[r2,#8]
 1826 00c4 61F31C03 	 bfi r3,r1,#0,#29
 1827 00c8 9360     	 str r3,[r2,#8]
 1828 00ca 32E0     	 b .L90
 1829              	.L88:
 516:../Libraries/XMCLib/src/xmc_can.c ****         }
 517:../Libraries/XMCLib/src/xmc_can.c ****         else
 518:../Libraries/XMCLib/src/xmc_can.c ****         {
 519:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 1830              	 .loc 2 519 0
 1831 00cc 7B68     	 ldr r3,[r7,#4]
 1832 00ce 1B68     	 ldr r3,[r3]
 1833 00d0 DB68     	 ldr r3,[r3,#12]
 1834 00d2 23F06041 	 bic r1,r3,#-536870912
 1835 00d6 7A68     	 ldr r2,[r7,#4]
 1836 00d8 9368     	 ldr r3,[r2,#8]
 1837 00da 61F31C03 	 bfi r3,r1,#0,#29
 1838 00de 9360     	 str r3,[r2,#8]
 1839 00e0 27E0     	 b .L90
 1840              	.L87:
 520:../Libraries/XMCLib/src/xmc_can.c ****         }
 521:../Libraries/XMCLib/src/xmc_can.c ****       }
 522:../Libraries/XMCLib/src/xmc_can.c ****       else
 523:../Libraries/XMCLib/src/xmc_can.c ****       {
 524:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 1841              	 .loc 2 524 0
 1842 00e2 7A68     	 ldr r2,[r7,#4]
 1843 00e4 D379     	 ldrb r3,[r2,#7]
 1844 00e6 43F02003 	 orr r3,r3,#32
 1845 00ea D371     	 strb r3,[r2,#7]
 525:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 1846              	 .loc 2 525 0
 1847 00ec 7B68     	 ldr r3,[r7,#4]
 1848 00ee 1B68     	 ldr r3,[r3]
 1849 00f0 9B69     	 ldr r3,[r3,#24]
 1850 00f2 23F06041 	 bic r1,r3,#-536870912
 1851 00f6 7A68     	 ldr r2,[r7,#4]
 1852 00f8 5368     	 ldr r3,[r2,#4]
 1853 00fa 61F31C03 	 bfi r3,r1,#0,#29
 1854 00fe 5360     	 str r3,[r2,#4]
 526:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 1855              	 .loc 2 526 0
 1856 0100 7B68     	 ldr r3,[r7,#4]
 1857 0102 1B68     	 ldr r3,[r3]
 1858 0104 DB68     	 ldr r3,[r3,#12]
 1859 0106 23F06041 	 bic r1,r3,#-536870912
 1860 010a 7A68     	 ldr r2,[r7,#4]
 1861 010c 9368     	 ldr r3,[r2,#8]
 1862 010e 61F31C03 	 bfi r3,r1,#0,#29
 1863 0112 9360     	 str r3,[r2,#8]
 527:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1864              	 .loc 2 527 0
 1865 0114 7B68     	 ldr r3,[r7,#4]
 1866 0116 1B68     	 ldr r3,[r3]
 1867 0118 DB68     	 ldr r3,[r3,#12]
 1868 011a 03F00053 	 and r3,r3,#536870912
 1869 011e 5B0F     	 lsrs r3,r3,#29
 1870 0120 DBB2     	 uxtb r3,r3
 1871 0122 03F00103 	 and r3,r3,#1
 1872 0126 D9B2     	 uxtb r1,r3
 1873 0128 7A68     	 ldr r2,[r7,#4]
 1874 012a D37A     	 ldrb r3,[r2,#11]
 1875 012c 61F34513 	 bfi r3,r1,#5,#1
 1876 0130 D372     	 strb r3,[r2,#11]
 1877              	.L90:
 528:../Libraries/XMCLib/src/xmc_can.c ****       }
 529:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 1878              	 .loc 2 529 0
 1879 0132 7B68     	 ldr r3,[r7,#4]
 1880 0134 1B68     	 ldr r3,[r3]
 1881 0136 1B68     	 ldr r3,[r3]
 1882 0138 03F07063 	 and r3,r3,#251658240
 1883 013c 1B0E     	 lsrs r3,r3,#24
 1884 013e DAB2     	 uxtb r2,r3
 1885 0140 7B68     	 ldr r3,[r7,#4]
 1886 0142 1A73     	 strb r2,[r3,#12]
 530:../Libraries/XMCLib/src/xmc_can.c **** 
 531:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1887              	 .loc 2 531 0
 1888 0144 7B68     	 ldr r3,[r7,#4]
 1889 0146 1B68     	 ldr r3,[r3]
 1890 0148 1A69     	 ldr r2,[r3,#16]
 1891 014a 7B68     	 ldr r3,[r7,#4]
 1892 014c 1A61     	 str r2,[r3,#16]
 532:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1893              	 .loc 2 532 0
 1894 014e 7B68     	 ldr r3,[r7,#4]
 1895 0150 1B68     	 ldr r3,[r3]
 1896 0152 5A69     	 ldr r2,[r3,#20]
 1897 0154 7B68     	 ldr r3,[r7,#4]
 1898 0156 5A61     	 str r2,[r3,#20]
 533:../Libraries/XMCLib/src/xmc_can.c **** 
 534:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1899              	 .loc 2 534 0
 1900 0158 7B68     	 ldr r3,[r7,#4]
 1901 015a 1B68     	 ldr r3,[r3]
 1902 015c DB69     	 ldr r3,[r3,#28]
 1903 015e 03F00403 	 and r3,r3,#4
 1904 0162 9B08     	 lsrs r3,r3,#2
 1905 0164 BB75     	 strb r3,[r7,#22]
 535:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1906              	 .loc 2 535 0
 1907 0166 7B68     	 ldr r3,[r7,#4]
 1908 0168 1B68     	 ldr r3,[r3]
 1909 016a DB69     	 ldr r3,[r3,#28]
 1910 016c 03F00803 	 and r3,r3,#8
 1911 0170 DB08     	 lsrs r3,r3,#3
 1912 0172 7B75     	 strb r3,[r7,#21]
 536:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1913              	 .loc 2 536 0
 1914 0174 BB7D     	 ldrb r3,[r7,#22]
 1915 0176 002B     	 cmp r3,#0
 1916 0178 03D0     	 beq .L91
 1917              	 .loc 2 536 0 is_stmt 0 discriminator 1
 1918 017a 7B7D     	 ldrb r3,[r7,#21]
 1919 017c 002B     	 cmp r3,#0
 1920 017e 7FF463AF 	 bne .L86
 1921              	.L91:
 537:../Libraries/XMCLib/src/xmc_can.c **** 
 538:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 1922              	 .loc 2 538 0 is_stmt 1
 1923 0182 7B68     	 ldr r3,[r7,#4]
 1924 0184 0022     	 movs r2,#0
 1925 0186 1A76     	 strb r2,[r3,#24]
 539:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1926              	 .loc 2 539 0
 1927 0188 0023     	 movs r3,#0
 1928 018a FB75     	 strb r3,[r7,#23]
 1929              	.L85:
 540:../Libraries/XMCLib/src/xmc_can.c ****   }
 541:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1930              	 .loc 2 541 0
 1931 018c FB7D     	 ldrb r3,[r7,#23]
 542:../Libraries/XMCLib/src/xmc_can.c **** }
 1932              	 .loc 2 542 0
 1933 018e 1846     	 mov r0,r3
 1934 0190 1C37     	 adds r7,r7,#28
 1935              	.LCFI105:
 1936              	 .cfi_def_cfa_offset 4
 1937 0192 BD46     	 mov sp,r7
 1938              	.LCFI106:
 1939              	 .cfi_def_cfa_register 13
 1940              	 
 1941 0194 5DF8047B 	 ldr r7,[sp],#4
 1942              	.LCFI107:
 1943              	 .cfi_restore 7
 1944              	 .cfi_def_cfa_offset 0
 1945 0198 7047     	 bx lr
 1946              	.L94:
 1947 019a 00BF     	 .align 2
 1948              	.L93:
 1949 019c 0000FC1F 	 .word 536608768
 1950              	 .cfi_endproc
 1951              	.LFE218:
 1953              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 1954              	 .align 2
 1955              	 .global XMC_CAN_NODE_EnableEvent
 1956              	 .thumb
 1957              	 .thumb_func
 1959              	XMC_CAN_NODE_EnableEvent:
 1960              	.LFB219:
 543:../Libraries/XMCLib/src/xmc_can.c **** 
 544:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 545:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 546:../Libraries/XMCLib/src/xmc_can.c **** {
 1961              	 .loc 2 546 0
 1962              	 .cfi_startproc
 1963              	 
 1964              	 
 1965              	 
 1966 0000 80B4     	 push {r7}
 1967              	.LCFI108:
 1968              	 .cfi_def_cfa_offset 4
 1969              	 .cfi_offset 7,-4
 1970 0002 83B0     	 sub sp,sp,#12
 1971              	.LCFI109:
 1972              	 .cfi_def_cfa_offset 16
 1973 0004 00AF     	 add r7,sp,#0
 1974              	.LCFI110:
 1975              	 .cfi_def_cfa_register 7
 1976 0006 7860     	 str r0,[r7,#4]
 1977 0008 3960     	 str r1,[r7]
 547:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 1978              	 .loc 2 547 0
 1979 000a 3B68     	 ldr r3,[r7]
 1980 000c B3F5800F 	 cmp r3,#4194304
 1981 0010 06D0     	 beq .L96
 548:../Libraries/XMCLib/src/xmc_can.c ****   {
 549:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 1982              	 .loc 2 549 0
 1983 0012 7B68     	 ldr r3,[r7,#4]
 1984 0014 1A68     	 ldr r2,[r3]
 1985 0016 3B68     	 ldr r3,[r7]
 1986 0018 1A43     	 orrs r2,r2,r3
 1987 001a 7B68     	 ldr r3,[r7,#4]
 1988 001c 1A60     	 str r2,[r3]
 1989 001e 05E0     	 b .L95
 1990              	.L96:
 550:../Libraries/XMCLib/src/xmc_can.c ****   }
 551:../Libraries/XMCLib/src/xmc_can.c ****   else
 552:../Libraries/XMCLib/src/xmc_can.c ****   {
 553:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 1991              	 .loc 2 553 0
 1992 0020 7B68     	 ldr r3,[r7,#4]
 1993 0022 9A69     	 ldr r2,[r3,#24]
 1994 0024 3B68     	 ldr r3,[r7]
 1995 0026 1A43     	 orrs r2,r2,r3
 1996 0028 7B68     	 ldr r3,[r7,#4]
 1997 002a 9A61     	 str r2,[r3,#24]
 1998              	.L95:
 554:../Libraries/XMCLib/src/xmc_can.c ****   }
 555:../Libraries/XMCLib/src/xmc_can.c **** }
 1999              	 .loc 2 555 0
 2000 002c 0C37     	 adds r7,r7,#12
 2001              	.LCFI111:
 2002              	 .cfi_def_cfa_offset 4
 2003 002e BD46     	 mov sp,r7
 2004              	.LCFI112:
 2005              	 .cfi_def_cfa_register 13
 2006              	 
 2007 0030 5DF8047B 	 ldr r7,[sp],#4
 2008              	.LCFI113:
 2009              	 .cfi_restore 7
 2010              	 .cfi_def_cfa_offset 0
 2011 0034 7047     	 bx lr
 2012              	 .cfi_endproc
 2013              	.LFE219:
 2015 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2016              	 .align 2
 2017              	 .global XMC_CAN_NODE_DisableEvent
 2018              	 .thumb
 2019              	 .thumb_func
 2021              	XMC_CAN_NODE_DisableEvent:
 2022              	.LFB220:
 556:../Libraries/XMCLib/src/xmc_can.c **** 
 557:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 558:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 559:../Libraries/XMCLib/src/xmc_can.c **** {
 2023              	 .loc 2 559 0
 2024              	 .cfi_startproc
 2025              	 
 2026              	 
 2027              	 
 2028 0000 80B4     	 push {r7}
 2029              	.LCFI114:
 2030              	 .cfi_def_cfa_offset 4
 2031              	 .cfi_offset 7,-4
 2032 0002 83B0     	 sub sp,sp,#12
 2033              	.LCFI115:
 2034              	 .cfi_def_cfa_offset 16
 2035 0004 00AF     	 add r7,sp,#0
 2036              	.LCFI116:
 2037              	 .cfi_def_cfa_register 7
 2038 0006 7860     	 str r0,[r7,#4]
 2039 0008 3960     	 str r1,[r7]
 560:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2040              	 .loc 2 560 0
 2041 000a 3B68     	 ldr r3,[r7]
 2042 000c B3F5800F 	 cmp r3,#4194304
 2043 0010 07D0     	 beq .L99
 561:../Libraries/XMCLib/src/xmc_can.c ****   {
 562:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2044              	 .loc 2 562 0
 2045 0012 7B68     	 ldr r3,[r7,#4]
 2046 0014 1A68     	 ldr r2,[r3]
 2047 0016 3B68     	 ldr r3,[r7]
 2048 0018 DB43     	 mvns r3,r3
 2049 001a 1A40     	 ands r2,r2,r3
 2050 001c 7B68     	 ldr r3,[r7,#4]
 2051 001e 1A60     	 str r2,[r3]
 2052 0020 06E0     	 b .L98
 2053              	.L99:
 563:../Libraries/XMCLib/src/xmc_can.c ****   }
 564:../Libraries/XMCLib/src/xmc_can.c ****   else
 565:../Libraries/XMCLib/src/xmc_can.c ****   {
 566:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2054              	 .loc 2 566 0
 2055 0022 7B68     	 ldr r3,[r7,#4]
 2056 0024 9A69     	 ldr r2,[r3,#24]
 2057 0026 3B68     	 ldr r3,[r7]
 2058 0028 DB43     	 mvns r3,r3
 2059 002a 1A40     	 ands r2,r2,r3
 2060 002c 7B68     	 ldr r3,[r7,#4]
 2061 002e 9A61     	 str r2,[r3,#24]
 2062              	.L98:
 567:../Libraries/XMCLib/src/xmc_can.c ****   }
 568:../Libraries/XMCLib/src/xmc_can.c **** }
 2063              	 .loc 2 568 0
 2064 0030 0C37     	 adds r7,r7,#12
 2065              	.LCFI117:
 2066              	 .cfi_def_cfa_offset 4
 2067 0032 BD46     	 mov sp,r7
 2068              	.LCFI118:
 2069              	 .cfi_def_cfa_register 13
 2070              	 
 2071 0034 5DF8047B 	 ldr r7,[sp],#4
 2072              	.LCFI119:
 2073              	 .cfi_restore 7
 2074              	 .cfi_def_cfa_offset 0
 2075 0038 7047     	 bx lr
 2076              	 .cfi_endproc
 2077              	.LFE220:
 2079 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2080              	 .align 2
 2081              	 .global XMC_CAN_TXFIFO_Transmit
 2082              	 .thumb
 2083              	 .thumb_func
 2085              	XMC_CAN_TXFIFO_Transmit:
 2086              	.LFB221:
 569:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 570:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 571:../Libraries/XMCLib/src/xmc_can.c **** {
 2087              	 .loc 2 571 0
 2088              	 .cfi_startproc
 2089              	 
 2090              	 
 2091              	 
 2092 0000 80B4     	 push {r7}
 2093              	.LCFI120:
 2094              	 .cfi_def_cfa_offset 4
 2095              	 .cfi_offset 7,-4
 2096 0002 89B0     	 sub sp,sp,#36
 2097              	.LCFI121:
 2098              	 .cfi_def_cfa_offset 40
 2099 0004 00AF     	 add r7,sp,#0
 2100              	.LCFI122:
 2101              	 .cfi_def_cfa_register 7
 2102 0006 7860     	 str r0,[r7,#4]
 572:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2103              	 .loc 2 572 0
 2104 0008 0123     	 movs r3,#1
 2105 000a FB77     	 strb r3,[r7,#31]
 573:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2106              	 .loc 2 573 0
 2107 000c 7B68     	 ldr r3,[r7,#4]
 2108 000e 1B68     	 ldr r3,[r3]
 2109 0010 DB69     	 ldr r3,[r3,#28]
 2110 0012 03F02003 	 and r3,r3,#32
 2111 0016 5B09     	 lsrs r3,r3,#5
 2112 0018 BB61     	 str r3,[r7,#24]
 574:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2113              	 .loc 2 574 0
 2114 001a 7B68     	 ldr r3,[r7,#4]
 2115 001c 1B68     	 ldr r3,[r3]
 2116 001e DB69     	 ldr r3,[r3,#28]
 2117 0020 03F48073 	 and r3,r3,#256
 2118 0024 1B0A     	 lsrs r3,r3,#8
 2119 0026 7B61     	 str r3,[r7,#20]
 575:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2120              	 .loc 2 575 0
 2121 0028 7B68     	 ldr r3,[r7,#4]
 2122 002a 1B68     	 ldr r3,[r3]
 2123 002c 5B68     	 ldr r3,[r3,#4]
 2124 002e 03F47F03 	 and r3,r3,#16711680
 2125 0032 1B0C     	 lsrs r3,r3,#16
 2126 0034 3B61     	 str r3,[r7,#16]
 576:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2127              	 .loc 2 576 0
 2128 0036 3B69     	 ldr r3,[r7,#16]
 2129 0038 03F11073 	 add r3,r3,#37748736
 2130 003c 03F52863 	 add r3,r3,#2688
 2131 0040 5B01     	 lsls r3,r3,#5
 2132 0042 FB60     	 str r3,[r7,#12]
 577:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 578:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2133              	 .loc 2 578 0
 2134 0044 BB69     	 ldr r3,[r7,#24]
 2135 0046 002B     	 cmp r3,#0
 2136 0048 02D1     	 bne .L102
 579:../Libraries/XMCLib/src/xmc_can.c ****   {
 580:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2137              	 .loc 2 580 0
 2138 004a 0423     	 movs r3,#4
 2139 004c FB77     	 strb r3,[r7,#31]
 2140 004e 0BE0     	 b .L103
 2141              	.L102:
 581:../Libraries/XMCLib/src/xmc_can.c ****   }
 582:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 583:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2142              	 .loc 2 583 0
 2143 0050 7B69     	 ldr r3,[r7,#20]
 2144 0052 012B     	 cmp r3,#1
 2145 0054 02D1     	 bne .L104
 584:../Libraries/XMCLib/src/xmc_can.c ****   {
 585:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2146              	 .loc 2 585 0
 2147 0056 0223     	 movs r3,#2
 2148 0058 FB77     	 strb r3,[r7,#31]
 2149 005a 05E0     	 b .L103
 2150              	.L104:
 586:../Libraries/XMCLib/src/xmc_can.c ****   }
 587:../Libraries/XMCLib/src/xmc_can.c ****   else
 588:../Libraries/XMCLib/src/xmc_can.c ****   {
 589:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2151              	 .loc 2 589 0
 2152 005c FB68     	 ldr r3,[r7,#12]
 2153 005e 4FF0E062 	 mov r2,#117440512
 2154 0062 DA61     	 str r2,[r3,#28]
 590:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2155              	 .loc 2 590 0
 2156 0064 0023     	 movs r3,#0
 2157 0066 FB77     	 strb r3,[r7,#31]
 2158              	.L103:
 591:../Libraries/XMCLib/src/xmc_can.c ****   }
 592:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2159              	 .loc 2 592 0
 2160 0068 FB7F     	 ldrb r3,[r7,#31]
 593:../Libraries/XMCLib/src/xmc_can.c **** }
 2161              	 .loc 2 593 0
 2162 006a 1846     	 mov r0,r3
 2163 006c 2437     	 adds r7,r7,#36
 2164              	.LCFI123:
 2165              	 .cfi_def_cfa_offset 4
 2166 006e BD46     	 mov sp,r7
 2167              	.LCFI124:
 2168              	 .cfi_def_cfa_register 13
 2169              	 
 2170 0070 5DF8047B 	 ldr r7,[sp],#4
 2171              	.LCFI125:
 2172              	 .cfi_restore 7
 2173              	 .cfi_def_cfa_offset 0
 2174 0074 7047     	 bx lr
 2175              	 .cfi_endproc
 2176              	.LFE221:
 2178 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2179              	 .align 2
 2180              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2181              	 .thumb
 2182              	 .thumb_func
 2184              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2185              	.LFB222:
 594:../Libraries/XMCLib/src/xmc_can.c **** 
 595:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 596:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 597:../Libraries/XMCLib/src/xmc_can.c **** {
 2186              	 .loc 2 597 0
 2187              	 .cfi_startproc
 2188              	 
 2189              	 
 2190              	 
 2191 0000 80B4     	 push {r7}
 2192              	.LCFI126:
 2193              	 .cfi_def_cfa_offset 4
 2194              	 .cfi_offset 7,-4
 2195 0002 83B0     	 sub sp,sp,#12
 2196              	.LCFI127:
 2197              	 .cfi_def_cfa_offset 16
 2198 0004 00AF     	 add r7,sp,#0
 2199              	.LCFI128:
 2200              	 .cfi_def_cfa_register 7
 2201 0006 7860     	 str r0,[r7,#4]
 2202 0008 3960     	 str r1,[r7]
 598:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2203              	 .loc 2 598 0
 2204 000a 7B68     	 ldr r3,[r7,#4]
 2205 000c 1B68     	 ldr r3,[r3]
 2206 000e 7A68     	 ldr r2,[r7,#4]
 2207 0010 1268     	 ldr r2,[r2]
 2208 0012 1268     	 ldr r2,[r2]
 2209 0014 22F00F02 	 bic r2,r2,#15
 2210 0018 42F00202 	 orr r2,r2,#2
 2211 001c 1A60     	 str r2,[r3]
 599:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2212              	 .loc 2 600 0
 2213 001e 7B68     	 ldr r3,[r7,#4]
 2214 0020 1B68     	 ldr r3,[r3]
 2215 0022 7A68     	 ldr r2,[r7,#4]
 2216 0024 1268     	 ldr r2,[r2]
 2217 0026 5268     	 ldr r2,[r2,#4]
 2218 0028 02F07F42 	 and r2,r2,#-16777216
 601:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 602:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 603:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2219              	 .loc 2 603 0
 2220 002c 3978     	 ldrb r1,[r7]
 602:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2221              	 .loc 2 602 0
 2222 002e 1143     	 orrs r1,r1,r2
 604:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2223              	 .loc 2 604 0
 2224 0030 BA78     	 ldrb r2,[r7,#2]
 2225 0032 1204     	 lsls r2,r2,#16
 2226 0034 02F47F02 	 and r2,r2,#16711680
 603:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2227              	 .loc 2 603 0
 2228 0038 1143     	 orrs r1,r1,r2
 605:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2229              	 .loc 2 605 0
 2230 003a 7A78     	 ldrb r2,[r7,#1]
 2231 003c 1202     	 lsls r2,r2,#8
 2232 003e 92B2     	 uxth r2,r2
 604:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2233              	 .loc 2 604 0
 2234 0040 0A43     	 orrs r2,r2,r1
 600:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2235              	 .loc 2 600 0
 2236 0042 5A60     	 str r2,[r3,#4]
 606:../Libraries/XMCLib/src/xmc_can.c **** }
 2237              	 .loc 2 606 0
 2238 0044 0C37     	 adds r7,r7,#12
 2239              	.LCFI129:
 2240              	 .cfi_def_cfa_offset 4
 2241 0046 BD46     	 mov sp,r7
 2242              	.LCFI130:
 2243              	 .cfi_def_cfa_register 13
 2244              	 
 2245 0048 5DF8047B 	 ldr r7,[sp],#4
 2246              	.LCFI131:
 2247              	 .cfi_restore 7
 2248              	 .cfi_def_cfa_offset 0
 2249 004c 7047     	 bx lr
 2250              	 .cfi_endproc
 2251              	.LFE222:
 2253 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2254              	 .align 2
 2255              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2256              	 .thumb
 2257              	 .thumb_func
 2259              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2260              	.LFB223:
 607:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 608:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 609:../Libraries/XMCLib/src/xmc_can.c **** {
 2261              	 .loc 2 609 0
 2262              	 .cfi_startproc
 2263              	 
 2264              	 
 2265              	 
 2266 0000 80B4     	 push {r7}
 2267              	.LCFI132:
 2268              	 .cfi_def_cfa_offset 4
 2269              	 .cfi_offset 7,-4
 2270 0002 83B0     	 sub sp,sp,#12
 2271              	.LCFI133:
 2272              	 .cfi_def_cfa_offset 16
 2273 0004 00AF     	 add r7,sp,#0
 2274              	.LCFI134:
 2275              	 .cfi_def_cfa_register 7
 2276 0006 7860     	 str r0,[r7,#4]
 2277 0008 3960     	 str r1,[r7]
 610:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2278              	 .loc 2 610 0
 2279 000a 7B68     	 ldr r3,[r7,#4]
 2280 000c 1B68     	 ldr r3,[r3]
 2281 000e 7A68     	 ldr r2,[r7,#4]
 2282 0010 1268     	 ldr r2,[r2]
 2283 0012 1268     	 ldr r2,[r2]
 2284 0014 22F00F02 	 bic r2,r2,#15
 2285 0018 42F00102 	 orr r2,r2,#1
 2286 001c 1A60     	 str r2,[r3]
 611:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 612:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2287              	 .loc 2 612 0
 2288 001e 7B68     	 ldr r3,[r7,#4]
 2289 0020 1B68     	 ldr r3,[r3]
 2290 0022 7A68     	 ldr r2,[r7,#4]
 2291 0024 1268     	 ldr r2,[r2]
 2292 0026 5268     	 ldr r2,[r2,#4]
 2293 0028 02F07F42 	 and r2,r2,#-16777216
 613:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 614:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 615:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2294              	 .loc 2 615 0
 2295 002c 3978     	 ldrb r1,[r7]
 614:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2296              	 .loc 2 614 0
 2297 002e 1143     	 orrs r1,r1,r2
 616:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2298              	 .loc 2 616 0
 2299 0030 BA78     	 ldrb r2,[r7,#2]
 2300 0032 1204     	 lsls r2,r2,#16
 2301 0034 02F47F02 	 and r2,r2,#16711680
 615:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2302              	 .loc 2 615 0
 2303 0038 1143     	 orrs r1,r1,r2
 617:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2304              	 .loc 2 617 0
 2305 003a 7A78     	 ldrb r2,[r7,#1]
 2306 003c 1202     	 lsls r2,r2,#8
 2307 003e 92B2     	 uxth r2,r2
 616:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2308              	 .loc 2 616 0
 2309 0040 0A43     	 orrs r2,r2,r1
 612:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2310              	 .loc 2 612 0
 2311 0042 5A60     	 str r2,[r3,#4]
 618:../Libraries/XMCLib/src/xmc_can.c **** }
 2312              	 .loc 2 618 0
 2313 0044 0C37     	 adds r7,r7,#12
 2314              	.LCFI135:
 2315              	 .cfi_def_cfa_offset 4
 2316 0046 BD46     	 mov sp,r7
 2317              	.LCFI136:
 2318              	 .cfi_def_cfa_register 13
 2319              	 
 2320 0048 5DF8047B 	 ldr r7,[sp],#4
 2321              	.LCFI137:
 2322              	 .cfi_restore 7
 2323              	 .cfi_def_cfa_offset 0
 2324 004c 7047     	 bx lr
 2325              	 .cfi_endproc
 2326              	.LFE223:
 2328 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2329              	 .align 2
 2330              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2331              	 .thumb
 2332              	 .thumb_func
 2334              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2335              	.LFB224:
 619:../Libraries/XMCLib/src/xmc_can.c **** 
 620:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 621:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 622:../Libraries/XMCLib/src/xmc_can.c **** {
 2336              	 .loc 2 622 0
 2337              	 .cfi_startproc
 2338              	 
 2339              	 
 2340              	 
 2341 0000 80B4     	 push {r7}
 2342              	.LCFI138:
 2343              	 .cfi_def_cfa_offset 4
 2344              	 .cfi_offset 7,-4
 2345 0002 83B0     	 sub sp,sp,#12
 2346              	.LCFI139:
 2347              	 .cfi_def_cfa_offset 16
 2348 0004 00AF     	 add r7,sp,#0
 2349              	.LCFI140:
 2350              	 .cfi_def_cfa_register 7
 2351 0006 7860     	 str r0,[r7,#4]
 2352 0008 3960     	 str r1,[r7]
 623:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2353              	 .loc 2 623 0
 2354 000a 7B68     	 ldr r3,[r7,#4]
 2355 000c 1B68     	 ldr r3,[r3]
 2356 000e 7A68     	 ldr r2,[r7,#4]
 2357 0010 1268     	 ldr r2,[r2]
 2358 0012 1268     	 ldr r2,[r2]
 2359 0014 22F00F02 	 bic r2,r2,#15
 2360 0018 42F00302 	 orr r2,r2,#3
 2361 001c 1A60     	 str r2,[r3]
 624:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 625:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2362              	 .loc 2 625 0
 2363 001e 7B68     	 ldr r3,[r7,#4]
 2364 0020 1B68     	 ldr r3,[r3]
 2365 0022 7A68     	 ldr r2,[r7,#4]
 2366 0024 1268     	 ldr r2,[r2]
 2367 0026 5268     	 ldr r2,[r2,#4]
 2368 0028 22F47F01 	 bic r1,r2,#16711680
 626:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2369              	 .loc 2 626 0
 2370 002c BA78     	 ldrb r2,[r7,#2]
 2371 002e 1204     	 lsls r2,r2,#16
 2372 0030 02F47F02 	 and r2,r2,#16711680
 625:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2373              	 .loc 2 625 0
 2374 0034 0A43     	 orrs r2,r2,r1
 2375 0036 5A60     	 str r2,[r3,#4]
 627:../Libraries/XMCLib/src/xmc_can.c **** 
 628:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 2376              	 .loc 2 628 0
 2377 0038 7B68     	 ldr r3,[r7,#4]
 2378 003a 1B68     	 ldr r3,[r3]
 2379 003c 034A     	 ldr r2,.L109
 2380 003e DA61     	 str r2,[r3,#28]
 629:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 630:../Libraries/XMCLib/src/xmc_can.c **** }
 2381              	 .loc 2 630 0
 2382 0040 0C37     	 adds r7,r7,#12
 2383              	.LCFI141:
 2384              	 .cfi_def_cfa_offset 4
 2385 0042 BD46     	 mov sp,r7
 2386              	.LCFI142:
 2387              	 .cfi_def_cfa_register 13
 2388              	 
 2389 0044 5DF8047B 	 ldr r7,[sp],#4
 2390              	.LCFI143:
 2391              	 .cfi_restore 7
 2392              	 .cfi_def_cfa_offset 0
 2393 0048 7047     	 bx lr
 2394              	.L110:
 2395 004a 00BF     	 .align 2
 2396              	.L109:
 2397 004c 00040002 	 .word 33555456
 2398              	 .cfi_endproc
 2399              	.LFE224:
 2401              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2402              	 .align 2
 2403              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2404              	 .thumb
 2405              	 .thumb_func
 2407              	XMC_CAN_GATEWAY_InitSourceObject:
 2408              	.LFB225:
 631:../Libraries/XMCLib/src/xmc_can.c **** 
 632:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 633:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 634:../Libraries/XMCLib/src/xmc_can.c **** {
 2409              	 .loc 2 634 0
 2410              	 .cfi_startproc
 2411              	 
 2412              	 
 2413              	 
 2414 0000 80B4     	 push {r7}
 2415              	.LCFI144:
 2416              	 .cfi_def_cfa_offset 4
 2417              	 .cfi_offset 7,-4
 2418 0002 85B0     	 sub sp,sp,#20
 2419              	.LCFI145:
 2420              	 .cfi_def_cfa_offset 24
 2421 0004 00AF     	 add r7,sp,#0
 2422              	.LCFI146:
 2423              	 .cfi_def_cfa_register 7
 2424 0006 F860     	 str r0,[r7,#12]
 2425 0008 3B1D     	 adds r3,r7,#4
 2426 000a 83E80600 	 stmia r3,{r1,r2}
 635:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2427              	 .loc 2 635 0
 2428 000e FB68     	 ldr r3,[r7,#12]
 2429 0010 1B68     	 ldr r3,[r3]
 636:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2430              	 .loc 2 636 0
 2431 0012 FA79     	 ldrb r2,[r7,#7]
 2432 0014 1202     	 lsls r2,r2,#8
 2433 0016 02F48071 	 and r1,r2,#256
 637:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2434              	 .loc 2 637 0
 2435 001a 7A7A     	 ldrb r2,[r7,#9]
 2436 001c 9202     	 lsls r2,r2,#10
 2437 001e 02F48062 	 and r2,r2,#1024
 636:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2438              	 .loc 2 636 0
 2439 0022 1143     	 orrs r1,r1,r2
 638:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2440              	 .loc 2 638 0
 2441 0024 3A7A     	 ldrb r2,[r7,#8]
 2442 0026 5202     	 lsls r2,r2,#9
 2443 0028 02F40072 	 and r2,r2,#512
 637:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2444              	 .loc 2 637 0
 2445 002c 1143     	 orrs r1,r1,r2
 639:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2446              	 .loc 2 639 0
 2447 002e BA7A     	 ldrb r2,[r7,#10]
 2448 0030 D202     	 lsls r2,r2,#11
 2449 0032 02F40062 	 and r2,r2,#2048
 638:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2450              	 .loc 2 638 0
 2451 0036 0A43     	 orrs r2,r2,r1
 2452 0038 42F00402 	 orr r2,r2,#4
 635:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2453              	 .loc 2 635 0
 2454 003c 1A60     	 str r2,[r3]
 640:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2455              	 .loc 2 640 0
 2456 003e FB68     	 ldr r3,[r7,#12]
 2457 0040 1B68     	 ldr r3,[r3]
 2458 0042 3A79     	 ldrb r2,[r7,#4]
 2459 0044 1146     	 mov r1,r2
 641:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2460              	 .loc 2 641 0
 2461 0046 BA79     	 ldrb r2,[r7,#6]
 2462 0048 1204     	 lsls r2,r2,#16
 2463 004a 02F47F02 	 and r2,r2,#16711680
 640:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2464              	 .loc 2 640 0
 2465 004e 1143     	 orrs r1,r1,r2
 642:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2466              	 .loc 2 642 0
 2467 0050 7A79     	 ldrb r2,[r7,#5]
 2468 0052 1202     	 lsls r2,r2,#8
 2469 0054 92B2     	 uxth r2,r2
 640:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2470              	 .loc 2 640 0
 2471 0056 0A43     	 orrs r2,r2,r1
 2472 0058 5A60     	 str r2,[r3,#4]
 643:../Libraries/XMCLib/src/xmc_can.c **** }
 2473              	 .loc 2 643 0
 2474 005a 1437     	 adds r7,r7,#20
 2475              	.LCFI147:
 2476              	 .cfi_def_cfa_offset 4
 2477 005c BD46     	 mov sp,r7
 2478              	.LCFI148:
 2479              	 .cfi_def_cfa_register 13
 2480              	 
 2481 005e 5DF8047B 	 ldr r7,[sp],#4
 2482              	.LCFI149:
 2483              	 .cfi_restore 7
 2484              	 .cfi_def_cfa_offset 0
 2485 0062 7047     	 bx lr
 2486              	 .cfi_endproc
 2487              	.LFE225:
 2489              	 .text
 2490              	.Letext0:
 2491              	 .file 3 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2492              	 .file 4 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2493              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2494              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc4_scu.h"
 2495              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Include/core_cm4.h"
 2496              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:19     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:23     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:84     .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:88     .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:129    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:133    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:174    .text.max:00000000 $t
    {standard input}:178    .text.max:00000000 max
    {standard input}:222    .text.min:00000000 $t
    {standard input}:226    .text.min:00000000 min
    {standard input}:269    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:274    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:577    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:582    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:587    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:639    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:644    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:681    .text.XMC_CAN_Disable:0000001c $d
    {standard input}:686    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:691    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:739    .text.XMC_CAN_Enable:00000030 $d
    {standard input}:744    .text.XMC_CAN_Init:00000000 $t
    {standard input}:749    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:888    .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:893    .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:973    .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:978    .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1039   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1044   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1112   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1117   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1203   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1208   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1396   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1386   .text.XMC_CAN_MO_Config:0000010c $d
    {standard input}:1391   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1487   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:1492   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1497   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:1579   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:1584   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:1702   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:1707   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:1949   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:1954   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:1959   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2016   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2021   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2080   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2085   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2179   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2184   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2254   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2259   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2329   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2334   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2397   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:2402   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2407   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
