   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_usic.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
  19              	 .align 2
  20              	 .global XMC_USIC_CH_Enable
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_Enable:
  25              	.LFB197:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****   *************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API  <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *
  51:../Libraries/XMCLib/src/xmc_usic.c ****  */
  52:../Libraries/XMCLib/src/xmc_usic.c **** 
  53:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  54:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  55:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  56:../Libraries/XMCLib/src/xmc_usic.c **** 
  57:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  58:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  59:../Libraries/XMCLib/src/xmc_usic.c **** 
  60:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_usic.c **** 
  64:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  65:../Libraries/XMCLib/src/xmc_usic.c **** 
  66:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  69:../Libraries/XMCLib/src/xmc_usic.c **** 
  70:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  71:../Libraries/XMCLib/src/xmc_usic.c **** {
  27              	 .loc 1 71 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 80B5     	 push {r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 82B0     	 sub sp,sp,#8
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  72:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_CHECK_CH(channel));
  73:../Libraries/XMCLib/src/xmc_usic.c ****   
  74:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
  43              	 .loc 1 74 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1A4A     	 ldr r2,.L9
  46 000c 9342     	 cmp r3,r2
  47 000e 03D0     	 beq .L2
  48              	 .loc 1 74 0 is_stmt 0 discriminator 1
  49 0010 7B68     	 ldr r3,[r7,#4]
  50 0012 194A     	 ldr r2,.L9+4
  51 0014 9342     	 cmp r3,r2
  52 0016 03D1     	 bne .L3
  53              	.L2:
  75:../Libraries/XMCLib/src/xmc_usic.c ****   {
  76:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
  54              	 .loc 1 76 0 is_stmt 1
  55 0018 1848     	 ldr r0,.L9+8
  56 001a FFF7FEFF 	 bl XMC_USIC_Enable
  57 001e 16E0     	 b .L4
  58              	.L3:
  77:../Libraries/XMCLib/src/xmc_usic.c ****   }
  78:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
  79:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
  59              	 .loc 1 79 0
  60 0020 7B68     	 ldr r3,[r7,#4]
  61 0022 174A     	 ldr r2,.L9+12
  62 0024 9342     	 cmp r3,r2
  63 0026 03D0     	 beq .L5
  64              	 .loc 1 79 0 is_stmt 0 discriminator 1
  65 0028 7B68     	 ldr r3,[r7,#4]
  66 002a 164A     	 ldr r2,.L9+16
  67 002c 9342     	 cmp r3,r2
  68 002e 03D1     	 bne .L6
  69              	.L5:
  80:../Libraries/XMCLib/src/xmc_usic.c ****   {
  81:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
  70              	 .loc 1 81 0 is_stmt 1
  71 0030 1548     	 ldr r0,.L9+20
  72 0032 FFF7FEFF 	 bl XMC_USIC_Enable
  73 0036 0AE0     	 b .L4
  74              	.L6:
  82:../Libraries/XMCLib/src/xmc_usic.c ****   }
  83:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  84:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
  85:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
  75              	 .loc 1 85 0
  76 0038 7B68     	 ldr r3,[r7,#4]
  77 003a 144A     	 ldr r2,.L9+24
  78 003c 9342     	 cmp r3,r2
  79 003e 03D0     	 beq .L7
  80              	 .loc 1 85 0 is_stmt 0 discriminator 1
  81 0040 7B68     	 ldr r3,[r7,#4]
  82 0042 134A     	 ldr r2,.L9+28
  83 0044 9342     	 cmp r3,r2
  84 0046 02D1     	 bne .L4
  85              	.L7:
  86:../Libraries/XMCLib/src/xmc_usic.c ****   {
  87:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
  86              	 .loc 1 87 0 is_stmt 1
  87 0048 1248     	 ldr r0,.L9+32
  88 004a FFF7FEFF 	 bl XMC_USIC_Enable
  89              	.L4:
  88:../Libraries/XMCLib/src/xmc_usic.c ****   }
  89:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  90:../Libraries/XMCLib/src/xmc_usic.c ****   else
  91:../Libraries/XMCLib/src/xmc_usic.c ****   {
  92:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
  93:../Libraries/XMCLib/src/xmc_usic.c ****   }
  94:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
  95:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
  90              	 .loc 1 95 0
  91 004e 7B68     	 ldr r3,[r7,#4]
  92 0050 0322     	 movs r2,#3
  93 0052 DA60     	 str r2,[r3,#12]
  96:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
  94              	 .loc 1 96 0
  95 0054 00BF     	 nop
  96              	.L8:
  97              	 .loc 1 96 0 is_stmt 0 discriminator 1
  98 0056 7B68     	 ldr r3,[r7,#4]
  99 0058 DB68     	 ldr r3,[r3,#12]
 100 005a 03F00103 	 and r3,r3,#1
 101 005e 002B     	 cmp r3,#0
 102 0060 F9D0     	 beq .L8
  97:../Libraries/XMCLib/src/xmc_usic.c ****   {
  98:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
  99:../Libraries/XMCLib/src/xmc_usic.c ****   }
 100:../Libraries/XMCLib/src/xmc_usic.c **** 
 101:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 102:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 103              	 .loc 1 102 0 is_stmt 1
 104 0062 7B68     	 ldr r3,[r7,#4]
 105 0064 1B6C     	 ldr r3,[r3,#64]
 106 0066 23F00F02 	 bic r2,r3,#15
 107 006a 7B68     	 ldr r3,[r7,#4]
 108 006c 1A64     	 str r2,[r3,#64]
 103:../Libraries/XMCLib/src/xmc_usic.c **** }
 109              	 .loc 1 103 0
 110 006e 0837     	 adds r7,r7,#8
 111              	.LCFI3:
 112              	 .cfi_def_cfa_offset 8
 113 0070 BD46     	 mov sp,r7
 114              	.LCFI4:
 115              	 .cfi_def_cfa_register 13
 116              	 
 117 0072 80BD     	 pop {r7,pc}
 118              	.L10:
 119              	 .align 2
 120              	.L9:
 121 0074 00000340 	 .word 1073938432
 122 0078 00020340 	 .word 1073938944
 123 007c 08000340 	 .word 1073938440
 124 0080 00000248 	 .word 1208090624
 125 0084 00020248 	 .word 1208091136
 126 0088 08000248 	 .word 1208090632
 127 008c 00400248 	 .word 1208107008
 128 0090 00420248 	 .word 1208107520
 129 0094 08400248 	 .word 1208107016
 130              	 .cfi_endproc
 131              	.LFE197:
 133              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 134              	 .align 2
 135              	 .global XMC_USIC_CH_Disable
 136              	 .thumb
 137              	 .thumb_func
 139              	XMC_USIC_CH_Disable:
 140              	.LFB198:
 104:../Libraries/XMCLib/src/xmc_usic.c **** 
 105:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 106:../Libraries/XMCLib/src/xmc_usic.c **** {
 141              	 .loc 1 106 0
 142              	 .cfi_startproc
 143              	 
 144              	 
 145              	 
 146 0000 80B4     	 push {r7}
 147              	.LCFI5:
 148              	 .cfi_def_cfa_offset 4
 149              	 .cfi_offset 7,-4
 150 0002 83B0     	 sub sp,sp,#12
 151              	.LCFI6:
 152              	 .cfi_def_cfa_offset 16
 153 0004 00AF     	 add r7,sp,#0
 154              	.LCFI7:
 155              	 .cfi_def_cfa_register 7
 156 0006 7860     	 str r0,[r7,#4]
 107:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 157              	 .loc 1 107 0
 158 0008 7B68     	 ldr r3,[r7,#4]
 159 000a DB68     	 ldr r3,[r3,#12]
 160 000c 23F00303 	 bic r3,r3,#3
 161 0010 43F00202 	 orr r2,r3,#2
 162 0014 7B68     	 ldr r3,[r7,#4]
 163 0016 DA60     	 str r2,[r3,#12]
 108:../Libraries/XMCLib/src/xmc_usic.c **** }
 164              	 .loc 1 108 0
 165 0018 0C37     	 adds r7,r7,#12
 166              	.LCFI8:
 167              	 .cfi_def_cfa_offset 4
 168 001a BD46     	 mov sp,r7
 169              	.LCFI9:
 170              	 .cfi_def_cfa_register 13
 171              	 
 172 001c 5DF8047B 	 ldr r7,[sp],#4
 173              	.LCFI10:
 174              	 .cfi_restore 7
 175              	 .cfi_def_cfa_offset 0
 176 0020 7047     	 bx lr
 177              	 .cfi_endproc
 178              	.LFE198:
 180 0022 00BF     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 181              	 .align 2
 182              	 .global XMC_USIC_CH_SetBaudrate
 183              	 .thumb
 184              	 .thumb_func
 186              	XMC_USIC_CH_SetBaudrate:
 187              	.LFB199:
 109:../Libraries/XMCLib/src/xmc_usic.c **** 
 110:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 111:../Libraries/XMCLib/src/xmc_usic.c **** {
 188              	 .loc 1 111 0
 189              	 .cfi_startproc
 190              	 
 191              	 
 192 0000 80B5     	 push {r7,lr}
 193              	.LCFI11:
 194              	 .cfi_def_cfa_offset 8
 195              	 .cfi_offset 7,-8
 196              	 .cfi_offset 14,-4
 197 0002 8EB0     	 sub sp,sp,#56
 198              	.LCFI12:
 199              	 .cfi_def_cfa_offset 64
 200 0004 00AF     	 add r7,sp,#0
 201              	.LCFI13:
 202              	 .cfi_def_cfa_register 7
 203 0006 F860     	 str r0,[r7,#12]
 204 0008 B960     	 str r1,[r7,#8]
 205 000a 7A60     	 str r2,[r7,#4]
 112:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 113:../Libraries/XMCLib/src/xmc_usic.c ****   
 114:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 115:../Libraries/XMCLib/src/xmc_usic.c ****   
 116:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 117:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 118:../Libraries/XMCLib/src/xmc_usic.c **** 
 119:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 120:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 121:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 122:../Libraries/XMCLib/src/xmc_usic.c ****   
 123:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 124:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 125:../Libraries/XMCLib/src/xmc_usic.c **** 
 126:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 127:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 206              	 .loc 1 127 0
 207 000c BB68     	 ldr r3,[r7,#8]
 208 000e 632B     	 cmp r3,#99
 209 0010 58D9     	 bls .L13
 210              	 .loc 1 127 0 is_stmt 0 discriminator 1
 211 0012 7B68     	 ldr r3,[r7,#4]
 212 0014 002B     	 cmp r3,#0
 213 0016 55D0     	 beq .L13
 128:../Libraries/XMCLib/src/xmc_usic.c ****   {
 129:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 214              	 .loc 1 129 0 is_stmt 1
 215 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 216 001c 0246     	 mov r2,r0
 217 001e 2E4B     	 ldr r3,.L19
 218 0020 A3FB0223 	 umull r2,r3,r3,r2
 219 0024 5B09     	 lsrs r3,r3,#5
 220 0026 3B62     	 str r3,[r7,#32]
 130:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 221              	 .loc 1 130 0
 222 0028 BB68     	 ldr r3,[r7,#8]
 223 002a 2B4A     	 ldr r2,.L19
 224 002c A2FB0323 	 umull r2,r3,r2,r3
 225 0030 5B09     	 lsrs r3,r3,#5
 226 0032 BB60     	 str r3,[r7,#8]
 131:../Libraries/XMCLib/src/xmc_usic.c **** 
 132:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 227              	 .loc 1 132 0
 228 0034 0123     	 movs r3,#1
 229 0036 FB62     	 str r3,[r7,#44]
 133:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 230              	 .loc 1 133 0
 231 0038 0123     	 movs r3,#1
 232 003a BB62     	 str r3,[r7,#40]
 134:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 233              	 .loc 1 134 0
 234 003c 40F2FF33 	 movw r3,#1023
 235 0040 7B62     	 str r3,[r7,#36]
 135:../Libraries/XMCLib/src/xmc_usic.c **** 
 136:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 236              	 .loc 1 136 0
 237 0042 40F2FF33 	 movw r3,#1023
 238 0046 3B63     	 str r3,[r7,#48]
 239 0048 22E0     	 b .L14
 240              	.L16:
 137:../Libraries/XMCLib/src/xmc_usic.c ****     {
 138:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 241              	 .loc 1 138 0
 242 004a 3B6A     	 ldr r3,[r7,#32]
 243 004c 3A6B     	 ldr r2,[r7,#48]
 244 004e 02FB03F2 	 mul r2,r2,r3
 245 0052 BB68     	 ldr r3,[r7,#8]
 246 0054 7968     	 ldr r1,[r7,#4]
 247 0056 01FB03F3 	 mul r3,r1,r3
 248 005a B2FBF3F3 	 udiv r3,r2,r3
 249 005e FB61     	 str r3,[r7,#28]
 139:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 250              	 .loc 1 139 0
 251 0060 FB69     	 ldr r3,[r7,#28]
 252 0062 9B0A     	 lsrs r3,r3,#10
 253 0064 BB61     	 str r3,[r7,#24]
 140:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 254              	 .loc 1 140 0
 255 0066 FB69     	 ldr r3,[r7,#28]
 256 0068 C3F30903 	 ubfx r3,r3,#0,#10
 257 006c 7B61     	 str r3,[r7,#20]
 141:../Libraries/XMCLib/src/xmc_usic.c **** 
 142:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 258              	 .loc 1 142 0
 259 006e BB69     	 ldr r3,[r7,#24]
 260 0070 B3F5806F 	 cmp r3,#1024
 261 0074 09D2     	 bcs .L15
 262              	 .loc 1 142 0 is_stmt 0 discriminator 1
 263 0076 7A69     	 ldr r2,[r7,#20]
 264 0078 7B6A     	 ldr r3,[r7,#36]
 265 007a 9A42     	 cmp r2,r3
 266 007c 05D2     	 bcs .L15
 143:../Libraries/XMCLib/src/xmc_usic.c ****       {
 144:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 267              	 .loc 1 144 0 is_stmt 1
 268 007e 7B69     	 ldr r3,[r7,#20]
 269 0080 7B62     	 str r3,[r7,#36]
 145:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 270              	 .loc 1 145 0
 271 0082 BB69     	 ldr r3,[r7,#24]
 272 0084 BB62     	 str r3,[r7,#40]
 146:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 273              	 .loc 1 146 0
 274 0086 3B6B     	 ldr r3,[r7,#48]
 275 0088 FB62     	 str r3,[r7,#44]
 276              	.L15:
 136:../Libraries/XMCLib/src/xmc_usic.c ****     {
 277              	 .loc 1 136 0 discriminator 2
 278 008a 3B6B     	 ldr r3,[r7,#48]
 279 008c 013B     	 subs r3,r3,#1
 280 008e 3B63     	 str r3,[r7,#48]
 281              	.L14:
 136:../Libraries/XMCLib/src/xmc_usic.c ****     {
 282              	 .loc 1 136 0 is_stmt 0 discriminator 1
 283 0090 3B6B     	 ldr r3,[r7,#48]
 284 0092 002B     	 cmp r3,#0
 285 0094 D9D1     	 bne .L16
 147:../Libraries/XMCLib/src/xmc_usic.c ****       }
 148:../Libraries/XMCLib/src/xmc_usic.c ****     }
 149:../Libraries/XMCLib/src/xmc_usic.c **** 
 150:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 286              	 .loc 1 150 0 is_stmt 1
 287 0096 FB6A     	 ldr r3,[r7,#44]
 288 0098 43F40042 	 orr r2,r3,#32768
 289 009c FB68     	 ldr r3,[r7,#12]
 290 009e 1A61     	 str r2,[r3,#16]
 151:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 152:../Libraries/XMCLib/src/xmc_usic.c **** 
 153:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 291              	 .loc 1 153 0
 292 00a0 FB68     	 ldr r3,[r7,#12]
 293 00a2 5A69     	 ldr r2,[r3,#20]
 294 00a4 0D4B     	 ldr r3,.L19+4
 295 00a6 1340     	 ands r3,r3,r2
 154:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 155:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 156:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 157:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 296              	 .loc 1 157 0
 297 00a8 7A68     	 ldr r2,[r7,#4]
 298 00aa 013A     	 subs r2,r2,#1
 299 00ac 9202     	 lsls r2,r2,#10
 156:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 300              	 .loc 1 156 0
 301 00ae 1A43     	 orrs r2,r2,r3
 158:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 302              	 .loc 1 158 0
 303 00b0 BB6A     	 ldr r3,[r7,#40]
 304 00b2 013B     	 subs r3,r3,#1
 305 00b4 1B04     	 lsls r3,r3,#16
 157:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 306              	 .loc 1 157 0
 307 00b6 1A43     	 orrs r2,r2,r3
 153:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 308              	 .loc 1 153 0
 309 00b8 FB68     	 ldr r3,[r7,#12]
 310 00ba 5A61     	 str r2,[r3,#20]
 159:../Libraries/XMCLib/src/xmc_usic.c ****                     
 160:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 311              	 .loc 1 160 0
 312 00bc 0023     	 movs r3,#0
 313 00be 87F83730 	 strb r3,[r7,#55]
 314 00c2 02E0     	 b .L17
 315              	.L13:
 161:../Libraries/XMCLib/src/xmc_usic.c ****   }
 162:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 163:../Libraries/XMCLib/src/xmc_usic.c ****   {
 164:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 316              	 .loc 1 164 0
 317 00c4 0123     	 movs r3,#1
 318 00c6 87F83730 	 strb r3,[r7,#55]
 319              	.L17:
 165:../Libraries/XMCLib/src/xmc_usic.c ****   }
 166:../Libraries/XMCLib/src/xmc_usic.c ****   
 167:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 320              	 .loc 1 167 0
 321 00ca 97F83730 	 ldrb r3,[r7,#55]
 168:../Libraries/XMCLib/src/xmc_usic.c **** }
 322              	 .loc 1 168 0
 323 00ce 1846     	 mov r0,r3
 324 00d0 3837     	 adds r7,r7,#56
 325              	.LCFI14:
 326              	 .cfi_def_cfa_offset 8
 327 00d2 BD46     	 mov sp,r7
 328              	.LCFI15:
 329              	 .cfi_def_cfa_register 13
 330              	 
 331 00d4 80BD     	 pop {r7,pc}
 332              	.L20:
 333 00d6 00BF     	 .align 2
 334              	.L19:
 335 00d8 1F85EB51 	 .word 1374389535
 336 00dc EF8000FC 	 .word -67075857
 337              	 .cfi_endproc
 338              	.LFE199:
 340              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 341              	 .align 2
 342              	 .global XMC_USIC_CH_TXFIFO_Configure
 343              	 .thumb
 344              	 .thumb_func
 346              	XMC_USIC_CH_TXFIFO_Configure:
 347              	.LFB200:
 169:../Libraries/XMCLib/src/xmc_usic.c **** 
 170:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 171:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 172:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 173:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 174:../Libraries/XMCLib/src/xmc_usic.c **** {
 348              	 .loc 1 174 0
 349              	 .cfi_startproc
 350              	 
 351              	 
 352              	 
 353 0000 80B4     	 push {r7}
 354              	.LCFI16:
 355              	 .cfi_def_cfa_offset 4
 356              	 .cfi_offset 7,-4
 357 0002 85B0     	 sub sp,sp,#20
 358              	.LCFI17:
 359              	 .cfi_def_cfa_offset 24
 360 0004 00AF     	 add r7,sp,#0
 361              	.LCFI18:
 362              	 .cfi_def_cfa_register 7
 363 0006 F860     	 str r0,[r7,#12]
 364 0008 B960     	 str r1,[r7,#8]
 365 000a 3B60     	 str r3,[r7]
 366 000c 1346     	 mov r3,r2
 367 000e FB71     	 strb r3,[r7,#7]
 175:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 176:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 368              	 .loc 1 176 0
 369 0010 FB68     	 ldr r3,[r7,#12]
 370 0012 D3F80831 	 ldr r3,[r3,#264]
 371 0016 23F0E062 	 bic r2,r3,#117440512
 372 001a FB68     	 ldr r3,[r7,#12]
 373 001c C3F80821 	 str r2,[r3,#264]
 177:../Libraries/XMCLib/src/xmc_usic.c **** 
 178:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 179:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 180:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 181:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 182:../Libraries/XMCLib/src/xmc_usic.c ****    */
 183:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 374              	 .loc 1 183 0
 375 0020 FB68     	 ldr r3,[r7,#12]
 376 0022 D3F80821 	 ldr r2,[r3,#264]
 377 0026 094B     	 ldr r3,.L22
 378 0028 1340     	 ands r3,r3,r2
 184:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 185:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 186:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 379              	 .loc 1 186 0
 380 002a 3A68     	 ldr r2,[r7]
 381 002c 1102     	 lsls r1,r2,#8
 382 002e BA68     	 ldr r2,[r7,#8]
 383 0030 1143     	 orrs r1,r1,r2
 187:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 188:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 384              	 .loc 1 188 0
 385 0032 FA79     	 ldrb r2,[r7,#7]
 386 0034 1206     	 lsls r2,r2,#24
 186:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 387              	 .loc 1 186 0
 388 0036 0A43     	 orrs r2,r2,r1
 185:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 389              	 .loc 1 185 0
 390 0038 1A43     	 orrs r2,r2,r3
 183:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 391              	 .loc 1 183 0
 392 003a FB68     	 ldr r3,[r7,#12]
 393 003c C3F80821 	 str r2,[r3,#264]
 189:../Libraries/XMCLib/src/xmc_usic.c **** }
 394              	 .loc 1 189 0
 395 0040 1437     	 adds r7,r7,#20
 396              	.LCFI19:
 397              	 .cfi_def_cfa_offset 4
 398 0042 BD46     	 mov sp,r7
 399              	.LCFI20:
 400              	 .cfi_def_cfa_register 13
 401              	 
 402 0044 5DF8047B 	 ldr r7,[sp],#4
 403              	.LCFI21:
 404              	 .cfi_restore 7
 405              	 .cfi_def_cfa_offset 0
 406 0048 7047     	 bx lr
 407              	.L23:
 408 004a 00BF     	 .align 2
 409              	.L22:
 410 004c C0C0FFF8 	 .word -117456704
 411              	 .cfi_endproc
 412              	.LFE200:
 414              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 415              	 .align 2
 416              	 .global XMC_USIC_CH_RXFIFO_Configure
 417              	 .thumb
 418              	 .thumb_func
 420              	XMC_USIC_CH_RXFIFO_Configure:
 421              	.LFB201:
 190:../Libraries/XMCLib/src/xmc_usic.c **** 
 191:../Libraries/XMCLib/src/xmc_usic.c **** 
 192:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 193:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 194:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 195:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 196:../Libraries/XMCLib/src/xmc_usic.c **** {
 422              	 .loc 1 196 0
 423              	 .cfi_startproc
 424              	 
 425              	 
 426              	 
 427 0000 80B4     	 push {r7}
 428              	.LCFI22:
 429              	 .cfi_def_cfa_offset 4
 430              	 .cfi_offset 7,-4
 431 0002 85B0     	 sub sp,sp,#20
 432              	.LCFI23:
 433              	 .cfi_def_cfa_offset 24
 434 0004 00AF     	 add r7,sp,#0
 435              	.LCFI24:
 436              	 .cfi_def_cfa_register 7
 437 0006 F860     	 str r0,[r7,#12]
 438 0008 B960     	 str r1,[r7,#8]
 439 000a 3B60     	 str r3,[r7]
 440 000c 1346     	 mov r3,r2
 441 000e FB71     	 strb r3,[r7,#7]
 197:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 198:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 442              	 .loc 1 198 0
 443 0010 FB68     	 ldr r3,[r7,#12]
 444 0012 D3F80C31 	 ldr r3,[r3,#268]
 445 0016 23F0E062 	 bic r2,r3,#117440512
 446 001a FB68     	 ldr r3,[r7,#12]
 447 001c C3F80C21 	 str r2,[r3,#268]
 199:../Libraries/XMCLib/src/xmc_usic.c **** 
 200:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 201:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 202:../Libraries/XMCLib/src/xmc_usic.c ****    */
 203:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 448              	 .loc 1 203 0
 449 0020 FB68     	 ldr r3,[r7,#12]
 450 0022 D3F80C21 	 ldr r2,[r3,#268]
 451 0026 0A4B     	 ldr r3,.L25
 452 0028 1340     	 ands r3,r3,r2
 204:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 205:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 206:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 453              	 .loc 1 206 0
 454 002a 3A68     	 ldr r2,[r7]
 455 002c 1102     	 lsls r1,r2,#8
 456 002e BA68     	 ldr r2,[r7,#8]
 457 0030 1143     	 orrs r1,r1,r2
 207:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 208:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 458              	 .loc 1 208 0
 459 0032 FA79     	 ldrb r2,[r7,#7]
 460 0034 1206     	 lsls r2,r2,#24
 207:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 461              	 .loc 1 207 0
 462 0036 0A43     	 orrs r2,r2,r1
 203:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 463              	 .loc 1 203 0
 464 0038 1343     	 orrs r3,r3,r2
 465 003a 43F08052 	 orr r2,r3,#268435456
 466 003e FB68     	 ldr r3,[r7,#12]
 467 0040 C3F80C21 	 str r2,[r3,#268]
 209:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 210:../Libraries/XMCLib/src/xmc_usic.c **** }
 468              	 .loc 1 210 0
 469 0044 1437     	 adds r7,r7,#20
 470              	.LCFI25:
 471              	 .cfi_def_cfa_offset 4
 472 0046 BD46     	 mov sp,r7
 473              	.LCFI26:
 474              	 .cfi_def_cfa_register 13
 475              	 
 476 0048 5DF8047B 	 ldr r7,[sp],#4
 477              	.LCFI27:
 478              	 .cfi_restore 7
 479              	 .cfi_def_cfa_offset 0
 480 004c 7047     	 bx lr
 481              	.L26:
 482 004e 00BF     	 .align 2
 483              	.L25:
 484 0050 C0C0FFEF 	 .word -268451648
 485              	 .cfi_endproc
 486              	.LFE201:
 488              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 489              	 .align 2
 490              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 491              	 .thumb
 492              	 .thumb_func
 494              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 495              	.LFB202:
 211:../Libraries/XMCLib/src/xmc_usic.c **** 
 212:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 213:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 214:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 215:../Libraries/XMCLib/src/xmc_usic.c **** {
 496              	 .loc 1 215 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500              	 
 501 0000 80B4     	 push {r7}
 502              	.LCFI28:
 503              	 .cfi_def_cfa_offset 4
 504              	 .cfi_offset 7,-4
 505 0002 85B0     	 sub sp,sp,#20
 506              	.LCFI29:
 507              	 .cfi_def_cfa_offset 24
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI30:
 510              	 .cfi_def_cfa_register 7
 511 0006 F860     	 str r0,[r7,#12]
 512 0008 0B46     	 mov r3,r1
 513 000a 7A60     	 str r2,[r7,#4]
 514 000c FB72     	 strb r3,[r7,#11]
 216:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 217:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 515              	 .loc 1 217 0
 516 000e FB68     	 ldr r3,[r7,#12]
 517 0010 D3F80831 	 ldr r3,[r3,#264]
 518 0014 23F0E062 	 bic r2,r3,#117440512
 519 0018 FB68     	 ldr r3,[r7,#12]
 520 001a C3F80821 	 str r2,[r3,#264]
 218:../Libraries/XMCLib/src/xmc_usic.c **** 
 219:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 220:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 221:../Libraries/XMCLib/src/xmc_usic.c ****    */
 222:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 521              	 .loc 1 222 0
 522 001e FB68     	 ldr r3,[r7,#12]
 523 0020 D3F80831 	 ldr r3,[r3,#264]
 524 0024 23F47C52 	 bic r2,r3,#16128
 223:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 525              	 .loc 1 223 0
 526 0028 7B68     	 ldr r3,[r7,#4]
 527 002a 1B02     	 lsls r3,r3,#8
 222:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 528              	 .loc 1 222 0
 529 002c 1A43     	 orrs r2,r2,r3
 224:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 530              	 .loc 1 224 0
 531 002e FB7A     	 ldrb r3,[r7,#11]
 532 0030 1B06     	 lsls r3,r3,#24
 222:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 533              	 .loc 1 222 0
 534 0032 1A43     	 orrs r2,r2,r3
 535 0034 FB68     	 ldr r3,[r7,#12]
 536 0036 C3F80821 	 str r2,[r3,#264]
 225:../Libraries/XMCLib/src/xmc_usic.c **** }
 537              	 .loc 1 225 0
 538 003a 1437     	 adds r7,r7,#20
 539              	.LCFI31:
 540              	 .cfi_def_cfa_offset 4
 541 003c BD46     	 mov sp,r7
 542              	.LCFI32:
 543              	 .cfi_def_cfa_register 13
 544              	 
 545 003e 5DF8047B 	 ldr r7,[sp],#4
 546              	.LCFI33:
 547              	 .cfi_restore 7
 548              	 .cfi_def_cfa_offset 0
 549 0042 7047     	 bx lr
 550              	 .cfi_endproc
 551              	.LFE202:
 553              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 554              	 .align 2
 555              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 556              	 .thumb
 557              	 .thumb_func
 559              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 560              	.LFB203:
 226:../Libraries/XMCLib/src/xmc_usic.c **** 
 227:../Libraries/XMCLib/src/xmc_usic.c **** 
 228:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 229:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 230:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 231:../Libraries/XMCLib/src/xmc_usic.c **** {
 561              	 .loc 1 231 0
 562              	 .cfi_startproc
 563              	 
 564              	 
 565              	 
 566 0000 80B4     	 push {r7}
 567              	.LCFI34:
 568              	 .cfi_def_cfa_offset 4
 569              	 .cfi_offset 7,-4
 570 0002 85B0     	 sub sp,sp,#20
 571              	.LCFI35:
 572              	 .cfi_def_cfa_offset 24
 573 0004 00AF     	 add r7,sp,#0
 574              	.LCFI36:
 575              	 .cfi_def_cfa_register 7
 576 0006 F860     	 str r0,[r7,#12]
 577 0008 0B46     	 mov r3,r1
 578 000a 7A60     	 str r2,[r7,#4]
 579 000c FB72     	 strb r3,[r7,#11]
 232:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 233:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 580              	 .loc 1 233 0
 581 000e FB68     	 ldr r3,[r7,#12]
 582 0010 D3F80C31 	 ldr r3,[r3,#268]
 583 0014 23F0E062 	 bic r2,r3,#117440512
 584 0018 FB68     	 ldr r3,[r7,#12]
 585 001a C3F80C21 	 str r2,[r3,#268]
 234:../Libraries/XMCLib/src/xmc_usic.c **** 
 235:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 586              	 .loc 1 235 0
 587 001e FB68     	 ldr r3,[r7,#12]
 588 0020 D3F80C31 	 ldr r3,[r3,#268]
 589 0024 23F47C52 	 bic r2,r3,#16128
 236:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 590              	 .loc 1 236 0
 591 0028 7B68     	 ldr r3,[r7,#4]
 592 002a 1B02     	 lsls r3,r3,#8
 235:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 593              	 .loc 1 235 0
 594 002c 1A43     	 orrs r2,r2,r3
 237:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 595              	 .loc 1 237 0
 596 002e FB7A     	 ldrb r3,[r7,#11]
 597 0030 1B06     	 lsls r3,r3,#24
 235:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 598              	 .loc 1 235 0
 599 0032 1A43     	 orrs r2,r2,r3
 600 0034 FB68     	 ldr r3,[r7,#12]
 601 0036 C3F80C21 	 str r2,[r3,#268]
 238:../Libraries/XMCLib/src/xmc_usic.c **** }
 602              	 .loc 1 238 0
 603 003a 1437     	 adds r7,r7,#20
 604              	.LCFI37:
 605              	 .cfi_def_cfa_offset 4
 606 003c BD46     	 mov sp,r7
 607              	.LCFI38:
 608              	 .cfi_def_cfa_register 13
 609              	 
 610 003e 5DF8047B 	 ldr r7,[sp],#4
 611              	.LCFI39:
 612              	 .cfi_restore 7
 613              	 .cfi_def_cfa_offset 0
 614 0042 7047     	 bx lr
 615              	 .cfi_endproc
 616              	.LFE203:
 618              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 619              	 .align 2
 620              	 .global XMC_USIC_CH_SetInterruptNodePointer
 621              	 .thumb
 622              	 .thumb_func
 624              	XMC_USIC_CH_SetInterruptNodePointer:
 625              	.LFB204:
 239:../Libraries/XMCLib/src/xmc_usic.c **** 
 240:../Libraries/XMCLib/src/xmc_usic.c **** 
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 243:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 244:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 245:../Libraries/XMCLib/src/xmc_usic.c **** {
 626              	 .loc 1 245 0
 627              	 .cfi_startproc
 628              	 
 629              	 
 630              	 
 631 0000 80B4     	 push {r7}
 632              	.LCFI40:
 633              	 .cfi_def_cfa_offset 4
 634              	 .cfi_offset 7,-4
 635 0002 85B0     	 sub sp,sp,#20
 636              	.LCFI41:
 637              	 .cfi_def_cfa_offset 24
 638 0004 00AF     	 add r7,sp,#0
 639              	.LCFI42:
 640              	 .cfi_def_cfa_register 7
 641 0006 F860     	 str r0,[r7,#12]
 642 0008 0B46     	 mov r3,r1
 643 000a 7A60     	 str r2,[r7,#4]
 644 000c FB72     	 strb r3,[r7,#11]
 246:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 645              	 .loc 1 246 0
 646 000e FB68     	 ldr r3,[r7,#12]
 647 0010 9A69     	 ldr r2,[r3,#24]
 648 0012 FB7A     	 ldrb r3,[r7,#11]
 649 0014 0721     	 movs r1,#7
 650 0016 01FA03F3 	 lsl r3,r1,r3
 651 001a DB43     	 mvns r3,r3
 652 001c 1A40     	 ands r2,r2,r3
 247:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 653              	 .loc 1 247 0
 654 001e FB7A     	 ldrb r3,[r7,#11]
 655 0020 7968     	 ldr r1,[r7,#4]
 656 0022 01FA03F3 	 lsl r3,r1,r3
 246:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 657              	 .loc 1 246 0
 658 0026 1A43     	 orrs r2,r2,r3
 659 0028 FB68     	 ldr r3,[r7,#12]
 660 002a 9A61     	 str r2,[r3,#24]
 248:../Libraries/XMCLib/src/xmc_usic.c **** }
 661              	 .loc 1 248 0
 662 002c 1437     	 adds r7,r7,#20
 663              	.LCFI43:
 664              	 .cfi_def_cfa_offset 4
 665 002e BD46     	 mov sp,r7
 666              	.LCFI44:
 667              	 .cfi_def_cfa_register 13
 668              	 
 669 0030 5DF8047B 	 ldr r7,[sp],#4
 670              	.LCFI45:
 671              	 .cfi_restore 7
 672              	 .cfi_def_cfa_offset 0
 673 0034 7047     	 bx lr
 674              	 .cfi_endproc
 675              	.LFE204:
 677 0036 00BF     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 678              	 .align 2
 679              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 680              	 .thumb
 681              	 .thumb_func
 683              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 684              	.LFB205:
 249:../Libraries/XMCLib/src/xmc_usic.c **** 
 250:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 251:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 252:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 253:../Libraries/XMCLib/src/xmc_usic.c **** {
 685              	 .loc 1 253 0
 686              	 .cfi_startproc
 687              	 
 688              	 
 689              	 
 690 0000 80B4     	 push {r7}
 691              	.LCFI46:
 692              	 .cfi_def_cfa_offset 4
 693              	 .cfi_offset 7,-4
 694 0002 85B0     	 sub sp,sp,#20
 695              	.LCFI47:
 696              	 .cfi_def_cfa_offset 24
 697 0004 00AF     	 add r7,sp,#0
 698              	.LCFI48:
 699              	 .cfi_def_cfa_register 7
 700 0006 F860     	 str r0,[r7,#12]
 701 0008 0B46     	 mov r3,r1
 702 000a 7A60     	 str r2,[r7,#4]
 703 000c FB72     	 strb r3,[r7,#11]
 254:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 704              	 .loc 1 254 0
 705 000e FB68     	 ldr r3,[r7,#12]
 706 0010 D3F80821 	 ldr r2,[r3,#264]
 707 0014 FB7A     	 ldrb r3,[r7,#11]
 708 0016 0721     	 movs r1,#7
 709 0018 01FA03F3 	 lsl r3,r1,r3
 710 001c DB43     	 mvns r3,r3
 711 001e 1A40     	 ands r2,r2,r3
 255:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 712              	 .loc 1 255 0
 713 0020 FB7A     	 ldrb r3,[r7,#11]
 714 0022 7968     	 ldr r1,[r7,#4]
 715 0024 01FA03F3 	 lsl r3,r1,r3
 254:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 716              	 .loc 1 254 0
 717 0028 1A43     	 orrs r2,r2,r3
 718 002a FB68     	 ldr r3,[r7,#12]
 719 002c C3F80821 	 str r2,[r3,#264]
 256:../Libraries/XMCLib/src/xmc_usic.c **** }
 720              	 .loc 1 256 0
 721 0030 1437     	 adds r7,r7,#20
 722              	.LCFI49:
 723              	 .cfi_def_cfa_offset 4
 724 0032 BD46     	 mov sp,r7
 725              	.LCFI50:
 726              	 .cfi_def_cfa_register 13
 727              	 
 728 0034 5DF8047B 	 ldr r7,[sp],#4
 729              	.LCFI51:
 730              	 .cfi_restore 7
 731              	 .cfi_def_cfa_offset 0
 732 0038 7047     	 bx lr
 733              	 .cfi_endproc
 734              	.LFE205:
 736 003a 00BF     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 737              	 .align 2
 738              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 739              	 .thumb
 740              	 .thumb_func
 742              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 743              	.LFB206:
 257:../Libraries/XMCLib/src/xmc_usic.c **** 
 258:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 259:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 260:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 261:../Libraries/XMCLib/src/xmc_usic.c **** {
 744              	 .loc 1 261 0
 745              	 .cfi_startproc
 746              	 
 747              	 
 748              	 
 749 0000 80B4     	 push {r7}
 750              	.LCFI52:
 751              	 .cfi_def_cfa_offset 4
 752              	 .cfi_offset 7,-4
 753 0002 85B0     	 sub sp,sp,#20
 754              	.LCFI53:
 755              	 .cfi_def_cfa_offset 24
 756 0004 00AF     	 add r7,sp,#0
 757              	.LCFI54:
 758              	 .cfi_def_cfa_register 7
 759 0006 F860     	 str r0,[r7,#12]
 760 0008 0B46     	 mov r3,r1
 761 000a 7A60     	 str r2,[r7,#4]
 762 000c FB72     	 strb r3,[r7,#11]
 262:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 763              	 .loc 1 262 0
 764 000e FB68     	 ldr r3,[r7,#12]
 765 0010 D3F80C21 	 ldr r2,[r3,#268]
 766 0014 FB7A     	 ldrb r3,[r7,#11]
 767 0016 0721     	 movs r1,#7
 768 0018 01FA03F3 	 lsl r3,r1,r3
 769 001c DB43     	 mvns r3,r3
 770 001e 1A40     	 ands r2,r2,r3
 263:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 771              	 .loc 1 263 0
 772 0020 FB7A     	 ldrb r3,[r7,#11]
 773 0022 7968     	 ldr r1,[r7,#4]
 774 0024 01FA03F3 	 lsl r3,r1,r3
 262:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 775              	 .loc 1 262 0
 776 0028 1A43     	 orrs r2,r2,r3
 777 002a FB68     	 ldr r3,[r7,#12]
 778 002c C3F80C21 	 str r2,[r3,#268]
 264:../Libraries/XMCLib/src/xmc_usic.c **** }
 779              	 .loc 1 264 0
 780 0030 1437     	 adds r7,r7,#20
 781              	.LCFI55:
 782              	 .cfi_def_cfa_offset 4
 783 0032 BD46     	 mov sp,r7
 784              	.LCFI56:
 785              	 .cfi_def_cfa_register 13
 786              	 
 787 0034 5DF8047B 	 ldr r7,[sp],#4
 788              	.LCFI57:
 789              	 .cfi_restore 7
 790              	 .cfi_def_cfa_offset 0
 791 0038 7047     	 bx lr
 792              	 .cfi_endproc
 793              	.LFE206:
 795 003a 00BF     	 .text
 796              	.Letext0:
 797              	 .file 2 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 798              	 .file 3 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 799              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 800              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc_usic.h"
 801              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Include/core_cm4.h"
 802              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:19     .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:121    .text.XMC_USIC_CH_Enable:00000074 $d
    {standard input}:134    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:139    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:181    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:186    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:335    .text.XMC_USIC_CH_SetBaudrate:000000d8 $d
    {standard input}:341    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:346    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:410    .text.XMC_USIC_CH_TXFIFO_Configure:0000004c $d
    {standard input}:415    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:420    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:484    .text.XMC_USIC_CH_RXFIFO_Configure:00000050 $d
    {standard input}:489    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:494    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:554    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:559    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:619    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:624    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:678    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:683    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:737    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:742    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_Enable
XMC_SCU_CLOCK_GetPeripheralClockFrequency
