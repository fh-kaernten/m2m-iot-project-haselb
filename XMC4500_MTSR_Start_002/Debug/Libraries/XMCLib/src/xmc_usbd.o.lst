   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_usbd.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
  19              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  20              	 .align 2
  23              	XMC_USBD_EP_OUT_BUFFERSIZE:
  24 0000 00000000 	 .space 28
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .global XMC_USBD_EP_IN_BUFFERSIZE
  26              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  27              	 .align 2
  30              	XMC_USBD_EP_IN_BUFFERSIZE:
  31 0000 00000000 	 .space 28
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              	 .comm xmc_device,520,4
  33              	 .global XMC_USBD_EP_OUT_BUFFER
  34              	 .section USB_RAM,"aw",%progbits
  35              	 .align 2
  38              	XMC_USBD_EP_OUT_BUFFER:
  39 0000 00000000 	 .space 1792
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              	 .global XMC_USBD_EP_IN_BUFFER
  41              	 .align 2
  44              	XMC_USBD_EP_IN_BUFFER:
  45 0700 00000000 	 .space 1792
  45      00000000 
  45      00000000 
  45      00000000 
  45      00000000 
  46              	 .comm usbd_init,4,4
  47              	 .global Driver_USBD0
  48              	 .section .rodata.Driver_USBD0,"a",%progbits
  49              	 .align 2
  52              	Driver_USBD0:
  53 0000 00000000 	 .word XMC_USBD_GetCapabilities
  54 0004 00000000 	 .word XMC_USBD_Init
  55 0008 00000000 	 .word XMC_USBD_Uninitialize
  56 000c 00000000 	 .word XMC_USBD_DeviceConnect
  57 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  58 0014 00000000 	 .word XMC_USBD_DeviceGetState
  59 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  60 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  61 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  62 0024 00000000 	 .word XMC_USBD_EndpointStall
  63 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  64 002c 00000000 	 .word XMC_USBD_EndpointRead
  65 0030 00000000 	 .word XMC_USBD_EndpointWrite
  66 0034 00000000 	 .word XMC_USBD_EndpointAbort
  67 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  68 003c 00000000 	 .word XMC_USBD_IsEnumDone
  69              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  70              	 .align 2
  71              	 .global XMC_USBD_lDeviceActive
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_USBD_lDeviceActive:
  76              	.LFB151:
  77              	 .file 1 "../Libraries/XMCLib/src/xmc_usbd.c"
   1:../Libraries/XMCLib/src/xmc_usbd.c **** /**
   2:../Libraries/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../Libraries/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   5:../Libraries/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../Libraries/XMCLib/src/xmc_usbd.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_usbd.c ****  *
   9:../Libraries/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../Libraries/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../Libraries/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../Libraries/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../Libraries/XMCLib/src/xmc_usbd.c ****  * 
  22:../Libraries/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../Libraries/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../Libraries/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../Libraries/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../Libraries/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../Libraries/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../Libraries/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../Libraries/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../Libraries/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../Libraries/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../Libraries/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../Libraries/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../Libraries/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../Libraries/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../Libraries/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../Libraries/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../Libraries/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  43:../Libraries/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../Libraries/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  46:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../Libraries/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../Libraries/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  58:../Libraries/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../Libraries/XMCLib/src/xmc_usbd.c ****  *
  60:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  61:../Libraries/XMCLib/src/xmc_usbd.c **** 
  62:../Libraries/XMCLib/src/xmc_usbd.c **** 
  63:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../Libraries/XMCLib/src/xmc_usbd.c **** 
  68:../Libraries/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../Libraries/XMCLib/src/xmc_usbd.c **** 	
  70:../Libraries/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../Libraries/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../Libraries/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../Libraries/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../Libraries/XMCLib/src/xmc_usbd.c **** 
  80:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../Libraries/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  84:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  86:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  88:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  90:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  92:../Libraries/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  94:../Libraries/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../Libraries/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../Libraries/XMCLib/src/xmc_usbd.c **** /*
  97:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../Libraries/XMCLib/src/xmc_usbd.c ****  */
  99:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("USB_RAM")));
 100:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 101:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 103:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("USB_RAM")));
 104:../Libraries/XMCLib/src/xmc_usbd.c **** #else
 105:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 106:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 107:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 108:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_EP_OUT_BUFFER[7][256];
 109:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 110:../Libraries/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 111:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 112:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_EP_IN_BUFFER[7][256];
 113:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 114:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 115:../Libraries/XMCLib/src/xmc_usbd.c **** 
 116:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 117:../Libraries/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 118:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 119:../Libraries/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 120:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 121:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 122:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 123:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 124:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 125:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 126:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 127:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 128:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 129:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 130:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 131:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 132:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 133:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 134:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 135:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 136:../Libraries/XMCLib/src/xmc_usbd.c **** 
 137:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 138:../Libraries/XMCLib/src/xmc_usbd.c ****  *  The device driver
 139:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 140:../Libraries/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 141:../Libraries/XMCLib/src/xmc_usbd.c **** {
 142:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 143:../Libraries/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 144:../Libraries/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 145:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 146:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 147:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 148:../Libraries/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 149:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 150:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 151:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 152:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 153:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 154:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 155:../Libraries/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 156:../Libraries/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 157:../Libraries/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 158:../Libraries/XMCLib/src/xmc_usbd.c **** };
 159:../Libraries/XMCLib/src/xmc_usbd.c **** 
 160:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 161:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 162:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 163:../Libraries/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 164:../Libraries/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 165:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 166:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 167:../Libraries/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 168:../Libraries/XMCLib/src/xmc_usbd.c **** {
  78              	 .loc 1 168 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI0:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 85B0     	 sub sp,sp,#20
  88              	.LCFI1:
  89              	 .cfi_def_cfa_offset 24
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI2:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
 169:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 170:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  94              	 .loc 1 170 0
  95 0008 0023     	 movs r3,#0
  96 000a BB73     	 strb r3,[r7,#14]
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  97              	 .loc 1 171 0
  98 000c 0023     	 movs r3,#0
  99 000e FB73     	 strb r3,[r7,#15]
 100 0010 1EE0     	 b .L2
 101              	.L5:
 172:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 173:../Libraries/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 102              	 .loc 1 173 0
 103 0012 FB7B     	 ldrb r3,[r7,#15]
 104 0014 144A     	 ldr r2,.L7
 105 0016 3421     	 movs r1,#52
 106 0018 01FB03F3 	 mul r3,r1,r3
 107 001c 1344     	 add r3,r3,r2
 108 001e 5B68     	 ldr r3,[r3,#4]
 109 0020 DB08     	 lsrs r3,r3,#3
 110 0022 03F00103 	 and r3,r3,#1
 111 0026 DBB2     	 uxtb r3,r3
 112 0028 002B     	 cmp r3,#0
 113 002a 0CD1     	 bne .L3
 114              	 .loc 1 173 0 is_stmt 0 discriminator 1
 115 002c FB7B     	 ldrb r3,[r7,#15]
 116 002e 0E4A     	 ldr r2,.L7
 117 0030 3421     	 movs r1,#52
 118 0032 01FB03F3 	 mul r3,r1,r3
 119 0036 1344     	 add r3,r3,r2
 120 0038 5B68     	 ldr r3,[r3,#4]
 121 003a 1B09     	 lsrs r3,r3,#4
 122 003c 03F00103 	 and r3,r3,#1
 123 0040 DBB2     	 uxtb r3,r3
 124 0042 002B     	 cmp r3,#0
 125 0044 01D0     	 beq .L4
 126              	.L3:
 174:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 175:../Libraries/XMCLib/src/xmc_usbd.c ****       result = 1U;
 127              	 .loc 1 175 0 is_stmt 1
 128 0046 0123     	 movs r3,#1
 129 0048 BB73     	 strb r3,[r7,#14]
 130              	.L4:
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 131              	 .loc 1 171 0 discriminator 2
 132 004a FB7B     	 ldrb r3,[r7,#15]
 133 004c 0133     	 adds r3,r3,#1
 134 004e FB73     	 strb r3,[r7,#15]
 135              	.L2:
 171:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 136              	 .loc 1 171 0 is_stmt 0 discriminator 1
 137 0050 7B68     	 ldr r3,[r7,#4]
 138 0052 1B7B     	 ldrb r3,[r3,#12]
 139 0054 FA7B     	 ldrb r2,[r7,#15]
 140 0056 9A42     	 cmp r2,r3
 141 0058 DBD3     	 bcc .L5
 176:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 177:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 178:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 142              	 .loc 1 178 0 is_stmt 1
 143 005a BB7B     	 ldrb r3,[r7,#14]
 179:../Libraries/XMCLib/src/xmc_usbd.c **** }
 144              	 .loc 1 179 0
 145 005c 1846     	 mov r0,r3
 146 005e 1437     	 adds r7,r7,#20
 147              	.LCFI3:
 148              	 .cfi_def_cfa_offset 4
 149 0060 BD46     	 mov sp,r7
 150              	.LCFI4:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0062 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI5:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0066 7047     	 bx lr
 158              	.L8:
 159              	 .align 2
 160              	.L7:
 161 0068 00000000 	 .word xmc_device
 162              	 .cfi_endproc
 163              	.LFE151:
 165              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 166              	 .align 2
 167              	 .thumb
 168              	 .thumb_func
 170              	XMC_USBD_lReadFifo:
 171              	.LFB152:
 180:../Libraries/XMCLib/src/xmc_usbd.c **** 
 181:../Libraries/XMCLib/src/xmc_usbd.c **** 
 182:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 183:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 184:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 185:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 186:../Libraries/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 187:../Libraries/XMCLib/src/xmc_usbd.c ****  * the function exits.
 188:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 189:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 190:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 191:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 192:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 193:../Libraries/XMCLib/src/xmc_usbd.c **** {
 172              	 .loc 1 193 0
 173              	 .cfi_startproc
 174              	 
 175              	 
 176              	 
 177 0000 80B4     	 push {r7}
 178              	.LCFI6:
 179              	 .cfi_def_cfa_offset 4
 180              	 .cfi_offset 7,-4
 181 0002 8BB0     	 sub sp,sp,#44
 182              	.LCFI7:
 183              	 .cfi_def_cfa_offset 48
 184 0004 00AF     	 add r7,sp,#0
 185              	.LCFI8:
 186              	 .cfi_def_cfa_register 7
 187 0006 7860     	 str r0,[r7,#4]
 188 0008 3960     	 str r1,[r7]
 194:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 189              	 .loc 1 194 0
 190 000a 7B68     	 ldr r3,[r7,#4]
 191 000c 3422     	 movs r2,#52
 192 000e 02FB03F3 	 mul r3,r2,r3
 193 0012 344A     	 ldr r2,.L16
 194 0014 1344     	 add r3,r3,r2
 195 0016 3B62     	 str r3,[r7,#32]
 195:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 196:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 197:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 198:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 196              	 .loc 1 198 0
 197 0018 324B     	 ldr r3,.L16
 198 001a D3F8E031 	 ldr r3,[r3,#480]
 199 001e FB61     	 str r3,[r7,#28]
 199:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 200:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 201:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 200              	 .loc 1 201 0
 201 0020 304A     	 ldr r2,.L16
 202 0022 7B68     	 ldr r3,[r7,#4]
 203 0024 7033     	 adds r3,r3,#112
 204 0026 9B00     	 lsls r3,r3,#2
 205 0028 1344     	 add r3,r3,r2
 206 002a 5B68     	 ldr r3,[r3,#4]
 207 002c 1B68     	 ldr r3,[r3]
 208 002e FB60     	 str r3,[r7,#12]
 202:../Libraries/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 209              	 .loc 1 202 0
 210 0030 3B68     	 ldr r3,[r7]
 211 0032 9B08     	 lsrs r3,r3,#2
 212 0034 BB61     	 str r3,[r7,#24]
 203:../Libraries/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 213              	 .loc 1 203 0
 214 0036 BB69     	 ldr r3,[r7,#24]
 215 0038 9B00     	 lsls r3,r3,#2
 216 003a 7B61     	 str r3,[r7,#20]
 204:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 205:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 217              	 .loc 1 205 0
 218 003c 7B7B     	 ldrb r3,[r7,#13]
 219 003e 23F07F03 	 bic r3,r3,#127
 220 0042 DBB2     	 uxtb r3,r3
 221 0044 002B     	 cmp r3,#0
 222 0046 48D0     	 beq .L9
 206:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 207:../Libraries/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 208:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 209:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 223              	 .loc 1 209 0
 224 0048 3B6A     	 ldr r3,[r7,#32]
 225 004a 5B6A     	 ldr r3,[r3,#36]
 226 004c 002B     	 cmp r3,#0
 227 004e 44D0     	 beq .L9
 210:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 211:../Libraries/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 212:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 213:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 214:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 215:../Libraries/XMCLib/src/xmc_usbd.c ****     /* store the data */
 216:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
 228              	 .loc 1 216 0
 229 0050 0023     	 movs r3,#0
 230 0052 7B62     	 str r3,[r7,#36]
 231 0054 0AE0     	 b .L11
 232              	.L12:
 217:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 218:../Libraries/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
 233              	 .loc 1 218 0 discriminator 3
 234 0056 3B6A     	 ldr r3,[r7,#32]
 235 0058 5A6A     	 ldr r2,[r3,#36]
 236 005a 7B6A     	 ldr r3,[r7,#36]
 237 005c 9B00     	 lsls r3,r3,#2
 238 005e 1344     	 add r3,r3,r2
 239 0060 FA69     	 ldr r2,[r7,#28]
 240 0062 1268     	 ldr r2,[r2]
 241 0064 1A60     	 str r2,[r3]
 216:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 242              	 .loc 1 216 0 discriminator 3
 243 0066 7B6A     	 ldr r3,[r7,#36]
 244 0068 0133     	 adds r3,r3,#1
 245 006a 7B62     	 str r3,[r7,#36]
 246              	.L11:
 216:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 247              	 .loc 1 216 0 is_stmt 0 discriminator 1
 248 006c 7A6A     	 ldr r2,[r7,#36]
 249 006e BB69     	 ldr r3,[r7,#24]
 250 0070 9A42     	 cmp r2,r3
 251 0072 F0D3     	 bcc .L12
 219:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 220:../Libraries/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 221:../Libraries/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
 252              	 .loc 1 221 0 is_stmt 1
 253 0074 3A68     	 ldr r2,[r7]
 254 0076 7B69     	 ldr r3,[r7,#20]
 255 0078 9A42     	 cmp r2,r3
 256 007a 22D0     	 beq .L13
 222:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 223:../Libraries/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 257              	 .loc 1 223 0
 258 007c FB69     	 ldr r3,[r7,#28]
 259 007e 1B68     	 ldr r3,[r3]
 260 0080 3B61     	 str r3,[r7,#16]
 224:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 261              	 .loc 1 224 0
 262 0082 0023     	 movs r3,#0
 263 0084 7B62     	 str r3,[r7,#36]
 264 0086 16E0     	 b .L14
 265              	.L15:
 225:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 226:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 266              	 .loc 1 226 0 discriminator 3
 267 0088 3B6A     	 ldr r3,[r7,#32]
 268 008a 5A6A     	 ldr r2,[r3,#36]
 269 008c BB69     	 ldr r3,[r7,#24]
 270 008e 9900     	 lsls r1,r3,#2
 271 0090 7B6A     	 ldr r3,[r7,#36]
 272 0092 0B44     	 add r3,r3,r1
 273 0094 1344     	 add r3,r3,r2
 274 0096 7A6A     	 ldr r2,[r7,#36]
 275 0098 D200     	 lsls r2,r2,#3
 276 009a 1146     	 mov r1,r2
 277 009c FF22     	 movs r2,#255
 278 009e 02FA01F1 	 lsl r1,r2,r1
 279 00a2 3A69     	 ldr r2,[r7,#16]
 280 00a4 0A40     	 ands r2,r2,r1
 281 00a6 796A     	 ldr r1,[r7,#36]
 282 00a8 C900     	 lsls r1,r1,#3
 283 00aa CA40     	 lsrs r2,r2,r1
 284 00ac D2B2     	 uxtb r2,r2
 285 00ae 1A70     	 strb r2,[r3]
 224:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 286              	 .loc 1 224 0 discriminator 3
 287 00b0 7B6A     	 ldr r3,[r7,#36]
 288 00b2 0133     	 adds r3,r3,#1
 289 00b4 7B62     	 str r3,[r7,#36]
 290              	.L14:
 224:../Libraries/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 291              	 .loc 1 224 0 is_stmt 0 discriminator 1
 292 00b6 7A69     	 ldr r2,[r7,#20]
 293 00b8 7B6A     	 ldr r3,[r7,#36]
 294 00ba 1A44     	 add r2,r2,r3
 295 00bc 3B68     	 ldr r3,[r7]
 296 00be 9A42     	 cmp r2,r3
 297 00c0 E2D3     	 bcc .L15
 298              	.L13:
 227:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 228:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 229:../Libraries/XMCLib/src/xmc_usbd.c **** 
 230:../Libraries/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 231:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 299              	 .loc 1 231 0 is_stmt 1
 300 00c2 3B6A     	 ldr r3,[r7,#32]
 301 00c4 DA6A     	 ldr r2,[r3,#44]
 302 00c6 3B68     	 ldr r3,[r7]
 303 00c8 1A44     	 add r2,r2,r3
 304 00ca 3B6A     	 ldr r3,[r7,#32]
 305 00cc DA62     	 str r2,[r3,#44]
 232:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 306              	 .loc 1 232 0
 307 00ce 3B6A     	 ldr r3,[r7,#32]
 308 00d0 5A6A     	 ldr r2,[r3,#36]
 309 00d2 3B68     	 ldr r3,[r7]
 310 00d4 1A44     	 add r2,r2,r3
 311 00d6 3B6A     	 ldr r3,[r7,#32]
 312 00d8 5A62     	 str r2,[r3,#36]
 313              	.L9:
 233:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 234:../Libraries/XMCLib/src/xmc_usbd.c **** }
 314              	 .loc 1 234 0
 315 00da 2C37     	 adds r7,r7,#44
 316              	.LCFI9:
 317              	 .cfi_def_cfa_offset 4
 318 00dc BD46     	 mov sp,r7
 319              	.LCFI10:
 320              	 .cfi_def_cfa_register 13
 321              	 
 322 00de 5DF8047B 	 ldr r7,[sp],#4
 323              	.LCFI11:
 324              	 .cfi_restore 7
 325              	 .cfi_def_cfa_offset 0
 326 00e2 7047     	 bx lr
 327              	.L17:
 328              	 .align 2
 329              	.L16:
 330 00e4 00000000 	 .word xmc_device
 331              	 .cfi_endproc
 332              	.LFE152:
 334              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 335              	 .align 2
 336              	 .thumb
 337              	 .thumb_func
 339              	XMC_USBD_lWriteFifo:
 340              	.LFB153:
 235:../Libraries/XMCLib/src/xmc_usbd.c **** 
 236:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 237:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 238:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 239:../Libraries/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 240:../Libraries/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 241:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 242:../Libraries/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 243:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 244:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 245:../Libraries/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 246:../Libraries/XMCLib/src/xmc_usbd.c **** {
 341              	 .loc 1 246 0
 342              	 .cfi_startproc
 343              	 
 344              	 
 345              	 
 346 0000 80B4     	 push {r7}
 347              	.LCFI12:
 348              	 .cfi_def_cfa_offset 4
 349              	 .cfi_offset 7,-4
 350 0002 89B0     	 sub sp,sp,#36
 351              	.LCFI13:
 352              	 .cfi_def_cfa_offset 40
 353 0004 00AF     	 add r7,sp,#0
 354              	.LCFI14:
 355              	 .cfi_def_cfa_register 7
 356 0006 7860     	 str r0,[r7,#4]
 247:../Libraries/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 248:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 249:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 250:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 251:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 252:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 253:../Libraries/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 357              	 .loc 1 253 0
 358 0008 7B68     	 ldr r3,[r7,#4]
 359 000a 1B78     	 ldrb r3,[r3]
 360 000c C3F30303 	 ubfx r3,r3,#0,#4
 361 0010 DBB2     	 uxtb r3,r3
 362 0012 234A     	 ldr r2,.L25
 363 0014 7833     	 adds r3,r3,#120
 364 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 365 001a FB60     	 str r3,[r7,#12]
 254:../Libraries/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 366              	 .loc 1 254 0
 367 001c 7B68     	 ldr r3,[r7,#4]
 368 001e 1B78     	 ldrb r3,[r3]
 369 0020 C3F30303 	 ubfx r3,r3,#0,#4
 370 0024 DBB2     	 uxtb r3,r3
 371 0026 1E4A     	 ldr r2,.L25
 372 0028 6A33     	 adds r3,r3,#106
 373 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 374 002e 9B69     	 ldr r3,[r3,#24]
 375 0030 BB60     	 str r3,[r7,#8]
 255:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 256:../Libraries/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 376              	 .loc 1 256 0
 377 0032 7B68     	 ldr r3,[r7,#4]
 378 0034 9A6A     	 ldr r2,[r3,#40]
 379 0036 7B68     	 ldr r3,[r7,#4]
 380 0038 DB6A     	 ldr r3,[r3,#44]
 381 003a D31A     	 subs r3,r2,r3
 382 003c FB61     	 str r3,[r7,#28]
 257:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 383              	 .loc 1 257 0
 384 003e FB69     	 ldr r3,[r7,#28]
 385 0040 002B     	 cmp r3,#0
 386 0042 02D1     	 bne .L19
 258:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 259:../Libraries/XMCLib/src/xmc_usbd.c ****     result = 0U;
 387              	 .loc 1 259 0
 388 0044 0023     	 movs r3,#0
 389 0046 7B61     	 str r3,[r7,#20]
 390 0048 23E0     	 b .L20
 391              	.L19:
 260:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 261:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 262:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 263:../Libraries/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 264:../Libraries/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 392              	 .loc 1 264 0
 393 004a FB69     	 ldr r3,[r7,#28]
 394 004c 0333     	 adds r3,r3,#3
 395 004e 9B08     	 lsrs r3,r3,#2
 396 0050 BB61     	 str r3,[r7,#24]
 265:../Libraries/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 397              	 .loc 1 265 0
 398 0052 3B89     	 ldrh r3,[r7,#8]
 399 0054 1A46     	 mov r2,r3
 400 0056 BB69     	 ldr r3,[r7,#24]
 401 0058 9A42     	 cmp r2,r3
 402 005a 04D2     	 bcs .L21
 266:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 267:../Libraries/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 403              	 .loc 1 267 0
 404 005c 3B89     	 ldrh r3,[r7,#8]
 405 005e BB61     	 str r3,[r7,#24]
 268:../Libraries/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 406              	 .loc 1 268 0
 407 0060 BB69     	 ldr r3,[r7,#24]
 408 0062 9B00     	 lsls r3,r3,#2
 409 0064 FB61     	 str r3,[r7,#28]
 410              	.L21:
 269:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 270:../Libraries/XMCLib/src/xmc_usbd.c **** 
 271:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 411              	 .loc 1 272 0
 412 0066 0023     	 movs r3,#0
 413 0068 3B61     	 str r3,[r7,#16]
 414 006a 0CE0     	 b .L22
 415              	.L23:
 273:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 274:../Libraries/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 416              	 .loc 1 274 0 discriminator 3
 417 006c 7B68     	 ldr r3,[r7,#4]
 418 006e 5B6A     	 ldr r3,[r3,#36]
 419 0070 1A68     	 ldr r2,[r3]
 420 0072 FB68     	 ldr r3,[r7,#12]
 421 0074 1A60     	 str r2,[r3]
 275:../Libraries/XMCLib/src/xmc_usbd.c ****       i++;
 422              	 .loc 1 275 0 discriminator 3
 423 0076 3B69     	 ldr r3,[r7,#16]
 424 0078 0133     	 adds r3,r3,#1
 425 007a 3B61     	 str r3,[r7,#16]
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 426              	 .loc 1 272 0 discriminator 3
 427 007c 7B68     	 ldr r3,[r7,#4]
 428 007e 5B6A     	 ldr r3,[r3,#36]
 429 0080 1A1D     	 adds r2,r3,#4
 430 0082 7B68     	 ldr r3,[r7,#4]
 431 0084 5A62     	 str r2,[r3,#36]
 432              	.L22:
 272:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 433              	 .loc 1 272 0 is_stmt 0 discriminator 1
 434 0086 3A69     	 ldr r2,[r7,#16]
 435 0088 BB69     	 ldr r3,[r7,#24]
 436 008a 9A42     	 cmp r2,r3
 437 008c EED3     	 bcc .L23
 276:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 277:../Libraries/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 438              	 .loc 1 277 0 is_stmt 1
 439 008e FB69     	 ldr r3,[r7,#28]
 440 0090 7B61     	 str r3,[r7,#20]
 441              	.L20:
 278:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 279:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 442              	 .loc 1 279 0
 443 0092 7B69     	 ldr r3,[r7,#20]
 280:../Libraries/XMCLib/src/xmc_usbd.c **** }
 444              	 .loc 1 280 0
 445 0094 1846     	 mov r0,r3
 446 0096 2437     	 adds r7,r7,#36
 447              	.LCFI15:
 448              	 .cfi_def_cfa_offset 4
 449 0098 BD46     	 mov sp,r7
 450              	.LCFI16:
 451              	 .cfi_def_cfa_register 13
 452              	 
 453 009a 5DF8047B 	 ldr r7,[sp],#4
 454              	.LCFI17:
 455              	 .cfi_restore 7
 456              	 .cfi_def_cfa_offset 0
 457 009e 7047     	 bx lr
 458              	.L26:
 459              	 .align 2
 460              	.L25:
 461 00a0 00000000 	 .word xmc_device
 462              	 .cfi_endproc
 463              	.LFE153:
 465              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 466              	 .align 2
 467              	 .thumb
 468              	 .thumb_func
 470              	XMC_USBD_lFlushTXFifo:
 471              	.LFB154:
 281:../Libraries/XMCLib/src/xmc_usbd.c **** 
 282:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 283:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 284:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 285:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 286:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 287:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 288:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 289:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 290:../Libraries/XMCLib/src/xmc_usbd.c **** {
 472              	 .loc 1 290 0
 473              	 .cfi_startproc
 474              	 
 475              	 
 476              	 
 477 0000 80B4     	 push {r7}
 478              	.LCFI18:
 479              	 .cfi_def_cfa_offset 4
 480              	 .cfi_offset 7,-4
 481 0002 85B0     	 sub sp,sp,#20
 482              	.LCFI19:
 483              	 .cfi_def_cfa_offset 24
 484 0004 00AF     	 add r7,sp,#0
 485              	.LCFI20:
 486              	 .cfi_def_cfa_register 7
 487 0006 0346     	 mov r3,r0
 488 0008 FB71     	 strb r3,[r7,#7]
 291:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 292:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 293:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 489              	 .loc 1 293 0
 490 000a 0023     	 movs r3,#0
 491 000c BB60     	 str r3,[r7,#8]
 294:../Libraries/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 295:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 492              	 .loc 1 295 0
 493 000e BB68     	 ldr r3,[r7,#8]
 494 0010 43F02003 	 orr r3,r3,#32
 495 0014 BB60     	 str r3,[r7,#8]
 296:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 496              	 .loc 1 296 0
 497 0016 FB79     	 ldrb r3,[r7,#7]
 498 0018 03F01F03 	 and r3,r3,#31
 499 001c DBB2     	 uxtb r3,r3
 500 001e 03F01F03 	 and r3,r3,#31
 501 0022 9B01     	 lsls r3,r3,#6
 502 0024 BA68     	 ldr r2,[r7,#8]
 503 0026 22F4F862 	 bic r2,r2,#1984
 504 002a 1343     	 orrs r3,r3,r2
 505 002c BB60     	 str r3,[r7,#8]
 297:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 506              	 .loc 1 297 0
 507 002e 144B     	 ldr r3,.L32
 508 0030 D3F8A031 	 ldr r3,[r3,#416]
 509 0034 BA68     	 ldr r2,[r7,#8]
 510 0036 1A61     	 str r2,[r3,#16]
 298:../Libraries/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 511              	 .loc 1 298 0
 512 0038 0023     	 movs r3,#0
 513 003a FB60     	 str r3,[r7,#12]
 514 003c 02E0     	 b .L28
 515              	.L29:
 516              	 .loc 1 298 0 is_stmt 0 discriminator 3
 517 003e FB68     	 ldr r3,[r7,#12]
 518 0040 0133     	 adds r3,r3,#1
 519 0042 FB60     	 str r3,[r7,#12]
 520              	.L28:
 521              	 .loc 1 298 0 discriminator 1
 522 0044 FB68     	 ldr r3,[r7,#12]
 523 0046 B3F57A7F 	 cmp r3,#1000
 524 004a F8D3     	 bcc .L29
 525              	.L30:
 299:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 300:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 301:../Libraries/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 526              	 .loc 1 301 0 is_stmt 1 discriminator 1
 527 004c 0C4B     	 ldr r3,.L32
 528 004e D3F8A031 	 ldr r3,[r3,#416]
 529 0052 1B69     	 ldr r3,[r3,#16]
 530 0054 BB60     	 str r3,[r7,#8]
 302:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 531              	 .loc 1 302 0 discriminator 1
 532 0056 BB68     	 ldr r3,[r7,#8]
 533 0058 5B09     	 lsrs r3,r3,#5
 534 005a 03F00103 	 and r3,r3,#1
 535 005e DBB2     	 uxtb r3,r3
 536 0060 002B     	 cmp r3,#0
 537 0062 F3D1     	 bne .L30
 303:../Libraries/XMCLib/src/xmc_usbd.c ****     count = 0U;
 538              	 .loc 1 303 0
 539 0064 0023     	 movs r3,#0
 540 0066 FB60     	 str r3,[r7,#12]
 304:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 541              	 .loc 1 304 0
 542 0068 00BF     	 nop
 543              	.L31:
 544              	 .loc 1 304 0 is_stmt 0 discriminator 1
 545 006a FB68     	 ldr r3,[r7,#12]
 546 006c 5A1C     	 adds r2,r3,#1
 547 006e FA60     	 str r2,[r7,#12]
 548 0070 B3F57A7F 	 cmp r3,#1000
 549 0074 F9D3     	 bcc .L31
 305:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 306:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 307:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 308:../Libraries/XMCLib/src/xmc_usbd.c **** }
 550              	 .loc 1 308 0 is_stmt 1
 551 0076 1437     	 adds r7,r7,#20
 552              	.LCFI21:
 553              	 .cfi_def_cfa_offset 4
 554 0078 BD46     	 mov sp,r7
 555              	.LCFI22:
 556              	 .cfi_def_cfa_register 13
 557              	 
 558 007a 5DF8047B 	 ldr r7,[sp],#4
 559              	.LCFI23:
 560              	 .cfi_restore 7
 561              	 .cfi_def_cfa_offset 0
 562 007e 7047     	 bx lr
 563              	.L33:
 564              	 .align 2
 565              	.L32:
 566 0080 00000000 	 .word xmc_device
 567              	 .cfi_endproc
 568              	.LFE154:
 570              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 571              	 .align 2
 572              	 .thumb
 573              	 .thumb_func
 575              	XMC_USBD_lFlushRXFifo:
 576              	.LFB155:
 309:../Libraries/XMCLib/src/xmc_usbd.c **** 
 310:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 311:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 312:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 313:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 314:../Libraries/XMCLib/src/xmc_usbd.c **** {
 577              	 .loc 1 314 0
 578              	 .cfi_startproc
 579              	 
 580              	 
 581              	 
 582 0000 80B4     	 push {r7}
 583              	.LCFI24:
 584              	 .cfi_def_cfa_offset 4
 585              	 .cfi_offset 7,-4
 586 0002 83B0     	 sub sp,sp,#12
 587              	.LCFI25:
 588              	 .cfi_def_cfa_offset 16
 589 0004 00AF     	 add r7,sp,#0
 590              	.LCFI26:
 591              	 .cfi_def_cfa_register 7
 315:../Libraries/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 316:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 317:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 318:../Libraries/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 592              	 .loc 1 318 0
 593 0006 0023     	 movs r3,#0
 594 0008 3B60     	 str r3,[r7]
 319:../Libraries/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 595              	 .loc 1 319 0
 596 000a 3B68     	 ldr r3,[r7]
 597 000c 43F01003 	 orr r3,r3,#16
 598 0010 3B60     	 str r3,[r7]
 320:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 321:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 599              	 .loc 1 321 0
 600 0012 144B     	 ldr r3,.L39
 601 0014 D3F8A031 	 ldr r3,[r3,#416]
 602 0018 3A68     	 ldr r2,[r7]
 603 001a 1A61     	 str r2,[r3,#16]
 604              	.L37:
 322:../Libraries/XMCLib/src/xmc_usbd.c ****   do
 323:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 324:../Libraries/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 605              	 .loc 1 324 0
 606 001c 0023     	 movs r3,#0
 607 001e 7B60     	 str r3,[r7,#4]
 608 0020 02E0     	 b .L35
 609              	.L36:
 610              	 .loc 1 324 0 is_stmt 0 discriminator 3
 611 0022 7B68     	 ldr r3,[r7,#4]
 612 0024 0133     	 adds r3,r3,#1
 613 0026 7B60     	 str r3,[r7,#4]
 614              	.L35:
 615              	 .loc 1 324 0 discriminator 1
 616 0028 7B68     	 ldr r3,[r7,#4]
 617 002a B3F57A7F 	 cmp r3,#1000
 618 002e F8D3     	 bcc .L36
 325:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 619              	 .loc 1 325 0 is_stmt 1
 620 0030 0C4B     	 ldr r3,.L39
 621 0032 D3F8A031 	 ldr r3,[r3,#416]
 622 0036 1B69     	 ldr r3,[r3,#16]
 623 0038 3B60     	 str r3,[r7]
 326:../Libraries/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 624              	 .loc 1 326 0
 625 003a 3B68     	 ldr r3,[r7]
 626 003c 1B09     	 lsrs r3,r3,#4
 627 003e 03F00103 	 and r3,r3,#1
 628 0042 DBB2     	 uxtb r3,r3
 629 0044 002B     	 cmp r3,#0
 630 0046 E9D1     	 bne .L37
 327:../Libraries/XMCLib/src/xmc_usbd.c ****   count = 0U;
 631              	 .loc 1 327 0
 632 0048 0023     	 movs r3,#0
 633 004a 7B60     	 str r3,[r7,#4]
 328:../Libraries/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 634              	 .loc 1 328 0
 635 004c 00BF     	 nop
 636              	.L38:
 637              	 .loc 1 328 0 is_stmt 0 discriminator 1
 638 004e 7B68     	 ldr r3,[r7,#4]
 639 0050 5A1C     	 adds r2,r3,#1
 640 0052 7A60     	 str r2,[r7,#4]
 641 0054 B3F57A7F 	 cmp r3,#1000
 642 0058 F9D3     	 bcc .L38
 329:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 330:../Libraries/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 331:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 332:../Libraries/XMCLib/src/xmc_usbd.c **** }
 643              	 .loc 1 332 0 is_stmt 1
 644 005a 0C37     	 adds r7,r7,#12
 645              	.LCFI27:
 646              	 .cfi_def_cfa_offset 4
 647 005c BD46     	 mov sp,r7
 648              	.LCFI28:
 649              	 .cfi_def_cfa_register 13
 650              	 
 651 005e 5DF8047B 	 ldr r7,[sp],#4
 652              	.LCFI29:
 653              	 .cfi_restore 7
 654              	 .cfi_def_cfa_offset 0
 655 0062 7047     	 bx lr
 656              	.L40:
 657              	 .align 2
 658              	.L39:
 659 0064 00000000 	 .word xmc_device
 660              	 .cfi_endproc
 661              	.LFE155:
 663              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 664              	 .align 2
 665              	 .thumb
 666              	 .thumb_func
 668              	XMC_USBD_lAssignTXFifo:
 669              	.LFB156:
 333:../Libraries/XMCLib/src/xmc_usbd.c **** 
 334:../Libraries/XMCLib/src/xmc_usbd.c **** /*
 335:../Libraries/XMCLib/src/xmc_usbd.c ****  * Support Functions
 336:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 337:../Libraries/XMCLib/src/xmc_usbd.c **** 
 338:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 339:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 340:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 341:../Libraries/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 342:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 343:../Libraries/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 344:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 345:../Libraries/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 346:../Libraries/XMCLib/src/xmc_usbd.c **** {
 670              	 .loc 1 346 0
 671              	 .cfi_startproc
 672              	 
 673              	 
 674              	 
 675 0000 80B4     	 push {r7}
 676              	.LCFI30:
 677              	 .cfi_def_cfa_offset 4
 678              	 .cfi_offset 7,-4
 679 0002 83B0     	 sub sp,sp,#12
 680              	.LCFI31:
 681              	 .cfi_def_cfa_offset 16
 682 0004 00AF     	 add r7,sp,#0
 683              	.LCFI32:
 684              	 .cfi_def_cfa_register 7
 347:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 685              	 .loc 1 347 0
 686 0006 0123     	 movs r3,#1
 687 0008 FB80     	 strh r3,[r7,#6]
 348:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 688              	 .loc 1 348 0
 689 000a 0023     	 movs r3,#0
 690 000c 7B71     	 strb r3,[r7,#5]
 349:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 691              	 .loc 1 349 0
 692 000e 0023     	 movs r3,#0
 693 0010 3B71     	 strb r3,[r7,#4]
 350:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 694              	 .loc 1 350 0
 695 0012 05E0     	 b .L42
 696              	.L44:
 351:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 352:../Libraries/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 697              	 .loc 1 352 0
 698 0014 FB88     	 ldrh r3,[r7,#6]
 699 0016 5B00     	 lsls r3,r3,#1
 700 0018 FB80     	 strh r3,[r7,#6]
 353:../Libraries/XMCLib/src/xmc_usbd.c ****     i++;
 701              	 .loc 1 353 0
 702 001a 7B79     	 ldrb r3,[r7,#5]
 703 001c 0133     	 adds r3,r3,#1
 704 001e 7B71     	 strb r3,[r7,#5]
 705              	.L42:
 350:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 706              	 .loc 1 350 0
 707 0020 7B79     	 ldrb r3,[r7,#5]
 708 0022 062B     	 cmp r3,#6
 709 0024 07D8     	 bhi .L43
 350:../Libraries/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 710              	 .loc 1 350 0 is_stmt 0 discriminator 1
 711 0026 114B     	 ldr r3,.L47
 712 0028 B3F8FC21 	 ldrh r2,[r3,#508]
 713 002c FB88     	 ldrh r3,[r7,#6]
 714 002e 1340     	 ands r3,r3,r2
 715 0030 9BB2     	 uxth r3,r3
 716 0032 002B     	 cmp r3,#0
 717 0034 EED1     	 bne .L44
 718              	.L43:
 354:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 355:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 719              	 .loc 1 355 0 is_stmt 1
 720 0036 0D4B     	 ldr r3,.L47
 721 0038 B3F8FC21 	 ldrh r2,[r3,#508]
 722 003c FB88     	 ldrh r3,[r7,#6]
 723 003e 1340     	 ands r3,r3,r2
 724 0040 9BB2     	 uxth r3,r3
 725 0042 002B     	 cmp r3,#0
 726 0044 0AD1     	 bne .L45
 356:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 357:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 727              	 .loc 1 357 0
 728 0046 094B     	 ldr r3,.L47
 729 0048 B3F8FC21 	 ldrh r2,[r3,#508]
 730 004c FB88     	 ldrh r3,[r7,#6]
 731 004e 1343     	 orrs r3,r3,r2
 732 0050 9AB2     	 uxth r2,r3
 733 0052 064B     	 ldr r3,.L47
 734 0054 A3F8FC21 	 strh r2,[r3,#508]
 358:../Libraries/XMCLib/src/xmc_usbd.c ****     result=i;
 735              	 .loc 1 358 0
 736 0058 7B79     	 ldrb r3,[r7,#5]
 737 005a 3B71     	 strb r3,[r7,#4]
 738              	.L45:
 359:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 360:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 739              	 .loc 1 360 0
 740 005c 3B79     	 ldrb r3,[r7,#4]
 361:../Libraries/XMCLib/src/xmc_usbd.c **** }
 741              	 .loc 1 361 0
 742 005e 1846     	 mov r0,r3
 743 0060 0C37     	 adds r7,r7,#12
 744              	.LCFI33:
 745              	 .cfi_def_cfa_offset 4
 746 0062 BD46     	 mov sp,r7
 747              	.LCFI34:
 748              	 .cfi_def_cfa_register 13
 749              	 
 750 0064 5DF8047B 	 ldr r7,[sp],#4
 751              	.LCFI35:
 752              	 .cfi_restore 7
 753              	 .cfi_def_cfa_offset 0
 754 0068 7047     	 bx lr
 755              	.L48:
 756 006a 00BF     	 .align 2
 757              	.L47:
 758 006c 00000000 	 .word xmc_device
 759              	 .cfi_endproc
 760              	.LFE156:
 762              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 763              	 .align 2
 764              	 .thumb
 765              	 .thumb_func
 767              	XMC_USBD_lUnassignFifo:
 768              	.LFB157:
 362:../Libraries/XMCLib/src/xmc_usbd.c **** 
 363:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 364:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 365:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 366:../Libraries/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 367:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 368:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 369:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 370:../Libraries/XMCLib/src/xmc_usbd.c **** {
 769              	 .loc 1 370 0
 770              	 .cfi_startproc
 771              	 
 772              	 
 773              	 
 774 0000 80B4     	 push {r7}
 775              	.LCFI36:
 776              	 .cfi_def_cfa_offset 4
 777              	 .cfi_offset 7,-4
 778 0002 83B0     	 sub sp,sp,#12
 779              	.LCFI37:
 780              	 .cfi_def_cfa_offset 16
 781 0004 00AF     	 add r7,sp,#0
 782              	.LCFI38:
 783              	 .cfi_def_cfa_register 7
 784 0006 0346     	 mov r3,r0
 785 0008 FB71     	 strb r3,[r7,#7]
 371:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 786              	 .loc 1 371 0
 787 000a 0A4B     	 ldr r3,.L50
 788 000c B3F8FC21 	 ldrh r2,[r3,#508]
 789 0010 FB79     	 ldrb r3,[r7,#7]
 790 0012 0121     	 movs r1,#1
 791 0014 01FA03F3 	 lsl r3,r1,r3
 792 0018 9BB2     	 uxth r3,r3
 793 001a DB43     	 mvns r3,r3
 794 001c 9BB2     	 uxth r3,r3
 795 001e 1340     	 ands r3,r3,r2
 796 0020 9AB2     	 uxth r2,r3
 797 0022 044B     	 ldr r3,.L50
 798 0024 A3F8FC21 	 strh r2,[r3,#508]
 372:../Libraries/XMCLib/src/xmc_usbd.c **** }
 799              	 .loc 1 372 0
 800 0028 0C37     	 adds r7,r7,#12
 801              	.LCFI39:
 802              	 .cfi_def_cfa_offset 4
 803 002a BD46     	 mov sp,r7
 804              	.LCFI40:
 805              	 .cfi_def_cfa_register 13
 806              	 
 807 002c 5DF8047B 	 ldr r7,[sp],#4
 808              	.LCFI41:
 809              	 .cfi_restore 7
 810              	 .cfi_def_cfa_offset 0
 811 0030 7047     	 bx lr
 812              	.L51:
 813 0032 00BF     	 .align 2
 814              	.L50:
 815 0034 00000000 	 .word xmc_device
 816              	 .cfi_endproc
 817              	.LFE157:
 819              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 820              	 .align 2
 821              	 .thumb
 822              	 .thumb_func
 824              	XMC_USBD_lStartReadXfer:
 825              	.LFB158:
 373:../Libraries/XMCLib/src/xmc_usbd.c **** 
 374:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 375:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 376:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 377:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 378:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 379:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 380:../Libraries/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 381:../Libraries/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 382:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 383:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 384:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 385:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 386:../Libraries/XMCLib/src/xmc_usbd.c **** {
 826              	 .loc 1 386 0
 827              	 .cfi_startproc
 828              	 
 829              	 
 830              	 
 831 0000 80B4     	 push {r7}
 832              	.LCFI42:
 833              	 .cfi_def_cfa_offset 4
 834              	 .cfi_offset 7,-4
 835 0002 87B0     	 sub sp,sp,#28
 836              	.LCFI43:
 837              	 .cfi_def_cfa_offset 32
 838 0004 00AF     	 add r7,sp,#0
 839              	.LCFI44:
 840              	 .cfi_def_cfa_register 7
 841 0006 7860     	 str r0,[r7,#4]
 387:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 388:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 389:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 390:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 842              	 .loc 1 390 0
 843 0008 0023     	 movs r3,#0
 844 000a 3B61     	 str r3,[r7,#16]
 391:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 845              	 .loc 1 391 0
 846 000c 7B68     	 ldr r3,[r7,#4]
 847 000e 1A6B     	 ldr r2,[r3,#48]
 848 0010 7B68     	 ldr r3,[r7,#4]
 849 0012 9B6A     	 ldr r3,[r3,#40]
 850 0014 D31A     	 subs r3,r2,r3
 851 0016 7A68     	 ldr r2,[r7,#4]
 852 0018 9268     	 ldr r2,[r2,#8]
 853 001a C2F31202 	 ubfx r2,r2,#0,#19
 854 001e 9342     	 cmp r3,r2
 855 0020 09D9     	 bls .L53
 392:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 393:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 856              	 .loc 1 393 0
 857 0022 7B68     	 ldr r3,[r7,#4]
 858 0024 9B6A     	 ldr r3,[r3,#40]
 859 0026 7A68     	 ldr r2,[r7,#4]
 860 0028 9268     	 ldr r2,[r2,#8]
 861 002a C2F31202 	 ubfx r2,r2,#0,#19
 862 002e 1A44     	 add r2,r2,r3
 863 0030 7B68     	 ldr r3,[r7,#4]
 864 0032 9A62     	 str r2,[r3,#40]
 865 0034 03E0     	 b .L54
 866              	.L53:
 394:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 395:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 396:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 397:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 867              	 .loc 1 397 0
 868 0036 7B68     	 ldr r3,[r7,#4]
 869 0038 1A6B     	 ldr r2,[r3,#48]
 870 003a 7B68     	 ldr r3,[r7,#4]
 871 003c 9A62     	 str r2,[r3,#40]
 872              	.L54:
 398:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 399:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 873              	 .loc 1 399 0
 874 003e 7B68     	 ldr r3,[r7,#4]
 875 0040 1B78     	 ldrb r3,[r3]
 876 0042 03F00F03 	 and r3,r3,#15
 877 0046 DBB2     	 uxtb r3,r3
 878 0048 002B     	 cmp r3,#0
 879 004a 19D1     	 bne .L55
 880              	.LBB2:
 400:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 401:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 402:../Libraries/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 403:../Libraries/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 881              	 .loc 1 403 0
 882 004c 07F11003 	 add r3,r7,#16
 883 0050 7B61     	 str r3,[r7,#20]
 404:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 884              	 .loc 1 404 0
 885 0052 7A69     	 ldr r2,[r7,#20]
 886 0054 9378     	 ldrb r3,[r2,#2]
 887 0056 0121     	 movs r1,#1
 888 0058 61F3C403 	 bfi r3,r1,#3,#2
 889 005c 9370     	 strb r3,[r2,#2]
 405:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 890              	 .loc 1 405 0
 891 005e 7A69     	 ldr r2,[r7,#20]
 892 0060 D378     	 ldrb r3,[r2,#3]
 893 0062 43F06003 	 orr r3,r3,#96
 894 0066 D370     	 strb r3,[r2,#3]
 406:../Libraries/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 895              	 .loc 1 406 0
 896 0068 7B68     	 ldr r3,[r7,#4]
 897 006a 1B6B     	 ldr r3,[r3,#48]
 898 006c DBB2     	 uxtb r3,r3
 899 006e 03F07F03 	 and r3,r3,#127
 900 0072 D9B2     	 uxtb r1,r3
 901 0074 7A69     	 ldr r2,[r7,#20]
 902 0076 1378     	 ldrb r3,[r2]
 903 0078 61F30603 	 bfi r3,r1,#0,#7
 904 007c 1370     	 strb r3,[r2]
 905              	.LBE2:
 906 007e 33E0     	 b .L56
 907              	.L55:
 407:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 408:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 409:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 410:../Libraries/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 411:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 908              	 .loc 1 411 0
 909 0080 7B68     	 ldr r3,[r7,#4]
 910 0082 9B6A     	 ldr r3,[r3,#40]
 911 0084 002B     	 cmp r3,#0
 912 0086 09D1     	 bne .L57
 412:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 413:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 913              	 .loc 1 413 0
 914 0088 3B69     	 ldr r3,[r7,#16]
 915 008a 6FF31203 	 bfc r3,#0,#19
 916 008e 3B61     	 str r3,[r7,#16]
 414:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 917              	 .loc 1 414 0
 918 0090 7B8A     	 ldrh r3,[r7,#18]
 919 0092 0122     	 movs r2,#1
 920 0094 62F3CC03 	 bfi r3,r2,#3,#10
 921 0098 7B82     	 strh r3,[r7,#18]
 922 009a 25E0     	 b .L56
 923              	.L57:
 415:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 416:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 417:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 418:../Libraries/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 419:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 924              	 .loc 1 419 0
 925 009c 7B68     	 ldr r3,[r7,#4]
 926 009e 9A6A     	 ldr r2,[r3,#40]
 927 00a0 7B68     	 ldr r3,[r7,#4]
 928 00a2 DB6A     	 ldr r3,[r3,#44]
 929 00a4 D31A     	 subs r3,r2,r3
 930 00a6 7A68     	 ldr r2,[r7,#4]
 931 00a8 5268     	 ldr r2,[r2,#4]
 932 00aa C2F3C622 	 ubfx r2,r2,#11,#7
 933 00ae D2B2     	 uxtb r2,r2
 934 00b0 1344     	 add r3,r3,r2
 935 00b2 013B     	 subs r3,r3,#1
 936 00b4 7A68     	 ldr r2,[r7,#4]
 937 00b6 5268     	 ldr r2,[r2,#4]
 938 00b8 C2F3C622 	 ubfx r2,r2,#11,#7
 939 00bc D2B2     	 uxtb r2,r2
 940 00be B3FBF2F3 	 udiv r3,r3,r2
 941 00c2 9BB2     	 uxth r3,r3
 942 00c4 C3F30903 	 ubfx r3,r3,#0,#10
 943 00c8 9AB2     	 uxth r2,r3
 944 00ca 7B8A     	 ldrh r3,[r7,#18]
 945 00cc 62F3CC03 	 bfi r3,r2,#3,#10
 946 00d0 7B82     	 strh r3,[r7,#18]
 420:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 947              	 .loc 1 420 0
 948 00d2 7B68     	 ldr r3,[r7,#4]
 949 00d4 9A6A     	 ldr r2,[r3,#40]
 950 00d6 7B68     	 ldr r3,[r7,#4]
 951 00d8 DB6A     	 ldr r3,[r3,#44]
 952 00da D31A     	 subs r3,r2,r3
 953 00dc C3F31202 	 ubfx r2,r3,#0,#19
 954 00e0 3B69     	 ldr r3,[r7,#16]
 955 00e2 62F31203 	 bfi r3,r2,#0,#19
 956 00e6 3B61     	 str r3,[r7,#16]
 957              	.L56:
 421:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 422:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 423:../Libraries/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 958              	 .loc 1 423 0
 959 00e8 214B     	 ldr r3,.L59
 960 00ea 1B68     	 ldr r3,[r3]
 961 00ec 5B7B     	 ldrb r3,[r3,#13]
 962 00ee 002B     	 cmp r3,#0
 963 00f0 0CD1     	 bne .L58
 424:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 425:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 426:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 964              	 .loc 1 426 0
 965 00f2 7B68     	 ldr r3,[r7,#4]
 966 00f4 1B78     	 ldrb r3,[r3]
 967 00f6 C3F30303 	 ubfx r3,r3,#0,#4
 968 00fa DBB2     	 uxtb r3,r3
 969 00fc 1D4A     	 ldr r2,.L59+4
 970 00fe 7033     	 adds r3,r3,#112
 971 0100 9B00     	 lsls r3,r3,#2
 972 0102 1344     	 add r3,r3,r2
 973 0104 5B68     	 ldr r3,[r3,#4]
 974 0106 7A68     	 ldr r2,[r7,#4]
 975 0108 526A     	 ldr r2,[r2,#36]
 976 010a 5A61     	 str r2,[r3,#20]
 977              	.L58:
 427:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 428:../Libraries/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 429:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 978              	 .loc 1 429 0
 979 010c 7B68     	 ldr r3,[r7,#4]
 980 010e 1B78     	 ldrb r3,[r3]
 981 0110 C3F30303 	 ubfx r3,r3,#0,#4
 982 0114 DBB2     	 uxtb r3,r3
 983 0116 174A     	 ldr r2,.L59+4
 984 0118 7033     	 adds r3,r3,#112
 985 011a 9B00     	 lsls r3,r3,#2
 986 011c 1344     	 add r3,r3,r2
 987 011e 5B68     	 ldr r3,[r3,#4]
 988 0120 3A69     	 ldr r2,[r7,#16]
 989 0122 1A61     	 str r2,[r3,#16]
 430:../Libraries/XMCLib/src/xmc_usbd.c ****  
 431:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 990              	 .loc 1 431 0
 991 0124 7B68     	 ldr r3,[r7,#4]
 992 0126 1B78     	 ldrb r3,[r3]
 993 0128 C3F30303 	 ubfx r3,r3,#0,#4
 994 012c DBB2     	 uxtb r3,r3
 995 012e 114A     	 ldr r2,.L59+4
 996 0130 7033     	 adds r3,r3,#112
 997 0132 9B00     	 lsls r3,r3,#2
 998 0134 1344     	 add r3,r3,r2
 999 0136 5B68     	 ldr r3,[r3,#4]
 1000 0138 1B68     	 ldr r3,[r3]
 1001 013a FB60     	 str r3,[r7,#12]
 432:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1002              	 .loc 1 432 0
 1003 013c FB7B     	 ldrb r3,[r7,#15]
 1004 013e 43F00403 	 orr r3,r3,#4
 1005 0142 FB73     	 strb r3,[r7,#15]
 433:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 1006              	 .loc 1 433 0
 1007 0144 FB7B     	 ldrb r3,[r7,#15]
 1008 0146 43F08003 	 orr r3,r3,#128
 1009 014a FB73     	 strb r3,[r7,#15]
 434:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1010              	 .loc 1 434 0
 1011 014c 7B68     	 ldr r3,[r7,#4]
 1012 014e 1B78     	 ldrb r3,[r3]
 1013 0150 C3F30303 	 ubfx r3,r3,#0,#4
 1014 0154 DBB2     	 uxtb r3,r3
 1015 0156 074A     	 ldr r2,.L59+4
 1016 0158 7033     	 adds r3,r3,#112
 1017 015a 9B00     	 lsls r3,r3,#2
 1018 015c 1344     	 add r3,r3,r2
 1019 015e 5B68     	 ldr r3,[r3,#4]
 1020 0160 FA68     	 ldr r2,[r7,#12]
 1021 0162 1A60     	 str r2,[r3]
 435:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1022              	 .loc 1 435 0
 1023 0164 1C37     	 adds r7,r7,#28
 1024              	.LCFI45:
 1025              	 .cfi_def_cfa_offset 4
 1026 0166 BD46     	 mov sp,r7
 1027              	.LCFI46:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 0168 5DF8047B 	 ldr r7,[sp],#4
 1031              	.LCFI47:
 1032              	 .cfi_restore 7
 1033              	 .cfi_def_cfa_offset 0
 1034 016c 7047     	 bx lr
 1035              	.L60:
 1036 016e 00BF     	 .align 2
 1037              	.L59:
 1038 0170 00000000 	 .word usbd_init
 1039 0174 00000000 	 .word xmc_device
 1040              	 .cfi_endproc
 1041              	.LFE158:
 1043              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 1044              	 .align 2
 1045              	 .thumb
 1046              	 .thumb_func
 1048              	XMC_USBD_lStartWriteXfer:
 1049              	.LFB159:
 436:../Libraries/XMCLib/src/xmc_usbd.c **** 
 437:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 438:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 439:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 440:../Libraries/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 441:../Libraries/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 442:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 443:../Libraries/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 444:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 445:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 446:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1050              	 .loc 1 446 0
 1051              	 .cfi_startproc
 1052              	 
 1053              	 
 1054              	 
 1055 0000 80B4     	 push {r7}
 1056              	.LCFI48:
 1057              	 .cfi_def_cfa_offset 4
 1058              	 .cfi_offset 7,-4
 1059 0002 85B0     	 sub sp,sp,#20
 1060              	.LCFI49:
 1061              	 .cfi_def_cfa_offset 24
 1062 0004 00AF     	 add r7,sp,#0
 1063              	.LCFI50:
 1064              	 .cfi_def_cfa_register 7
 1065 0006 7860     	 str r0,[r7,#4]
 447:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 448:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 449:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 450:../Libraries/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 1066              	 .loc 1 450 0
 1067 0008 0023     	 movs r3,#0
 1068 000a FB60     	 str r3,[r7,#12]
 451:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1069              	 .loc 1 451 0
 1070 000c 7B68     	 ldr r3,[r7,#4]
 1071 000e 1B78     	 ldrb r3,[r3]
 1072 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1073 0014 DBB2     	 uxtb r3,r3
 1074 0016 5D4A     	 ldr r2,.L69
 1075 0018 6A33     	 adds r3,r3,#106
 1076 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1077 001e 1B68     	 ldr r3,[r3]
 1078 0020 BB60     	 str r3,[r7,#8]
 452:../Libraries/XMCLib/src/xmc_usbd.c **** 
 453:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1079              	 .loc 1 453 0
 1080 0022 7B68     	 ldr r3,[r7,#4]
 1081 0024 1A6B     	 ldr r2,[r3,#48]
 1082 0026 7B68     	 ldr r3,[r7,#4]
 1083 0028 9B6A     	 ldr r3,[r3,#40]
 1084 002a D31A     	 subs r3,r2,r3
 1085 002c 7A68     	 ldr r2,[r7,#4]
 1086 002e 9268     	 ldr r2,[r2,#8]
 1087 0030 C2F31202 	 ubfx r2,r2,#0,#19
 1088 0034 9342     	 cmp r3,r2
 1089 0036 04D2     	 bcs .L62
 454:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 455:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1090              	 .loc 1 455 0
 1091 0038 7B68     	 ldr r3,[r7,#4]
 1092 003a 1A6B     	 ldr r2,[r3,#48]
 1093 003c 7B68     	 ldr r3,[r7,#4]
 1094 003e 9A62     	 str r2,[r3,#40]
 1095 0040 08E0     	 b .L63
 1096              	.L62:
 456:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 457:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 458:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 459:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1097              	 .loc 1 459 0
 1098 0042 7B68     	 ldr r3,[r7,#4]
 1099 0044 9B6A     	 ldr r3,[r3,#40]
 1100 0046 7A68     	 ldr r2,[r7,#4]
 1101 0048 9268     	 ldr r2,[r2,#8]
 1102 004a C2F31202 	 ubfx r2,r2,#0,#19
 1103 004e 1A44     	 add r2,r2,r3
 1104 0050 7B68     	 ldr r3,[r7,#4]
 1105 0052 9A62     	 str r2,[r3,#40]
 1106              	.L63:
 460:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 461:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1107              	 .loc 1 461 0
 1108 0054 7B68     	 ldr r3,[r7,#4]
 1109 0056 9B6A     	 ldr r3,[r3,#40]
 1110 0058 002B     	 cmp r3,#0
 1111 005a 09D1     	 bne .L64
 462:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 463:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1112              	 .loc 1 463 0
 1113 005c FB68     	 ldr r3,[r7,#12]
 1114 005e 6FF31203 	 bfc r3,#0,#19
 1115 0062 FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1116              	 .loc 1 464 0
 1117 0064 FB89     	 ldrh r3,[r7,#14]
 1118 0066 0122     	 movs r2,#1
 1119 0068 62F3CC03 	 bfi r3,r2,#3,#10
 1120 006c FB81     	 strh r3,[r7,#14]
 1121 006e 6AE0     	 b .L65
 1122              	.L64:
 465:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 466:../Libraries/XMCLib/src/xmc_usbd.c ****   else
 467:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 468:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1123              	 .loc 1 468 0
 1124 0070 7B68     	 ldr r3,[r7,#4]
 1125 0072 1B78     	 ldrb r3,[r3]
 1126 0074 03F00F03 	 and r3,r3,#15
 1127 0078 DBB2     	 uxtb r3,r3
 1128 007a 002B     	 cmp r3,#0
 1129 007c 10D1     	 bne .L66
 469:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 470:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1130              	 .loc 1 470 0
 1131 007e FB89     	 ldrh r3,[r7,#14]
 1132 0080 0122     	 movs r2,#1
 1133 0082 62F3CC03 	 bfi r3,r2,#3,#10
 1134 0086 FB81     	 strh r3,[r7,#14]
 471:../Libraries/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 472:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1135              	 .loc 1 472 0
 1136 0088 7B68     	 ldr r3,[r7,#4]
 1137 008a 9A6A     	 ldr r2,[r3,#40]
 1138 008c 7B68     	 ldr r3,[r7,#4]
 1139 008e DB6A     	 ldr r3,[r3,#44]
 1140 0090 D31A     	 subs r3,r2,r3
 1141 0092 C3F31202 	 ubfx r2,r3,#0,#19
 1142 0096 FB68     	 ldr r3,[r7,#12]
 1143 0098 62F31203 	 bfi r3,r2,#0,#19
 1144 009c FB60     	 str r3,[r7,#12]
 1145 009e 2BE0     	 b .L67
 1146              	.L66:
 473:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 474:../Libraries/XMCLib/src/xmc_usbd.c ****     else
 475:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 476:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 1147              	 .loc 1 476 0
 1148 00a0 7B68     	 ldr r3,[r7,#4]
 1149 00a2 9A6A     	 ldr r2,[r3,#40]
 1150 00a4 7B68     	 ldr r3,[r7,#4]
 1151 00a6 DB6A     	 ldr r3,[r3,#44]
 1152 00a8 D31A     	 subs r3,r2,r3
 1153 00aa C3F31202 	 ubfx r2,r3,#0,#19
 1154 00ae FB68     	 ldr r3,[r7,#12]
 1155 00b0 62F31203 	 bfi r3,r2,#0,#19
 1156 00b4 FB60     	 str r3,[r7,#12]
 477:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1157              	 .loc 1 477 0
 1158 00b6 7B68     	 ldr r3,[r7,#4]
 1159 00b8 9B6A     	 ldr r3,[r3,#40]
 1160 00ba 9AB2     	 uxth r2,r3
 1161 00bc 7B68     	 ldr r3,[r7,#4]
 1162 00be DB6A     	 ldr r3,[r3,#44]
 1163 00c0 9BB2     	 uxth r3,r3
 1164 00c2 D31A     	 subs r3,r2,r3
 1165 00c4 9BB2     	 uxth r3,r3
 1166 00c6 1A46     	 mov r2,r3
 1167 00c8 7B68     	 ldr r3,[r7,#4]
 1168 00ca 5B68     	 ldr r3,[r3,#4]
 1169 00cc C3F3C623 	 ubfx r3,r3,#11,#7
 1170 00d0 DBB2     	 uxtb r3,r3
 1171 00d2 9BB2     	 uxth r3,r3
 1172 00d4 013B     	 subs r3,r3,#1
 1173 00d6 9BB2     	 uxth r3,r3
 1174 00d8 1344     	 add r3,r3,r2
 478:../Libraries/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 1175              	 .loc 1 478 0
 1176 00da 7A68     	 ldr r2,[r7,#4]
 1177 00dc 5268     	 ldr r2,[r2,#4]
 1178 00de C2F3C622 	 ubfx r2,r2,#11,#7
 1179 00e2 D2B2     	 uxtb r2,r2
 477:../Libraries/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1180              	 .loc 1 477 0
 1181 00e4 93FBF2F3 	 sdiv r3,r3,r2
 1182 00e8 9BB2     	 uxth r3,r3
 1183 00ea C3F30903 	 ubfx r3,r3,#0,#10
 1184 00ee 9AB2     	 uxth r2,r3
 1185 00f0 FB89     	 ldrh r3,[r7,#14]
 1186 00f2 62F3CC03 	 bfi r3,r2,#3,#10
 1187 00f6 FB81     	 strh r3,[r7,#14]
 1188              	.L67:
 479:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 480:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1189              	 .loc 1 480 0
 1190 00f8 254B     	 ldr r3,.L69+4
 1191 00fa 1B68     	 ldr r3,[r3]
 1192 00fc 5B7B     	 ldrb r3,[r3,#13]
 1193 00fe 002B     	 cmp r3,#0
 1194 0100 0BD1     	 bne .L68
 481:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 482:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 483:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1195              	 .loc 1 483 0
 1196 0102 7B68     	 ldr r3,[r7,#4]
 1197 0104 1B78     	 ldrb r3,[r3]
 1198 0106 C3F30303 	 ubfx r3,r3,#0,#4
 1199 010a DBB2     	 uxtb r3,r3
 1200 010c 1F4A     	 ldr r2,.L69
 1201 010e 6A33     	 adds r3,r3,#106
 1202 0110 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1203 0114 7A68     	 ldr r2,[r7,#4]
 1204 0116 526A     	 ldr r2,[r2,#36]
 1205 0118 5A61     	 str r2,[r3,#20]
 1206              	.L68:
 484:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 485:../Libraries/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1207              	 .loc 1 485 0
 1208 011a 1D4B     	 ldr r3,.L69+4
 1209 011c 1B68     	 ldr r3,[r3]
 1210 011e 5B7B     	 ldrb r3,[r3,#13]
 1211 0120 012B     	 cmp r3,#1
 1212 0122 10D1     	 bne .L65
 486:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 487:../Libraries/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 488:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 1213              	 .loc 1 488 0
 1214 0124 194B     	 ldr r3,.L69
 1215 0126 D3F8A431 	 ldr r3,[r3,#420]
 1216 012a 184A     	 ldr r2,.L69
 1217 012c D2F8A421 	 ldr r2,[r2,#420]
 1218 0130 516B     	 ldr r1,[r2,#52]
 1219 0132 7A68     	 ldr r2,[r7,#4]
 1220 0134 1278     	 ldrb r2,[r2]
 1221 0136 C2F30302 	 ubfx r2,r2,#0,#4
 1222 013a D2B2     	 uxtb r2,r2
 1223 013c 1046     	 mov r0,r2
 1224 013e 0122     	 movs r2,#1
 1225 0140 8240     	 lsls r2,r2,r0
 1226 0142 0A43     	 orrs r2,r2,r1
 1227 0144 5A63     	 str r2,[r3,#52]
 1228              	.L65:
 489:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 490:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 491:../Libraries/XMCLib/src/xmc_usbd.c **** 
 492:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 493:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1229              	 .loc 1 493 0
 1230 0146 7B68     	 ldr r3,[r7,#4]
 1231 0148 1B78     	 ldrb r3,[r3]
 1232 014a C3F30303 	 ubfx r3,r3,#0,#4
 1233 014e DBB2     	 uxtb r3,r3
 1234 0150 0E4A     	 ldr r2,.L69
 1235 0152 6A33     	 adds r3,r3,#106
 1236 0154 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1237 0158 FA68     	 ldr r2,[r7,#12]
 1238 015a 1A61     	 str r2,[r3,#16]
 494:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1239              	 .loc 1 494 0
 1240 015c FB7A     	 ldrb r3,[r7,#11]
 1241 015e 43F08003 	 orr r3,r3,#128
 1242 0162 FB72     	 strb r3,[r7,#11]
 495:../Libraries/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1243              	 .loc 1 495 0
 1244 0164 FB7A     	 ldrb r3,[r7,#11]
 1245 0166 43F00403 	 orr r3,r3,#4
 1246 016a FB72     	 strb r3,[r7,#11]
 496:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1247              	 .loc 1 496 0
 1248 016c 7B68     	 ldr r3,[r7,#4]
 1249 016e 1B78     	 ldrb r3,[r3]
 1250 0170 C3F30303 	 ubfx r3,r3,#0,#4
 1251 0174 DBB2     	 uxtb r3,r3
 1252 0176 054A     	 ldr r2,.L69
 1253 0178 6A33     	 adds r3,r3,#106
 1254 017a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1255 017e BA68     	 ldr r2,[r7,#8]
 1256 0180 1A60     	 str r2,[r3]
 497:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1257              	 .loc 1 497 0
 1258 0182 1437     	 adds r7,r7,#20
 1259              	.LCFI51:
 1260              	 .cfi_def_cfa_offset 4
 1261 0184 BD46     	 mov sp,r7
 1262              	.LCFI52:
 1263              	 .cfi_def_cfa_register 13
 1264              	 
 1265 0186 5DF8047B 	 ldr r7,[sp],#4
 1266              	.LCFI53:
 1267              	 .cfi_restore 7
 1268              	 .cfi_def_cfa_offset 0
 1269 018a 7047     	 bx lr
 1270              	.L70:
 1271              	 .align 2
 1272              	.L69:
 1273 018c 00000000 	 .word xmc_device
 1274 0190 00000000 	 .word usbd_init
 1275              	 .cfi_endproc
 1276              	.LFE159:
 1278              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1279              	 .align 2
 1280              	 .thumb
 1281              	 .thumb_func
 1283              	XMC_USBD_lHandleUSBReset:
 1284              	.LFB160:
 498:../Libraries/XMCLib/src/xmc_usbd.c **** 
 499:../Libraries/XMCLib/src/xmc_usbd.c **** 
 500:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 501:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 502:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 503:../Libraries/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 504:../Libraries/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 505:../Libraries/XMCLib/src/xmc_usbd.c ****  * into the default state.
 506:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 507:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 508:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1285              	 .loc 1 508 0
 1286              	 .cfi_startproc
 1287              	 
 1288              	 
 1289 0000 80B5     	 push {r7,lr}
 1290              	.LCFI54:
 1291              	 .cfi_def_cfa_offset 8
 1292              	 .cfi_offset 7,-8
 1293              	 .cfi_offset 14,-4
 1294 0002 88B0     	 sub sp,sp,#32
 1295              	.LCFI55:
 1296              	 .cfi_def_cfa_offset 40
 1297 0004 00AF     	 add r7,sp,#0
 1298              	.LCFI56:
 1299              	 .cfi_def_cfa_register 7
 1300 0006 7860     	 str r0,[r7,#4]
 509:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 510:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 511:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 512:../Libraries/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 513:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 514:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 515:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 516:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 517:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1301              	 .loc 1 517 0
 1302 0008 4F4B     	 ldr r3,.L77
 1303 000a D3F8A431 	 ldr r3,[r3,#420]
 1304 000e 5B68     	 ldr r3,[r3,#4]
 1305 0010 7B61     	 str r3,[r7,#20]
 518:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1306              	 .loc 1 518 0
 1307 0012 3B7D     	 ldrb r3,[r7,#20]
 1308 0014 43F00103 	 orr r3,r3,#1
 1309 0018 3B75     	 strb r3,[r7,#20]
 519:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1310              	 .loc 1 519 0
 1311 001a 4B4B     	 ldr r3,.L77
 1312 001c D3F8A431 	 ldr r3,[r3,#420]
 1313 0020 7A69     	 ldr r2,[r7,#20]
 1314 0022 5A60     	 str r2,[r3,#4]
 520:../Libraries/XMCLib/src/xmc_usbd.c **** 
 521:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 1315              	 .loc 1 522 0
 1316 0024 0023     	 movs r3,#0
 1317 0026 FB61     	 str r3,[r7,#28]
 1318 0028 1AE0     	 b .L72
 1319              	.L73:
 523:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 524:../Libraries/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1320              	 .loc 1 524 0 discriminator 3
 1321 002a 474A     	 ldr r2,.L77
 1322 002c FB69     	 ldr r3,[r7,#28]
 1323 002e 7033     	 adds r3,r3,#112
 1324 0030 9B00     	 lsls r3,r3,#2
 1325 0032 1344     	 add r3,r3,r2
 1326 0034 5B68     	 ldr r3,[r3,#4]
 1327 0036 1B68     	 ldr r3,[r3]
 1328 0038 BB61     	 str r3,[r7,#24]
 525:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 1329              	 .loc 1 525 0 discriminator 3
 1330 003a FB7E     	 ldrb r3,[r7,#27]
 1331 003c 43F00803 	 orr r3,r3,#8
 1332 0040 FB76     	 strb r3,[r7,#27]
 526:../Libraries/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 1333              	 .loc 1 526 0 discriminator 3
 1334 0042 BB7E     	 ldrb r3,[r7,#26]
 1335 0044 6FF34513 	 bfc r3,#5,#1
 1336 0048 BB76     	 strb r3,[r7,#26]
 527:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1337              	 .loc 1 527 0 discriminator 3
 1338 004a 3F4A     	 ldr r2,.L77
 1339 004c FB69     	 ldr r3,[r7,#28]
 1340 004e 7033     	 adds r3,r3,#112
 1341 0050 9B00     	 lsls r3,r3,#2
 1342 0052 1344     	 add r3,r3,r2
 1343 0054 5B68     	 ldr r3,[r3,#4]
 1344 0056 BA69     	 ldr r2,[r7,#24]
 1345 0058 1A60     	 str r2,[r3]
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1346              	 .loc 1 522 0 discriminator 3
 1347 005a FB69     	 ldr r3,[r7,#28]
 1348 005c 0133     	 adds r3,r3,#1
 1349 005e FB61     	 str r3,[r7,#28]
 1350              	.L72:
 522:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1351              	 .loc 1 522 0 is_stmt 0 discriminator 1
 1352 0060 FB69     	 ldr r3,[r7,#28]
 1353 0062 062B     	 cmp r3,#6
 1354 0064 E1D9     	 bls .L73
 528:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 529:../Libraries/XMCLib/src/xmc_usbd.c **** 
 530:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 531:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 532:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1355              	 .loc 1 532 0 is_stmt 1
 1356 0066 384B     	 ldr r3,.L77
 1357 0068 D3F8A031 	 ldr r3,[r3,#416]
 1358 006c 4022     	 movs r2,#64
 1359 006e 5A62     	 str r2,[r3,#36]
 533:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 534:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1360              	 .loc 1 534 0
 1361 0070 0023     	 movs r3,#0
 1362 0072 3B61     	 str r3,[r7,#16]
 535:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1363              	 .loc 1 535 0
 1364 0074 1023     	 movs r3,#16
 1365 0076 7B82     	 strh r3,[r7,#18]
 536:../Libraries/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1366              	 .loc 1 536 0
 1367 0078 4023     	 movs r3,#64
 1368 007a 3B82     	 strh r3,[r7,#16]
 537:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1369              	 .loc 1 537 0
 1370 007c 324B     	 ldr r3,.L77
 1371 007e D3F8A031 	 ldr r3,[r3,#416]
 1372 0082 3A69     	 ldr r2,[r7,#16]
 1373 0084 9A62     	 str r2,[r3,#40]
 538:../Libraries/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 1374              	 .loc 1 539 0
 1375 0086 0123     	 movs r3,#1
 1376 0088 FB61     	 str r3,[r7,#28]
 1377 008a 11E0     	 b .L74
 1378              	.L75:
 540:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 541:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 1379              	 .loc 1 541 0 discriminator 3
 1380 008c 2E4B     	 ldr r3,.L77
 1381 008e D3F8A011 	 ldr r1,[r3,#416]
 1382 0092 FB69     	 ldr r3,[r7,#28]
 1383 0094 013B     	 subs r3,r3,#1
 1384 0096 FA69     	 ldr r2,[r7,#28]
 1385 0098 0432     	 adds r2,r2,#4
 1386 009a 9201     	 lsls r2,r2,#6
 1387 009c 9208     	 lsrs r2,r2,#2
 1388 009e 42F48012 	 orr r2,r2,#1048576
 1389 00a2 4033     	 adds r3,r3,#64
 1390 00a4 9B00     	 lsls r3,r3,#2
 1391 00a6 0B44     	 add r3,r3,r1
 1392 00a8 5A60     	 str r2,[r3,#4]
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1393              	 .loc 1 539 0 discriminator 3
 1394 00aa FB69     	 ldr r3,[r7,#28]
 1395 00ac 0133     	 adds r3,r3,#1
 1396 00ae FB61     	 str r3,[r7,#28]
 1397              	.L74:
 539:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1398              	 .loc 1 539 0 is_stmt 0 discriminator 1
 1399 00b0 FB69     	 ldr r3,[r7,#28]
 1400 00b2 062B     	 cmp r3,#6
 1401 00b4 EAD9     	 bls .L75
 542:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 543:../Libraries/XMCLib/src/xmc_usbd.c **** 
 544:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 545:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1402              	 .loc 1 545 0 is_stmt 1
 1403 00b6 1020     	 movs r0,#16
 1404 00b8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 546:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1405              	 .loc 1 546 0
 1406 00bc 0020     	 movs r0,#0
 1407 00be FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 547:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1408              	 .loc 1 547 0
 1409 00c2 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 548:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 549:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 550:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1410              	 .loc 1 550 0
 1411 00c6 0023     	 movs r3,#0
 1412 00c8 FB60     	 str r3,[r7,#12]
 551:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1413              	 .loc 1 551 0
 1414 00ca 3B7B     	 ldrb r3,[r7,#12]
 1415 00cc 43F00103 	 orr r3,r3,#1
 1416 00d0 3B73     	 strb r3,[r7,#12]
 552:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1417              	 .loc 1 552 0
 1418 00d2 BB7B     	 ldrb r3,[r7,#14]
 1419 00d4 43F00103 	 orr r3,r3,#1
 1420 00d8 BB73     	 strb r3,[r7,#14]
 553:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1421              	 .loc 1 553 0
 1422 00da 1B4B     	 ldr r3,.L77
 1423 00dc D3F8A431 	 ldr r3,[r3,#420]
 1424 00e0 FA68     	 ldr r2,[r7,#12]
 1425 00e2 DA61     	 str r2,[r3,#28]
 554:../Libraries/XMCLib/src/xmc_usbd.c **** 
 555:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 556:../Libraries/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 557:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1426              	 .loc 1 557 0
 1427 00e4 0F20     	 movs r0,#15
 1428 00e6 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 558:../Libraries/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 559:../Libraries/XMCLib/src/xmc_usbd.c **** 
 560:../Libraries/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 561:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1429              	 .loc 1 561 0
 1430 00ea 0F20     	 movs r0,#15
 1431 00ec FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 562:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 563:../Libraries/XMCLib/src/xmc_usbd.c **** 
 564:../Libraries/XMCLib/src/xmc_usbd.c **** 
 565:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 566:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1432              	 .loc 1 566 0
 1433 00f0 154B     	 ldr r3,.L77
 1434 00f2 D3F8A431 	 ldr r3,[r3,#420]
 1435 00f6 1B68     	 ldr r3,[r3]
 1436 00f8 BB60     	 str r3,[r7,#8]
 567:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1437              	 .loc 1 567 0
 1438 00fa 3B89     	 ldrh r3,[r7,#8]
 1439 00fc 6FF30A13 	 bfc r3,#4,#7
 1440 0100 3B81     	 strh r3,[r7,#8]
 568:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1441              	 .loc 1 568 0
 1442 0102 114B     	 ldr r3,.L77
 1443 0104 D3F8A431 	 ldr r3,[r3,#420]
 1444 0108 BA68     	 ldr r2,[r7,#8]
 1445 010a 1A60     	 str r2,[r3]
 569:../Libraries/XMCLib/src/xmc_usbd.c **** 
 570:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1446              	 .loc 1 570 0
 1447 010c 7B68     	 ldr r3,[r7,#4]
 1448 010e 5B7B     	 ldrb r3,[r3,#13]
 1449 0110 012B     	 cmp r3,#1
 1450 0112 04D1     	 bne .L76
 571:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 572:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 573:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1451              	 .loc 1 573 0
 1452 0114 0C4B     	 ldr r3,.L77
 1453 0116 D3F8A431 	 ldr r3,[r3,#420]
 1454 011a 0022     	 movs r2,#0
 1455 011c 5A63     	 str r2,[r3,#52]
 1456              	.L76:
 574:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 575:../Libraries/XMCLib/src/xmc_usbd.c **** 
 576:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1457              	 .loc 1 576 0
 1458 011e 0A4B     	 ldr r3,.L77
 1459 0120 5A68     	 ldr r2,[r3,#4]
 1460 0122 22F01002 	 bic r2,r2,#16
 1461 0126 5A60     	 str r2,[r3,#4]
 577:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1462              	 .loc 1 577 0
 1463 0128 074B     	 ldr r3,.L77
 1464 012a 5A68     	 ldr r2,[r3,#4]
 1465 012c 22F00802 	 bic r2,r2,#8
 1466 0130 5A60     	 str r2,[r3,#4]
 578:../Libraries/XMCLib/src/xmc_usbd.c **** 
 579:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1467              	 .loc 1 579 0
 1468 0132 054B     	 ldr r3,.L77
 1469 0134 D3F80032 	 ldr r3,[r3,#512]
 1470 0138 0420     	 movs r0,#4
 1471 013a 9847     	 blx r3
 580:../Libraries/XMCLib/src/xmc_usbd.c **** 
 581:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 582:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1472              	 .loc 1 582 0
 1473 013c 0420     	 movs r0,#4
 1474 013e FFF7FEFF 	 bl XMC_USBD_ClearEvent
 583:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1475              	 .loc 1 583 0
 1476 0142 2037     	 adds r7,r7,#32
 1477              	.LCFI57:
 1478              	 .cfi_def_cfa_offset 8
 1479 0144 BD46     	 mov sp,r7
 1480              	.LCFI58:
 1481              	 .cfi_def_cfa_register 13
 1482              	 
 1483 0146 80BD     	 pop {r7,pc}
 1484              	.L78:
 1485              	 .align 2
 1486              	.L77:
 1487 0148 00000000 	 .word xmc_device
 1488              	 .cfi_endproc
 1489              	.LFE160:
 1491              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1492              	 .align 2
 1493              	 .thumb
 1494              	 .thumb_func
 1496              	XMC_USBD_lHandleOTGInt:
 1497              	.LFB161:
 584:../Libraries/XMCLib/src/xmc_usbd.c **** 
 585:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 586:../Libraries/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 587:../Libraries/XMCLib/src/xmc_usbd.c **** *
 588:../Libraries/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 589:../Libraries/XMCLib/src/xmc_usbd.c **** */
 590:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 591:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1498              	 .loc 1 591 0
 1499              	 .cfi_startproc
 1500              	 
 1501              	 
 1502 0000 80B5     	 push {r7,lr}
 1503              	.LCFI59:
 1504              	 .cfi_def_cfa_offset 8
 1505              	 .cfi_offset 7,-8
 1506              	 .cfi_offset 14,-4
 1507 0002 82B0     	 sub sp,sp,#8
 1508              	.LCFI60:
 1509              	 .cfi_def_cfa_offset 16
 1510 0004 00AF     	 add r7,sp,#0
 1511              	.LCFI61:
 1512              	 .cfi_def_cfa_register 7
 592:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 593:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1513              	 .loc 1 593 0
 1514 0006 0F4B     	 ldr r3,.L81
 1515 0008 D3F8A031 	 ldr r3,[r3,#416]
 1516 000c 5B68     	 ldr r3,[r3,#4]
 1517 000e 7B60     	 str r3,[r7,#4]
 594:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1518              	 .loc 1 594 0
 1519 0010 3B79     	 ldrb r3,[r7,#4]
 1520 0012 03F00403 	 and r3,r3,#4
 1521 0016 DBB2     	 uxtb r3,r3
 1522 0018 002B     	 cmp r3,#0
 1523 001a 0BD0     	 beq .L80
 595:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 596:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 1524              	 .loc 1 596 0
 1525 001c 094A     	 ldr r2,.L81
 1526 001e 92F8FE31 	 ldrb r3,[r2,#510]
 1527 0022 6FF38203 	 bfc r3,#2,#1
 1528 0026 82F8FE31 	 strb r3,[r2,#510]
 597:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1529              	 .loc 1 597 0
 1530 002a 064B     	 ldr r3,.L81
 1531 002c D3F80032 	 ldr r3,[r3,#512]
 1532 0030 0120     	 movs r0,#1
 1533 0032 9847     	 blx r3
 1534              	.L80:
 598:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 599:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1535              	 .loc 1 599 0
 1536 0034 7B68     	 ldr r3,[r7,#4]
 1537 0036 1846     	 mov r0,r3
 1538 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 600:../Libraries/XMCLib/src/xmc_usbd.c **** 
 601:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1539              	 .loc 1 601 0
 1540 003c 0837     	 adds r7,r7,#8
 1541              	.LCFI62:
 1542              	 .cfi_def_cfa_offset 8
 1543 003e BD46     	 mov sp,r7
 1544              	.LCFI63:
 1545              	 .cfi_def_cfa_register 13
 1546              	 
 1547 0040 80BD     	 pop {r7,pc}
 1548              	.L82:
 1549 0042 00BF     	 .align 2
 1550              	.L81:
 1551 0044 00000000 	 .word xmc_device
 1552              	 .cfi_endproc
 1553              	.LFE161:
 1555              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1556              	 .align 2
 1557              	 .thumb
 1558              	 .thumb_func
 1560              	XMC_USBD_lHandleEnumDone:
 1561              	.LFB162:
 602:../Libraries/XMCLib/src/xmc_usbd.c **** 
 603:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 604:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 605:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 606:../Libraries/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 607:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 608:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 609:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1562              	 .loc 1 609 0
 1563              	 .cfi_startproc
 1564              	 
 1565              	 
 1566 0000 80B5     	 push {r7,lr}
 1567              	.LCFI64:
 1568              	 .cfi_def_cfa_offset 8
 1569              	 .cfi_offset 7,-8
 1570              	 .cfi_offset 14,-4
 1571 0002 82B0     	 sub sp,sp,#8
 1572              	.LCFI65:
 1573              	 .cfi_def_cfa_offset 16
 1574 0004 00AF     	 add r7,sp,#0
 1575              	.LCFI66:
 1576              	 .cfi_def_cfa_register 7
 610:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 611:../Libraries/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 612:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 613:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 614:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 615:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 1577              	 .loc 1 615 0
 1578 0006 1B4B     	 ldr r3,.L84
 1579 0008 D3F8A831 	 ldr r3,[r3,#424]
 1580 000c 1B68     	 ldr r3,[r3]
 1581 000e 7B60     	 str r3,[r7,#4]
 616:../Libraries/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1582              	 .loc 1 616 0
 1583 0010 BB88     	 ldrh r3,[r7,#4]
 1584 0012 6FF30A03 	 bfc r3,#0,#11
 1585 0016 BB80     	 strh r3,[r7,#4]
 617:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1586              	 .loc 1 617 0
 1587 0018 164B     	 ldr r3,.L84
 1588 001a D3F8A831 	 ldr r3,[r3,#424]
 1589 001e 7A68     	 ldr r2,[r7,#4]
 1590 0020 1A60     	 str r2,[r3]
 618:../Libraries/XMCLib/src/xmc_usbd.c **** 
 619:../Libraries/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 620:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1591              	 .loc 1 620 0
 1592 0022 144A     	 ldr r2,.L84
 1593 0024 92F8FE31 	 ldrb r3,[r2,#510]
 1594 0028 43F00103 	 orr r3,r3,#1
 1595 002c 82F8FE31 	 strb r3,[r2,#510]
 621:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1596              	 .loc 1 621 0
 1597 0030 104A     	 ldr r2,.L84
 1598 0032 92F8FE31 	 ldrb r3,[r2,#510]
 1599 0036 43F00403 	 orr r3,r3,#4
 1600 003a 82F8FE31 	 strb r3,[r2,#510]
 622:../Libraries/XMCLib/src/xmc_usbd.c **** 
 623:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1601              	 .loc 1 623 0
 1602 003e 0D4B     	 ldr r3,.L84
 1603 0040 D3F80032 	 ldr r3,[r3,#512]
 1604 0044 0220     	 movs r0,#2
 1605 0046 9847     	 blx r3
 624:../Libraries/XMCLib/src/xmc_usbd.c **** 
 625:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 626:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1606              	 .loc 1 626 0
 1607 0048 0A4B     	 ldr r3,.L84
 1608 004a D3F8A031 	 ldr r3,[r3,#416]
 1609 004e DB68     	 ldr r3,[r3,#12]
 1610 0050 3B60     	 str r3,[r7]
 627:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1611              	 .loc 1 627 0
 1612 0052 7B78     	 ldrb r3,[r7,#1]
 1613 0054 0922     	 movs r2,#9
 1614 0056 62F38503 	 bfi r3,r2,#2,#4
 1615 005a 7B70     	 strb r3,[r7,#1]
 628:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1616              	 .loc 1 628 0
 1617 005c 054B     	 ldr r3,.L84
 1618 005e D3F8A031 	 ldr r3,[r3,#416]
 1619 0062 3A68     	 ldr r2,[r7]
 1620 0064 DA60     	 str r2,[r3,#12]
 629:../Libraries/XMCLib/src/xmc_usbd.c **** 
 630:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 631:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1621              	 .loc 1 631 0
 1622 0066 0B20     	 movs r0,#11
 1623 0068 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 632:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1624              	 .loc 1 632 0
 1625 006c 0837     	 adds r7,r7,#8
 1626              	.LCFI67:
 1627              	 .cfi_def_cfa_offset 8
 1628 006e BD46     	 mov sp,r7
 1629              	.LCFI68:
 1630              	 .cfi_def_cfa_register 13
 1631              	 
 1632 0070 80BD     	 pop {r7,pc}
 1633              	.L85:
 1634 0072 00BF     	 .align 2
 1635              	.L84:
 1636 0074 00000000 	 .word xmc_device
 1637              	 .cfi_endproc
 1638              	.LFE162:
 1640              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1641              	 .align 2
 1642              	 .thumb
 1643              	 .thumb_func
 1645              	XMC_USBD_lHandleOEPInt:
 1646              	.LFB163:
 633:../Libraries/XMCLib/src/xmc_usbd.c **** 
 634:../Libraries/XMCLib/src/xmc_usbd.c **** 
 635:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 636:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 637:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 638:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 639:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 640:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 641:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 642:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1647              	 .loc 1 642 0
 1648              	 .cfi_startproc
 1649              	 
 1650              	 
 1651 0000 80B5     	 push {r7,lr}
 1652              	.LCFI69:
 1653              	 .cfi_def_cfa_offset 8
 1654              	 .cfi_offset 7,-8
 1655              	 .cfi_offset 14,-4
 1656 0002 8CB0     	 sub sp,sp,#48
 1657              	.LCFI70:
 1658              	 .cfi_def_cfa_offset 56
 1659 0004 00AF     	 add r7,sp,#0
 1660              	.LCFI71:
 1661              	 .cfi_def_cfa_register 7
 1662 0006 7860     	 str r0,[r7,#4]
 643:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 644:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 645:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 646:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 647:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 648:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 649:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 650:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 651:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 652:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 653:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 654:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1663              	 .loc 1 654 0
 1664 0008 6A4B     	 ldr r3,.L97
 1665 000a D3F8A431 	 ldr r3,[r3,#420]
 1666 000e 9B69     	 ldr r3,[r3,#24]
 1667 0010 FB61     	 str r3,[r7,#28]
 655:../Libraries/XMCLib/src/xmc_usbd.c ****   
 656:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1668              	 .loc 1 656 0
 1669 0012 684B     	 ldr r3,.L97
 1670 0014 D3F8A431 	 ldr r3,[r3,#420]
 1671 0018 DB69     	 ldr r3,[r3,#28]
 1672 001a BB61     	 str r3,[r7,#24]
 657:../Libraries/XMCLib/src/xmc_usbd.c ****   
 658:../Libraries/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 1673              	 .loc 1 658 0
 1674 001c 654B     	 ldr r3,.L97
 1675 001e D3F8A431 	 ldr r3,[r3,#420]
 1676 0022 5B69     	 ldr r3,[r3,#20]
 1677 0024 7B61     	 str r3,[r7,#20]
 659:../Libraries/XMCLib/src/xmc_usbd.c ****   
 660:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1678              	 .loc 1 660 0
 1679 0026 FA8B     	 ldrh r2,[r7,#30]
 1680 0028 7B8B     	 ldrh r3,[r7,#26]
 1681 002a 1340     	 ands r3,r3,r2
 1682 002c BB85     	 strh r3,[r7,#44]
 661:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1683              	 .loc 1 661 0
 1684 002e 0023     	 movs r3,#0
 1685 0030 87F82F30 	 strb r3,[r7,#47]
 662:../Libraries/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1686              	 .loc 1 662 0
 1687 0034 0023     	 movs r3,#0
 1688 0036 FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_usbd.c ****  
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1689              	 .loc 1 664 0
 1690 0038 AEE0     	 b .L87
 1691              	.L96:
 665:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 666:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1692              	 .loc 1 666 0
 1693 003a BA8D     	 ldrh r2,[r7,#44]
 1694 003c 97F82F30 	 ldrb r3,[r7,#47]
 1695 0040 42FA03F3 	 asr r3,r2,r3
 1696 0044 7B85     	 strh r3,[r7,#42]
 667:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1697              	 .loc 1 667 0
 1698 0046 7B8D     	 ldrh r3,[r7,#42]
 1699 0048 03F00103 	 and r3,r3,#1
 1700 004c 3B85     	 strh r3,[r7,#40]
 668:../Libraries/XMCLib/src/xmc_usbd.c ****     if (temp)
 1701              	 .loc 1 668 0
 1702 004e 3B8D     	 ldrh r3,[r7,#40]
 1703 0050 002B     	 cmp r3,#0
 1704 0052 00F09C80 	 beq .L88
 669:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 670:../Libraries/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 671:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1705              	 .loc 1 671 0
 1706 0056 97F82F30 	 ldrb r3,[r7,#47]
 1707 005a 3422     	 movs r2,#52
 1708 005c 02FB03F3 	 mul r3,r2,r3
 1709 0060 544A     	 ldr r2,.L97
 1710 0062 1344     	 add r3,r3,r2
 1711 0064 7B62     	 str r3,[r7,#36]
 672:../Libraries/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1712              	 .loc 1 672 0
 1713 0066 97F82F30 	 ldrb r3,[r7,#47]
 1714 006a 524A     	 ldr r2,.L97
 1715 006c 7033     	 adds r3,r3,#112
 1716 006e 9B00     	 lsls r3,r3,#2
 1717 0070 1344     	 add r3,r3,r2
 1718 0072 5B68     	 ldr r3,[r3,#4]
 1719 0074 9A68     	 ldr r2,[r3,#8]
 1720 0076 7B69     	 ldr r3,[r7,#20]
 1721 0078 1340     	 ands r3,r3,r2
 1722 007a 3B61     	 str r3,[r7,#16]
 673:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1723              	 .loc 1 673 0
 1724 007c 7B68     	 ldr r3,[r7,#4]
 1725 007e 5B7B     	 ldrb r3,[r3,#13]
 1726 0080 002B     	 cmp r3,#0
 1727 0082 08D1     	 bne .L89
 674:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 675:../Libraries/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1728              	 .loc 1 675 0
 1729 0084 97F82F30 	 ldrb r3,[r7,#47]
 1730 0088 4A4A     	 ldr r2,.L97
 1731 008a 7033     	 adds r3,r3,#112
 1732 008c 9B00     	 lsls r3,r3,#2
 1733 008e 1344     	 add r3,r3,r2
 1734 0090 5B68     	 ldr r3,[r3,#4]
 1735 0092 1B69     	 ldr r3,[r3,#16]
 1736 0094 FB60     	 str r3,[r7,#12]
 1737              	.L89:
 676:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 677:../Libraries/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 678:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1738              	 .loc 1 678 0
 1739 0096 3B7C     	 ldrb r3,[r7,#16]
 1740 0098 03F00803 	 and r3,r3,#8
 1741 009c DBB2     	 uxtb r3,r3
 1742 009e 002B     	 cmp r3,#0
 1743 00a0 33D0     	 beq .L90
 679:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 680:../Libraries/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 681:../Libraries/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1744              	 .loc 1 681 0
 1745 00a2 7A6A     	 ldr r2,[r7,#36]
 1746 00a4 1379     	 ldrb r3,[r2,#4]
 1747 00a6 6FF34513 	 bfc r3,#5,#1
 1748 00aa 1371     	 strb r3,[r2,#4]
 682:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1749              	 .loc 1 682 0
 1750 00ac 7B68     	 ldr r3,[r7,#4]
 1751 00ae 5B7B     	 ldrb r3,[r3,#13]
 1752 00b0 002B     	 cmp r3,#0
 1753 00b2 0ED1     	 bne .L91
 683:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 684:../Libraries/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 685:../Libraries/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 686:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1754              	 .loc 1 686 0
 1755 00b4 07F10C03 	 add r3,r7,#12
 1756 00b8 DB78     	 ldrb r3,[r3,#3]
 1757 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1758 00be DBB2     	 uxtb r3,r3
 1759 00c0 1A46     	 mov r2,r3
 685:../Libraries/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1760              	 .loc 1 685 0
 1761 00c2 1346     	 mov r3,r2
 1762 00c4 5B07     	 lsls r3,r3,#29
 1763 00c6 9B1A     	 subs r3,r3,r2
 1764 00c8 DB00     	 lsls r3,r3,#3
 1765 00ca 03F11802 	 add r2,r3,#24
 1766 00ce 7B6A     	 ldr r3,[r7,#36]
 1767 00d0 1A61     	 str r2,[r3,#16]
 1768              	.L91:
 687:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 688:../Libraries/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1769              	 .loc 1 688 0
 1770 00d2 7B68     	 ldr r3,[r7,#4]
 1771 00d4 5B7B     	 ldrb r3,[r3,#13]
 1772 00d6 012B     	 cmp r3,#1
 1773 00d8 06D1     	 bne .L92
 689:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
 690:../Libraries/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 1774              	 .loc 1 690 0
 1775 00da 7B6A     	 ldr r3,[r7,#36]
 1776 00dc 1A69     	 ldr r2,[r3,#16]
 1777 00de 7B6A     	 ldr r3,[r7,#36]
 1778 00e0 DB6A     	 ldr r3,[r3,#44]
 1779 00e2 1A44     	 add r2,r2,r3
 1780 00e4 7B6A     	 ldr r3,[r7,#36]
 1781 00e6 1A61     	 str r2,[r3,#16]
 1782              	.L92:
 691:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
 692:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 1783              	 .loc 1 692 0
 1784 00e8 7B6A     	 ldr r3,[r7,#36]
 1785 00ea 5A68     	 ldr r2,[r3,#4]
 1786 00ec 22F01002 	 bic r2,r2,#16
 1787 00f0 5A60     	 str r2,[r3,#4]
 693:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1788              	 .loc 1 693 0
 1789 00f2 304B     	 ldr r3,.L97
 1790 00f4 D3F80432 	 ldr r3,[r3,#516]
 1791 00f8 0020     	 movs r0,#0
 1792 00fa 0021     	 movs r1,#0
 1793 00fc 9847     	 blx r3
 694:../Libraries/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 695:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 1794              	 .loc 1 695 0
 1795 00fe 97F82F30 	 ldrb r3,[r7,#47]
 1796 0102 0820     	 movs r0,#8
 1797 0104 1946     	 mov r1,r3
 1798 0106 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1799              	.L90:
 696:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 697:../Libraries/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1800              	 .loc 1 697 0
 1801 010a 3B7C     	 ldrb r3,[r7,#16]
 1802 010c 03F00103 	 and r3,r3,#1
 1803 0110 DBB2     	 uxtb r3,r3
 1804 0112 002B     	 cmp r3,#0
 1805 0114 34D0     	 beq .L93
 698:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 699:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1806              	 .loc 1 699 0
 1807 0116 7B68     	 ldr r3,[r7,#4]
 1808 0118 5B7B     	 ldrb r3,[r3,#13]
 1809 011a 002B     	 cmp r3,#0
 1810 011c 15D1     	 bne .L94
 1811              	.LBB3:
 700:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 701:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1812              	 .loc 1 701 0
 1813 011e 7B6A     	 ldr r3,[r7,#36]
 1814 0120 9A6A     	 ldr r2,[r3,#40]
 1815 0122 7B6A     	 ldr r3,[r7,#36]
 1816 0124 DB6A     	 ldr r3,[r3,#44]
 1817 0126 D31A     	 subs r3,r2,r3
 1818 0128 FA68     	 ldr r2,[r7,#12]
 1819 012a C2F31202 	 ubfx r2,r2,#0,#19
 1820 012e 9B1A     	 subs r3,r3,r2
 1821 0130 3B62     	 str r3,[r7,#32]
 702:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1822              	 .loc 1 702 0
 1823 0132 7B6A     	 ldr r3,[r7,#36]
 1824 0134 DA6A     	 ldr r2,[r3,#44]
 1825 0136 3B6A     	 ldr r3,[r7,#32]
 1826 0138 1A44     	 add r2,r2,r3
 1827 013a 7B6A     	 ldr r3,[r7,#36]
 1828 013c DA62     	 str r2,[r3,#44]
 703:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1829              	 .loc 1 703 0
 1830 013e 7B6A     	 ldr r3,[r7,#36]
 1831 0140 5A6A     	 ldr r2,[r3,#36]
 1832 0142 3B6A     	 ldr r3,[r7,#32]
 1833 0144 1A44     	 add r2,r2,r3
 1834 0146 7B6A     	 ldr r3,[r7,#36]
 1835 0148 5A62     	 str r2,[r3,#36]
 1836              	.L94:
 1837              	.LBE3:
 704:../Libraries/XMCLib/src/xmc_usbd.c **** 				}
 705:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1838              	 .loc 1 705 0
 1839 014a 7B6A     	 ldr r3,[r7,#36]
 1840 014c 1A6B     	 ldr r2,[r3,#48]
 1841 014e 7B6A     	 ldr r3,[r7,#36]
 1842 0150 9B6A     	 ldr r3,[r3,#40]
 1843 0152 9A42     	 cmp r2,r3
 1844 0154 11D1     	 bne .L95
 706:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 707:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1845              	 .loc 1 707 0
 1846 0156 7B6A     	 ldr r3,[r7,#36]
 1847 0158 DA6A     	 ldr r2,[r3,#44]
 1848 015a 7B6A     	 ldr r3,[r7,#36]
 1849 015c 1A61     	 str r2,[r3,#16]
 708:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1850              	 .loc 1 708 0
 1851 015e 7B6A     	 ldr r3,[r7,#36]
 1852 0160 5A68     	 ldr r2,[r3,#4]
 1853 0162 22F01002 	 bic r2,r2,#16
 1854 0166 5A60     	 str r2,[r3,#4]
 709:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 1855              	 .loc 1 709 0
 1856 0168 124B     	 ldr r3,.L97
 1857 016a D3F80432 	 ldr r3,[r3,#516]
 1858 016e 97F82F20 	 ldrb r2,[r7,#47]
 1859 0172 1046     	 mov r0,r2
 1860 0174 0121     	 movs r1,#1
 1861 0176 9847     	 blx r3
 1862 0178 02E0     	 b .L93
 1863              	.L95:
 710:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 711:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 712:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 713:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1864              	 .loc 1 713 0
 1865 017a 786A     	 ldr r0,[r7,#36]
 1866 017c FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1867              	.L93:
 714:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 715:../Libraries/XMCLib/src/xmc_usbd.c **** 
 716:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 717:../Libraries/XMCLib/src/xmc_usbd.c **** 
 718:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 1868              	 .loc 1 718 0
 1869 0180 3A69     	 ldr r2,[r7,#16]
 1870 0182 97F82F30 	 ldrb r3,[r7,#47]
 1871 0186 1046     	 mov r0,r2
 1872 0188 1946     	 mov r1,r3
 1873 018a FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1874              	.L88:
 719:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 720:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1875              	 .loc 1 720 0
 1876 018e 97F82F30 	 ldrb r3,[r7,#47]
 1877 0192 0133     	 adds r3,r3,#1
 1878 0194 87F82F30 	 strb r3,[r7,#47]
 1879              	.L87:
 664:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 1880              	 .loc 1 664 0
 1881 0198 BA8D     	 ldrh r2,[r7,#44]
 1882 019a 97F82F30 	 ldrb r3,[r7,#47]
 1883 019e 42FA03F3 	 asr r3,r2,r3
 1884 01a2 002B     	 cmp r3,#0
 1885 01a4 7FF449AF 	 bne .L96
 721:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 722:../Libraries/XMCLib/src/xmc_usbd.c **** 
 723:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 724:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 1886              	 .loc 1 724 0
 1887 01a8 0D20     	 movs r0,#13
 1888 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 725:../Libraries/XMCLib/src/xmc_usbd.c **** }
 1889              	 .loc 1 725 0
 1890 01ae 3037     	 adds r7,r7,#48
 1891              	.LCFI72:
 1892              	 .cfi_def_cfa_offset 8
 1893 01b0 BD46     	 mov sp,r7
 1894              	.LCFI73:
 1895              	 .cfi_def_cfa_register 13
 1896              	 
 1897 01b2 80BD     	 pop {r7,pc}
 1898              	.L98:
 1899              	 .align 2
 1900              	.L97:
 1901 01b4 00000000 	 .word xmc_device
 1902              	 .cfi_endproc
 1903              	.LFE163:
 1905              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 1906              	 .align 2
 1907              	 .thumb
 1908              	 .thumb_func
 1910              	XMC_USBD_lHandleIEPInt:
 1911              	.LFB164:
 726:../Libraries/XMCLib/src/xmc_usbd.c **** 
 727:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 728:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 729:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 730:../Libraries/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 731:../Libraries/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 732:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 733:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 734:../Libraries/XMCLib/src/xmc_usbd.c **** {
 1912              	 .loc 1 734 0
 1913              	 .cfi_startproc
 1914              	 
 1915              	 
 1916 0000 80B5     	 push {r7,lr}
 1917              	.LCFI74:
 1918              	 .cfi_def_cfa_offset 8
 1919              	 .cfi_offset 7,-8
 1920              	 .cfi_offset 14,-4
 1921 0002 8CB0     	 sub sp,sp,#48
 1922              	.LCFI75:
 1923              	 .cfi_def_cfa_offset 56
 1924 0004 00AF     	 add r7,sp,#0
 1925              	.LCFI76:
 1926              	 .cfi_def_cfa_register 7
 1927 0006 7860     	 str r0,[r7,#4]
 735:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 736:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 737:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 738:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 739:../Libraries/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 740:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 741:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 742:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 743:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 744:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 745:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 746:../Libraries/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1928              	 .loc 1 746 0
 1929 0008 6A4B     	 ldr r3,.L109
 1930 000a D3F8A431 	 ldr r3,[r3,#420]
 1931 000e 9B69     	 ldr r3,[r3,#24]
 1932 0010 7B61     	 str r3,[r7,#20]
 747:../Libraries/XMCLib/src/xmc_usbd.c ****   
 748:../Libraries/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 1933              	 .loc 1 748 0
 1934 0012 684B     	 ldr r3,.L109
 1935 0014 D3F8A431 	 ldr r3,[r3,#420]
 1936 0018 1B69     	 ldr r3,[r3,#16]
 1937 001a 3B61     	 str r3,[r7,#16]
 749:../Libraries/XMCLib/src/xmc_usbd.c ****   
 750:../Libraries/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 1938              	 .loc 1 750 0
 1939 001c 0023     	 movs r3,#0
 1940 001e BB60     	 str r3,[r7,#8]
 751:../Libraries/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 1941              	 .loc 1 751 0
 1942 0020 BB8A     	 ldrh r3,[r7,#20]
 1943 0022 BB85     	 strh r3,[r7,#44]
 752:../Libraries/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1944              	 .loc 1 752 0
 1945 0024 0023     	 movs r3,#0
 1946 0026 87F82F30 	 strb r3,[r7,#47]
 753:../Libraries/XMCLib/src/xmc_usbd.c ****   
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1947              	 .loc 1 754 0
 1948 002a B5E0     	 b .L100
 1949              	.L108:
 755:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 756:../Libraries/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 1950              	 .loc 1 756 0
 1951 002c BA8D     	 ldrh r2,[r7,#44]
 1952 002e 97F82F30 	 ldrb r3,[r7,#47]
 1953 0032 42FA03F3 	 asr r3,r2,r3
 1954 0036 7B85     	 strh r3,[r7,#42]
 757:../Libraries/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 1955              	 .loc 1 757 0
 1956 0038 7B8D     	 ldrh r3,[r7,#42]
 1957 003a 03F00103 	 and r3,r3,#1
 1958 003e 3B85     	 strh r3,[r7,#40]
 758:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 1959              	 .loc 1 758 0
 1960 0040 3B8D     	 ldrh r3,[r7,#40]
 1961 0042 002B     	 cmp r3,#0
 1962 0044 00F0A380 	 beq .L101
 759:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 760:../Libraries/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1963              	 .loc 1 760 0
 1964 0048 97F82F30 	 ldrb r3,[r7,#47]
 1965 004c 3422     	 movs r2,#52
 1966 004e 02FB03F3 	 mul r3,r2,r3
 1967 0052 584A     	 ldr r2,.L109
 1968 0054 1344     	 add r3,r3,r2
 1969 0056 7B62     	 str r3,[r7,#36]
 761:../Libraries/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 1970              	 .loc 1 761 0
 1971 0058 97F82F30 	 ldrb r3,[r7,#47]
 1972 005c 554A     	 ldr r2,.L109
 1973 005e 6A33     	 adds r3,r3,#106
 1974 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1975 0064 9B68     	 ldr r3,[r3,#8]
 1976 0066 3B62     	 str r3,[r7,#32]
 762:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 763:../Libraries/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 1977              	 .loc 1 763 0
 1978 0068 524B     	 ldr r3,.L109
 1979 006a D3F8A431 	 ldr r3,[r3,#420]
 1980 006e 5B6B     	 ldr r3,[r3,#52]
 1981 0070 7A6A     	 ldr r2,[r7,#36]
 1982 0072 1278     	 ldrb r2,[r2]
 1983 0074 C2F30302 	 ubfx r2,r2,#0,#4
 1984 0078 D2B2     	 uxtb r2,r2
 1985 007a D340     	 lsrs r3,r3,r2
 764:../Libraries/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 1986              	 .loc 1 764 0
 1987 007c DB01     	 lsls r3,r3,#7
 1988 007e DAB2     	 uxtb r2,r3
 1989 0080 3B69     	 ldr r3,[r7,#16]
 1990 0082 1A43     	 orrs r2,r2,r3
 762:../Libraries/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 1991              	 .loc 1 762 0
 1992 0084 3B6A     	 ldr r3,[r7,#32]
 1993 0086 1340     	 ands r3,r3,r2
 1994 0088 FB60     	 str r3,[r7,#12]
 765:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1995              	 .loc 1 765 0
 1996 008a 7B68     	 ldr r3,[r7,#4]
 1997 008c 5B7B     	 ldrb r3,[r3,#13]
 1998 008e 002B     	 cmp r3,#0
 1999 0090 07D1     	 bne .L102
 766:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 767:../Libraries/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 2000              	 .loc 1 767 0
 2001 0092 97F82F30 	 ldrb r3,[r7,#47]
 2002 0096 474A     	 ldr r2,.L109
 2003 0098 6A33     	 adds r3,r3,#106
 2004 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2005 009e 1B69     	 ldr r3,[r3,#16]
 2006 00a0 BB60     	 str r3,[r7,#8]
 2007              	.L102:
 768:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 769:../Libraries/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2008              	 .loc 1 769 0
 2009 00a2 7B68     	 ldr r3,[r7,#4]
 2010 00a4 5B7B     	 ldrb r3,[r3,#13]
 2011 00a6 012B     	 cmp r3,#1
 2012 00a8 15D1     	 bne .L103
 770:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 771:../Libraries/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 2013              	 .loc 1 771 0
 2014 00aa 3B7B     	 ldrb r3,[r7,#12]
 2015 00ac 23F07F03 	 bic r3,r3,#127
 2016 00b0 DBB2     	 uxtb r3,r3
 2017 00b2 002B     	 cmp r3,#0
 2018 00b4 0FD0     	 beq .L103
 2019              	.LBB4:
 772:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 773:../Libraries/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 774:../Libraries/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 2020              	 .loc 1 774 0
 2021 00b6 786A     	 ldr r0,[r7,#36]
 2022 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 2023 00bc F861     	 str r0,[r7,#28]
 775:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2024              	 .loc 1 775 0
 2025 00be 7B6A     	 ldr r3,[r7,#36]
 2026 00c0 DA6A     	 ldr r2,[r3,#44]
 2027 00c2 FB69     	 ldr r3,[r7,#28]
 2028 00c4 1A44     	 add r2,r2,r3
 2029 00c6 7B6A     	 ldr r3,[r7,#36]
 2030 00c8 DA62     	 str r2,[r3,#44]
 776:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2031              	 .loc 1 776 0
 2032 00ca 7B6A     	 ldr r3,[r7,#36]
 2033 00cc 5A6A     	 ldr r2,[r3,#36]
 2034 00ce FB69     	 ldr r3,[r7,#28]
 2035 00d0 1A44     	 add r2,r2,r3
 2036 00d2 7B6A     	 ldr r3,[r7,#36]
 2037 00d4 5A62     	 str r2,[r3,#36]
 2038              	.L103:
 2039              	.LBE4:
 777:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 778:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 779:../Libraries/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 2040              	 .loc 1 779 0
 2041 00d6 3B7B     	 ldrb r3,[r7,#12]
 2042 00d8 03F00103 	 and r3,r3,#1
 2043 00dc DBB2     	 uxtb r3,r3
 2044 00de 002B     	 cmp r3,#0
 2045 00e0 4ED0     	 beq .L104
 780:../Libraries/XMCLib/src/xmc_usbd.c ****       {
 781:../Libraries/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2046              	 .loc 1 781 0
 2047 00e2 7B68     	 ldr r3,[r7,#4]
 2048 00e4 5B7B     	 ldrb r3,[r3,#13]
 2049 00e6 002B     	 cmp r3,#0
 2050 00e8 1DD1     	 bne .L105
 782:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 783:../Libraries/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 784:../Libraries/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 2051              	 .loc 1 784 0
 2052 00ea 7A89     	 ldrh r2,[r7,#10]
 2053 00ec 41F6F873 	 movw r3,#8184
 2054 00f0 1340     	 ands r3,r3,r2
 2055 00f2 9BB2     	 uxth r3,r3
 2056 00f4 002B     	 cmp r3,#0
 2057 00f6 16D1     	 bne .L105
 2058              	 .loc 1 784 0 is_stmt 0 discriminator 1
 2059 00f8 BB68     	 ldr r3,[r7,#8]
 2060 00fa C3F31203 	 ubfx r3,r3,#0,#19
 2061 00fe 002B     	 cmp r3,#0
 2062 0100 11D1     	 bne .L105
 2063              	.LBB5:
 785:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 786:../Libraries/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 2064              	 .loc 1 786 0 is_stmt 1
 2065 0102 7B6A     	 ldr r3,[r7,#36]
 2066 0104 9A6A     	 ldr r2,[r3,#40]
 2067 0106 7B6A     	 ldr r3,[r7,#36]
 2068 0108 DB6A     	 ldr r3,[r3,#44]
 2069 010a D31A     	 subs r3,r2,r3
 2070 010c BB61     	 str r3,[r7,#24]
 787:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2071              	 .loc 1 787 0
 2072 010e 7B6A     	 ldr r3,[r7,#36]
 2073 0110 DA6A     	 ldr r2,[r3,#44]
 2074 0112 BB69     	 ldr r3,[r7,#24]
 2075 0114 1A44     	 add r2,r2,r3
 2076 0116 7B6A     	 ldr r3,[r7,#36]
 2077 0118 DA62     	 str r2,[r3,#44]
 788:../Libraries/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2078              	 .loc 1 788 0
 2079 011a 7B6A     	 ldr r3,[r7,#36]
 2080 011c 5A6A     	 ldr r2,[r3,#36]
 2081 011e BB69     	 ldr r3,[r7,#24]
 2082 0120 1A44     	 add r2,r2,r3
 2083 0122 7B6A     	 ldr r3,[r7,#36]
 2084 0124 5A62     	 str r2,[r3,#36]
 2085              	.L105:
 2086              	.LBE5:
 789:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 790:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 791:../Libraries/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 2087              	 .loc 1 791 0
 2088 0126 7B6A     	 ldr r3,[r7,#36]
 2089 0128 1A6B     	 ldr r2,[r3,#48]
 2090 012a 7B6A     	 ldr r3,[r7,#36]
 2091 012c 9B6A     	 ldr r3,[r3,#40]
 2092 012e 9A42     	 cmp r2,r3
 2093 0130 23D1     	 bne .L106
 792:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 793:../Libraries/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2094              	 .loc 1 793 0
 2095 0132 7B6A     	 ldr r3,[r7,#36]
 2096 0134 5A68     	 ldr r2,[r3,#4]
 2097 0136 22F00802 	 bic r2,r2,#8
 2098 013a 5A60     	 str r2,[r3,#4]
 794:../Libraries/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2099              	 .loc 1 794 0
 2100 013c 7B68     	 ldr r3,[r7,#4]
 2101 013e 5B7B     	 ldrb r3,[r3,#13]
 2102 0140 012B     	 cmp r3,#1
 2103 0142 0ED1     	 bne .L107
 795:../Libraries/XMCLib/src/xmc_usbd.c ****           {
 796:../Libraries/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 797:../Libraries/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2104              	 .loc 1 797 0
 2105 0144 1B4B     	 ldr r3,.L109
 2106 0146 D3F8A431 	 ldr r3,[r3,#420]
 798:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2107              	 .loc 1 798 0
 2108 014a 1A4A     	 ldr r2,.L109
 2109 014c D2F8A421 	 ldr r2,[r2,#420]
 2110 0150 516B     	 ldr r1,[r2,#52]
 2111 0152 97F82F20 	 ldrb r2,[r7,#47]
 2112 0156 0120     	 movs r0,#1
 2113 0158 00FA02F2 	 lsl r2,r0,r2
 2114 015c D243     	 mvns r2,r2
 2115 015e 0A40     	 ands r2,r2,r1
 797:../Libraries/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2116              	 .loc 1 797 0
 2117 0160 5A63     	 str r2,[r3,#52]
 2118              	.L107:
 799:../Libraries/XMCLib/src/xmc_usbd.c ****           }
 800:../Libraries/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 2119              	 .loc 1 800 0
 2120 0162 144B     	 ldr r3,.L109
 2121 0164 D3F80432 	 ldr r3,[r3,#516]
 2122 0168 97F82F20 	 ldrb r2,[r7,#47]
 2123 016c 62F07F02 	 orn r2,r2,#127
 2124 0170 D2B2     	 uxtb r2,r2
 2125 0172 1046     	 mov r0,r2
 2126 0174 0221     	 movs r1,#2
 2127 0176 9847     	 blx r3
 2128 0178 02E0     	 b .L104
 2129              	.L106:
 801:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 802:../Libraries/XMCLib/src/xmc_usbd.c ****         else
 803:../Libraries/XMCLib/src/xmc_usbd.c ****         {
 804:../Libraries/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 805:../Libraries/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2130              	 .loc 1 805 0
 2131 017a 786A     	 ldr r0,[r7,#36]
 2132 017c FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2133              	.L104:
 806:../Libraries/XMCLib/src/xmc_usbd.c ****         }
 807:../Libraries/XMCLib/src/xmc_usbd.c **** 
 808:../Libraries/XMCLib/src/xmc_usbd.c ****       }
 809:../Libraries/XMCLib/src/xmc_usbd.c **** 
 810:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 2134              	 .loc 1 810 0
 2135 0180 FA68     	 ldr r2,[r7,#12]
 2136 0182 97F82F30 	 ldrb r3,[r7,#47]
 2137 0186 1046     	 mov r0,r2
 2138 0188 1946     	 mov r1,r3
 2139 018a FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2140              	.L101:
 811:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 812:../Libraries/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2141              	 .loc 1 812 0
 2142 018e 97F82F30 	 ldrb r3,[r7,#47]
 2143 0192 0133     	 adds r3,r3,#1
 2144 0194 87F82F30 	 strb r3,[r7,#47]
 2145              	.L100:
 754:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 2146              	 .loc 1 754 0
 2147 0198 BA8D     	 ldrh r2,[r7,#44]
 2148 019a 97F82F30 	 ldrb r3,[r7,#47]
 2149 019e 42FA03F3 	 asr r3,r2,r3
 2150 01a2 002B     	 cmp r3,#0
 2151 01a4 7FF442AF 	 bne .L108
 813:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 814:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2152              	 .loc 1 814 0
 2153 01a8 0E20     	 movs r0,#14
 2154 01aa FFF7FEFF 	 bl XMC_USBD_ClearEvent
 815:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2155              	 .loc 1 815 0
 2156 01ae 3037     	 adds r7,r7,#48
 2157              	.LCFI77:
 2158              	 .cfi_def_cfa_offset 8
 2159 01b0 BD46     	 mov sp,r7
 2160              	.LCFI78:
 2161              	 .cfi_def_cfa_register 13
 2162              	 
 2163 01b2 80BD     	 pop {r7,pc}
 2164              	.L110:
 2165              	 .align 2
 2166              	.L109:
 2167 01b4 00000000 	 .word xmc_device
 2168              	 .cfi_endproc
 2169              	.LFE164:
 2171              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2172              	 .align 2
 2173              	 .thumb
 2174              	 .thumb_func
 2176              	XMC_USBD_lHandleRxFLvl:
 2177              	.LFB165:
 816:../Libraries/XMCLib/src/xmc_usbd.c **** 
 817:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 818:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 819:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 820:../Libraries/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 821:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 822:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 823:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2178              	 .loc 1 823 0
 2179              	 .cfi_startproc
 2180              	 
 2181              	 
 2182 0000 80B5     	 push {r7,lr}
 2183              	.LCFI79:
 2184              	 .cfi_def_cfa_offset 8
 2185              	 .cfi_offset 7,-8
 2186              	 .cfi_offset 14,-4
 2187 0002 82B0     	 sub sp,sp,#8
 2188              	.LCFI80:
 2189              	 .cfi_def_cfa_offset 16
 2190 0004 00AF     	 add r7,sp,#0
 2191              	.LCFI81:
 2192              	 .cfi_def_cfa_register 7
 824:../Libraries/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 825:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2193              	 .loc 1 825 0
 2194 0006 1D4B     	 ldr r3,.L121
 2195 0008 D3F8A031 	 ldr r3,[r3,#416]
 2196 000c 1B6A     	 ldr r3,[r3,#32]
 2197 000e 7B60     	 str r3,[r7,#4]
 826:../Libraries/XMCLib/src/xmc_usbd.c **** 
 827:../Libraries/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2198              	 .loc 1 827 0
 2199 0010 BB79     	 ldrb r3,[r7,#6]
 2200 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2201 0016 DBB2     	 uxtb r3,r3
 2202 0018 013B     	 subs r3,r3,#1
 2203 001a 052B     	 cmp r3,#5
 2204 001c 2AD8     	 bhi .L120
 2205 001e 01A2     	 adr r2,.L114
 2206 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2207              	 .p2align 2
 2208              	.L114:
 2209 0024 75000000 	 .word .L120+1
 2210 0028 3D000000 	 .word .L115+1
 2211 002c 75000000 	 .word .L120+1
 2212 0030 75000000 	 .word .L120+1
 2213 0034 75000000 	 .word .L120+1
 2214 0038 59000000 	 .word .L118+1
 2215              	 .p2align 1
 2216              	.L115:
 828:../Libraries/XMCLib/src/xmc_usbd.c **** 	{
 829:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 830:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 831:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 832:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 833:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 834:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2217              	 .loc 1 834 0
 2218 003c 3B79     	 ldrb r3,[r7,#4]
 2219 003e C3F30303 	 ubfx r3,r3,#0,#4
 2220 0042 DBB2     	 uxtb r3,r3
 2221 0044 1A46     	 mov r2,r3
 2222 0046 BB88     	 ldrh r3,[r7,#4]
 2223 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2224 004c 9BB2     	 uxth r3,r3
 2225 004e 1046     	 mov r0,r2
 2226 0050 1946     	 mov r1,r3
 2227 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 835:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2228              	 .loc 1 835 0
 2229 0056 0EE0     	 b .L111
 2230              	.L118:
 836:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 837:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2231              	 .loc 1 837 0
 2232 0058 3B79     	 ldrb r3,[r7,#4]
 2233 005a C3F30303 	 ubfx r3,r3,#0,#4
 2234 005e DBB2     	 uxtb r3,r3
 2235 0060 1A46     	 mov r2,r3
 2236 0062 BB88     	 ldrh r3,[r7,#4]
 2237 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2238 0068 9BB2     	 uxth r3,r3
 2239 006a 1046     	 mov r0,r2
 2240 006c 1946     	 mov r1,r3
 2241 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 838:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2242              	 .loc 1 838 0
 2243 0072 00E0     	 b .L111
 2244              	.L120:
 839:../Libraries/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 840:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 841:../Libraries/XMCLib/src/xmc_usbd.c ****     default:
 842:../Libraries/XMCLib/src/xmc_usbd.c ****       break;
 2245              	 .loc 1 842 0
 2246 0074 00BF     	 nop
 2247              	.L111:
 843:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 844:../Libraries/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 845:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2248              	 .loc 1 845 0
 2249 0076 0837     	 adds r7,r7,#8
 2250              	.LCFI82:
 2251              	 .cfi_def_cfa_offset 8
 2252 0078 BD46     	 mov sp,r7
 2253              	.LCFI83:
 2254              	 .cfi_def_cfa_register 13
 2255              	 
 2256 007a 80BD     	 pop {r7,pc}
 2257              	.L122:
 2258              	 .align 2
 2259              	.L121:
 2260 007c 00000000 	 .word xmc_device
 2261              	 .cfi_endproc
 2262              	.LFE165:
 2264              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2265              	 .align 2
 2266              	 .global XMC_USBD_IRQHandler
 2267              	 .thumb
 2268              	 .thumb_func
 2270              	XMC_USBD_IRQHandler:
 2271              	.LFB166:
 846:../Libraries/XMCLib/src/xmc_usbd.c **** 
 847:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 848:../Libraries/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 849:../Libraries/XMCLib/src/xmc_usbd.c ****  *
 850:../Libraries/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 851:../Libraries/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 852:../Libraries/XMCLib/src/xmc_usbd.c ****  */
 853:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 854:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2272              	 .loc 1 854 0
 2273              	 .cfi_startproc
 2274              	 
 2275              	 
 2276 0000 80B5     	 push {r7,lr}
 2277              	.LCFI84:
 2278              	 .cfi_def_cfa_offset 8
 2279              	 .cfi_offset 7,-8
 2280              	 .cfi_offset 14,-4
 2281 0002 84B0     	 sub sp,sp,#16
 2282              	.LCFI85:
 2283              	 .cfi_def_cfa_offset 24
 2284 0004 00AF     	 add r7,sp,#0
 2285              	.LCFI86:
 2286              	 .cfi_def_cfa_register 7
 2287 0006 7860     	 str r0,[r7,#4]
 855:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 856:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 857:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 858:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2288              	 .loc 1 858 0
 2289 0008 4F4B     	 ldr r3,.L135
 2290 000a D3F8A031 	 ldr r3,[r3,#416]
 2291 000e 9B69     	 ldr r3,[r3,#24]
 2292 0010 FB60     	 str r3,[r7,#12]
 859:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2293              	 .loc 1 859 0
 2294 0012 4D4B     	 ldr r3,.L135
 2295 0014 D3F8A031 	 ldr r3,[r3,#416]
 2296 0018 5A69     	 ldr r2,[r3,#20]
 2297 001a FB68     	 ldr r3,[r7,#12]
 2298 001c 1340     	 ands r3,r3,r2
 2299 001e BB60     	 str r3,[r7,#8]
 860:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 861:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2300              	 .loc 1 861 0
 2301 0020 3B7A     	 ldrb r3,[r7,#8]
 2302 0022 03F00803 	 and r3,r3,#8
 2303 0026 DBB2     	 uxtb r3,r3
 2304 0028 002B     	 cmp r3,#0
 2305 002a 07D0     	 beq .L124
 862:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 863:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2306              	 .loc 1 863 0
 2307 002c 464B     	 ldr r3,.L135
 2308 002e D3F80032 	 ldr r3,[r3,#512]
 2309 0032 0920     	 movs r0,#9
 2310 0034 9847     	 blx r3
 864:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2311              	 .loc 1 864 0
 2312 0036 0920     	 movs r0,#9
 2313 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2314              	.L124:
 865:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 866:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2315              	 .loc 1 866 0
 2316 003c 7B68     	 ldr r3,[r7,#4]
 2317 003e 5B7B     	 ldrb r3,[r3,#13]
 2318 0040 012B     	 cmp r3,#1
 2319 0042 19D1     	 bne .L125
 867:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 868:../Libraries/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2320              	 .loc 1 868 0
 2321 0044 3B7A     	 ldrb r3,[r7,#8]
 2322 0046 03F01003 	 and r3,r3,#16
 2323 004a DBB2     	 uxtb r3,r3
 2324 004c 002B     	 cmp r3,#0
 2325 004e 13D0     	 beq .L125
 869:../Libraries/XMCLib/src/xmc_usbd.c ****     {
 870:../Libraries/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 871:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2326              	 .loc 1 871 0
 2327 0050 3B7B     	 ldrb r3,[r7,#12]
 2328 0052 6FF30413 	 bfc r3,#4,#1
 2329 0056 3B73     	 strb r3,[r7,#12]
 872:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2330              	 .loc 1 872 0
 2331 0058 3B4B     	 ldr r3,.L135
 2332 005a D3F8A031 	 ldr r3,[r3,#416]
 2333 005e FA68     	 ldr r2,[r7,#12]
 2334 0060 9A61     	 str r2,[r3,#24]
 873:../Libraries/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2335              	 .loc 1 873 0
 2336 0062 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 874:../Libraries/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2337              	 .loc 1 874 0
 2338 0066 3B7B     	 ldrb r3,[r7,#12]
 2339 0068 43F01003 	 orr r3,r3,#16
 2340 006c 3B73     	 strb r3,[r7,#12]
 875:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2341              	 .loc 1 875 0
 2342 006e 364B     	 ldr r3,.L135
 2343 0070 D3F8A031 	 ldr r3,[r3,#416]
 2344 0074 FA68     	 ldr r2,[r7,#12]
 2345 0076 9A61     	 str r2,[r3,#24]
 2346              	.L125:
 876:../Libraries/XMCLib/src/xmc_usbd.c ****     }
 877:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 878:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2347              	 .loc 1 878 0
 2348 0078 7B7A     	 ldrb r3,[r7,#9]
 2349 007a 03F00403 	 and r3,r3,#4
 2350 007e DBB2     	 uxtb r3,r3
 2351 0080 002B     	 cmp r3,#0
 2352 0082 02D0     	 beq .L126
 879:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 880:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2353              	 .loc 1 880 0
 2354 0084 0A20     	 movs r0,#10
 2355 0086 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2356              	.L126:
 881:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 882:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2357              	 .loc 1 882 0
 2358 008a 7B7A     	 ldrb r3,[r7,#9]
 2359 008c 03F00803 	 and r3,r3,#8
 2360 0090 DBB2     	 uxtb r3,r3
 2361 0092 002B     	 cmp r3,#0
 2362 0094 07D0     	 beq .L127
 883:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 884:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2363              	 .loc 1 884 0
 2364 0096 2C4B     	 ldr r3,.L135
 2365 0098 D3F80032 	 ldr r3,[r3,#512]
 2366 009c 0620     	 movs r0,#6
 2367 009e 9847     	 blx r3
 885:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2368              	 .loc 1 885 0
 2369 00a0 0620     	 movs r0,#6
 2370 00a2 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2371              	.L127:
 886:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 887:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2372              	 .loc 1 887 0
 2373 00a6 FB7A     	 ldrb r3,[r7,#11]
 2374 00a8 23F07F03 	 bic r3,r3,#127
 2375 00ac DBB2     	 uxtb r3,r3
 2376 00ae 002B     	 cmp r3,#0
 2377 00b0 07D0     	 beq .L128
 888:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 889:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2378              	 .loc 1 889 0
 2379 00b2 254B     	 ldr r3,.L135
 2380 00b4 D3F80032 	 ldr r3,[r3,#512]
 2381 00b8 0820     	 movs r0,#8
 2382 00ba 9847     	 blx r3
 890:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2383              	 .loc 1 890 0
 2384 00bc 0820     	 movs r0,#8
 2385 00be FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2386              	.L128:
 891:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 892:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2387              	 .loc 1 892 0
 2388 00c2 FB7A     	 ldrb r3,[r7,#11]
 2389 00c4 03F04003 	 and r3,r3,#64
 2390 00c8 DBB2     	 uxtb r3,r3
 2391 00ca 002B     	 cmp r3,#0
 2392 00cc 0ED0     	 beq .L129
 893:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 894:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2393              	 .loc 1 894 0
 2394 00ce 1E4A     	 ldr r2,.L135
 2395 00d0 92F8FE31 	 ldrb r3,[r2,#510]
 2396 00d4 43F00403 	 orr r3,r3,#4
 2397 00d8 82F8FE31 	 strb r3,[r2,#510]
 895:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2398              	 .loc 1 895 0
 2399 00dc 1A4B     	 ldr r3,.L135
 2400 00de D3F80032 	 ldr r3,[r3,#512]
 2401 00e2 0020     	 movs r0,#0
 2402 00e4 9847     	 blx r3
 896:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2403              	 .loc 1 896 0
 2404 00e6 0020     	 movs r0,#0
 2405 00e8 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2406              	.L129:
 897:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 898:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2407              	 .loc 1 898 0
 2408 00ec 7B7A     	 ldrb r3,[r7,#9]
 2409 00ee 03F01003 	 and r3,r3,#16
 2410 00f2 DBB2     	 uxtb r3,r3
 2411 00f4 002B     	 cmp r3,#0
 2412 00f6 02D0     	 beq .L130
 899:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 900:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2413              	 .loc 1 900 0
 2414 00f8 7868     	 ldr r0,[r7,#4]
 2415 00fa FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2416              	.L130:
 901:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 902:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2417              	 .loc 1 902 0
 2418 00fe 7B7A     	 ldrb r3,[r7,#9]
 2419 0100 03F02003 	 and r3,r3,#32
 2420 0104 DBB2     	 uxtb r3,r3
 2421 0106 002B     	 cmp r3,#0
 2422 0108 01D0     	 beq .L131
 903:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 904:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2423              	 .loc 1 904 0
 2424 010a FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2425              	.L131:
 905:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 906:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2426              	 .loc 1 906 0
 2427 010e BB7A     	 ldrb r3,[r7,#10]
 2428 0110 03F00403 	 and r3,r3,#4
 2429 0114 DBB2     	 uxtb r3,r3
 2430 0116 002B     	 cmp r3,#0
 2431 0118 02D0     	 beq .L132
 907:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 908:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2432              	 .loc 1 908 0
 2433 011a 7868     	 ldr r0,[r7,#4]
 2434 011c FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2435              	.L132:
 909:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 910:../Libraries/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2436              	 .loc 1 910 0
 2437 0120 BB7A     	 ldrb r3,[r7,#10]
 2438 0122 03F00803 	 and r3,r3,#8
 2439 0126 DBB2     	 uxtb r3,r3
 2440 0128 002B     	 cmp r3,#0
 2441 012a 02D0     	 beq .L133
 911:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 912:../Libraries/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 2442              	 .loc 1 912 0
 2443 012c 7868     	 ldr r0,[r7,#4]
 2444 012e FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2445              	.L133:
 913:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 914:../Libraries/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 2446              	 .loc 1 914 0
 2447 0132 3B7A     	 ldrb r3,[r7,#8]
 2448 0134 03F00403 	 and r3,r3,#4
 2449 0138 DBB2     	 uxtb r3,r3
 2450 013a 002B     	 cmp r3,#0
 2451 013c 01D0     	 beq .L123
 915:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 916:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 2452              	 .loc 1 916 0
 2453 013e FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2454              	.L123:
 917:../Libraries/XMCLib/src/xmc_usbd.c ****   }
 918:../Libraries/XMCLib/src/xmc_usbd.c **** 
 919:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2455              	 .loc 1 919 0
 2456 0142 1037     	 adds r7,r7,#16
 2457              	.LCFI87:
 2458              	 .cfi_def_cfa_offset 8
 2459 0144 BD46     	 mov sp,r7
 2460              	.LCFI88:
 2461              	 .cfi_def_cfa_register 13
 2462              	 
 2463 0146 80BD     	 pop {r7,pc}
 2464              	.L136:
 2465              	 .align 2
 2466              	.L135:
 2467 0148 00000000 	 .word xmc_device
 2468              	 .cfi_endproc
 2469              	.LFE166:
 2471              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2472              	 .align 2
 2473              	 .global XMC_USBD_Enable
 2474              	 .thumb
 2475              	 .thumb_func
 2477              	XMC_USBD_Enable:
 2478              	.LFB167:
 920:../Libraries/XMCLib/src/xmc_usbd.c **** 
 921:../Libraries/XMCLib/src/xmc_usbd.c **** 
 922:../Libraries/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 923:../Libraries/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 924:../Libraries/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 925:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 926:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 927:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 928:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 929:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2479              	 .loc 1 929 0
 2480              	 .cfi_startproc
 2481              	 
 2482              	 
 2483 0000 80B5     	 push {r7,lr}
 2484              	.LCFI89:
 2485              	 .cfi_def_cfa_offset 8
 2486              	 .cfi_offset 7,-8
 2487              	 .cfi_offset 14,-4
 2488 0002 00AF     	 add r7,sp,#0
 2489              	.LCFI90:
 2490              	 .cfi_def_cfa_register 7
 930:../Libraries/XMCLib/src/xmc_usbd.c **** #if (UC_SERIES != XMC45)
 931:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 932:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 933:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 934:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2491              	 .loc 1 934 0
 2492 0004 0248     	 ldr r0,.L138
 2493 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 935:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2494              	 .loc 1 935 0
 2495 000a FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 936:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2496              	 .loc 1 936 0
 2497 000e 80BD     	 pop {r7,pc}
 2498              	.L139:
 2499              	 .align 2
 2500              	.L138:
 2501 0010 80000020 	 .word 536871040
 2502              	 .cfi_endproc
 2503              	.LFE167:
 2505              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2506              	 .align 2
 2507              	 .global XMC_USBD_Disable
 2508              	 .thumb
 2509              	 .thumb_func
 2511              	XMC_USBD_Disable:
 2512              	.LFB168:
 937:../Libraries/XMCLib/src/xmc_usbd.c **** 
 938:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 939:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 940:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 941:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 942:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2513              	 .loc 1 942 0
 2514              	 .cfi_startproc
 2515              	 
 2516              	 
 2517 0000 80B5     	 push {r7,lr}
 2518              	.LCFI91:
 2519              	 .cfi_def_cfa_offset 8
 2520              	 .cfi_offset 7,-8
 2521              	 .cfi_offset 14,-4
 2522 0002 00AF     	 add r7,sp,#0
 2523              	.LCFI92:
 2524              	 .cfi_def_cfa_register 7
 943:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 944:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2525              	 .loc 1 944 0
 2526 0004 0248     	 ldr r0,.L141
 2527 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 945:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2528              	 .loc 1 945 0
 2529 000a FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 946:../Libraries/XMCLib/src/xmc_usbd.c **** 	
 947:../Libraries/XMCLib/src/xmc_usbd.c **** 	#if(UC_SERIES != XMC45)
 948:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 949:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
 950:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2530              	 .loc 1 950 0
 2531 000e 80BD     	 pop {r7,pc}
 2532              	.L142:
 2533              	 .align 2
 2534              	.L141:
 2535 0010 80000020 	 .word 536871040
 2536              	 .cfi_endproc
 2537              	.LFE168:
 2539              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2540              	 .align 2
 2541              	 .global XMC_USBD_ClearEvent
 2542              	 .thumb
 2543              	 .thumb_func
 2545              	XMC_USBD_ClearEvent:
 2546              	.LFB169:
 951:../Libraries/XMCLib/src/xmc_usbd.c **** 
 952:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 953:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 954:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 955:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 956:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2547              	 .loc 1 956 0
 2548              	 .cfi_startproc
 2549              	 
 2550              	 
 2551              	 
 2552 0000 80B4     	 push {r7}
 2553              	.LCFI93:
 2554              	 .cfi_def_cfa_offset 4
 2555              	 .cfi_offset 7,-4
 2556 0002 85B0     	 sub sp,sp,#20
 2557              	.LCFI94:
 2558              	 .cfi_def_cfa_offset 24
 2559 0004 00AF     	 add r7,sp,#0
 2560              	.LCFI95:
 2561              	 .cfi_def_cfa_register 7
 2562 0006 0346     	 mov r3,r0
 2563 0008 FB71     	 strb r3,[r7,#7]
 957:../Libraries/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 958:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2564              	 .loc 1 958 0
 2565 000a 0023     	 movs r3,#0
 2566 000c FB60     	 str r3,[r7,#12]
 959:../Libraries/XMCLib/src/xmc_usbd.c ****   switch(event)
 2567              	 .loc 1 959 0
 2568 000e FB79     	 ldrb r3,[r7,#7]
 2569 0010 0D2B     	 cmp r3,#13
 2570 0012 4CD8     	 bhi .L156
 2571 0014 01A2     	 adr r2,.L146
 2572 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2573 001a 00BF     	 .p2align 2
 2574              	.L146:
 2575 001c 55000000 	 .word .L145+1
 2576 0020 AF000000 	 .word .L156+1
 2577 0024 AF000000 	 .word .L156+1
 2578 0028 AF000000 	 .word .L156+1
 2579 002c 5F000000 	 .word .L147+1
 2580 0030 AF000000 	 .word .L156+1
 2581 0034 69000000 	 .word .L148+1
 2582 0038 73000000 	 .word .L149+1
 2583 003c 7D000000 	 .word .L150+1
 2584 0040 87000000 	 .word .L151+1
 2585 0044 91000000 	 .word .L152+1
 2586 0048 9B000000 	 .word .L153+1
 2587 004c AF000000 	 .word .L156+1
 2588 0050 A5000000 	 .word .L154+1
 2589              	 .p2align 1
 2590              	.L145:
 960:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 961:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 962:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 2591              	 .loc 1 962 0
 2592 0054 FB7B     	 ldrb r3,[r7,#15]
 2593 0056 43F04003 	 orr r3,r3,#64
 2594 005a FB73     	 strb r3,[r7,#15]
 963:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2595              	 .loc 1 963 0
 2596 005c 28E0     	 b .L155
 2597              	.L147:
 964:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 965:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 2598              	 .loc 1 965 0
 2599 005e 7B7B     	 ldrb r3,[r7,#13]
 2600 0060 43F01003 	 orr r3,r3,#16
 2601 0064 7B73     	 strb r3,[r7,#13]
 966:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2602              	 .loc 1 966 0
 2603 0066 23E0     	 b .L155
 2604              	.L148:
 967:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 968:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 2605              	 .loc 1 968 0
 2606 0068 7B7B     	 ldrb r3,[r7,#13]
 2607 006a 43F00803 	 orr r3,r3,#8
 2608 006e 7B73     	 strb r3,[r7,#13]
 969:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2609              	 .loc 1 969 0
 2610 0070 1EE0     	 b .L155
 2611              	.L149:
 970:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 971:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2612              	 .loc 1 971 0
 2613 0072 FB7B     	 ldrb r3,[r7,#15]
 2614 0074 43F08003 	 orr r3,r3,#128
 2615 0078 FB73     	 strb r3,[r7,#15]
 972:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2616              	 .loc 1 972 0
 2617 007a 19E0     	 b .L155
 2618              	.L150:
 973:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 974:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2619              	 .loc 1 974 0
 2620 007c FB7B     	 ldrb r3,[r7,#15]
 2621 007e 43F08003 	 orr r3,r3,#128
 2622 0082 FB73     	 strb r3,[r7,#15]
 975:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2623              	 .loc 1 975 0
 2624 0084 14E0     	 b .L155
 2625              	.L151:
 976:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 977:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 2626              	 .loc 1 977 0
 2627 0086 3B7B     	 ldrb r3,[r7,#12]
 2628 0088 43F00803 	 orr r3,r3,#8
 2629 008c 3B73     	 strb r3,[r7,#12]
 978:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2630              	 .loc 1 978 0
 2631 008e 0FE0     	 b .L155
 2632              	.L152:
 979:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 980:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 2633              	 .loc 1 980 0
 2634 0090 7B7B     	 ldrb r3,[r7,#13]
 2635 0092 43F00403 	 orr r3,r3,#4
 2636 0096 7B73     	 strb r3,[r7,#13]
 981:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2637              	 .loc 1 981 0
 2638 0098 0AE0     	 b .L155
 2639              	.L153:
 982:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 983:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 2640              	 .loc 1 983 0
 2641 009a 7B7B     	 ldrb r3,[r7,#13]
 2642 009c 43F02003 	 orr r3,r3,#32
 2643 00a0 7B73     	 strb r3,[r7,#13]
 984:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2644              	 .loc 1 984 0
 2645 00a2 05E0     	 b .L155
 2646              	.L154:
 985:../Libraries/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 986:../Libraries/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 2647              	 .loc 1 986 0
 2648 00a4 BB7B     	 ldrb r3,[r7,#14]
 2649 00a6 43F00803 	 orr r3,r3,#8
 2650 00aa BB73     	 strb r3,[r7,#14]
 987:../Libraries/XMCLib/src/xmc_usbd.c **** 	  break;
 2651              	 .loc 1 987 0
 2652 00ac 00E0     	 b .L155
 2653              	.L156:
 988:../Libraries/XMCLib/src/xmc_usbd.c **** 		default:
 989:../Libraries/XMCLib/src/xmc_usbd.c **** 		break;
 2654              	 .loc 1 989 0
 2655 00ae 00BF     	 nop
 2656              	.L155:
 990:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
 991:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
 2657              	 .loc 1 991 0
 2658 00b0 044B     	 ldr r3,.L157
 2659 00b2 D3F8A031 	 ldr r3,[r3,#416]
 2660 00b6 FA68     	 ldr r2,[r7,#12]
 2661 00b8 5A61     	 str r2,[r3,#20]
 992:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2662              	 .loc 1 992 0
 2663 00ba 1437     	 adds r7,r7,#20
 2664              	.LCFI96:
 2665              	 .cfi_def_cfa_offset 4
 2666 00bc BD46     	 mov sp,r7
 2667              	.LCFI97:
 2668              	 .cfi_def_cfa_register 13
 2669              	 
 2670 00be 5DF8047B 	 ldr r7,[sp],#4
 2671              	.LCFI98:
 2672              	 .cfi_restore 7
 2673              	 .cfi_def_cfa_offset 0
 2674 00c2 7047     	 bx lr
 2675              	.L158:
 2676              	 .align 2
 2677              	.L157:
 2678 00c4 00000000 	 .word xmc_device
 2679              	 .cfi_endproc
 2680              	.LFE169:
 2682              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2683              	 .align 2
 2684              	 .thumb
 2685              	 .thumb_func
 2687              	XMC_USBD_lClearEventOTG:
 2688              	.LFB170:
 993:../Libraries/XMCLib/src/xmc_usbd.c **** 
 994:../Libraries/XMCLib/src/xmc_usbd.c **** /**
 995:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
 996:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
 997:../Libraries/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
 998:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2689              	 .loc 1 998 0
 2690              	 .cfi_startproc
 2691              	 
 2692              	 
 2693              	 
 2694 0000 80B4     	 push {r7}
 2695              	.LCFI99:
 2696              	 .cfi_def_cfa_offset 4
 2697              	 .cfi_offset 7,-4
 2698 0002 85B0     	 sub sp,sp,#20
 2699              	.LCFI100:
 2700              	 .cfi_def_cfa_offset 24
 2701 0004 00AF     	 add r7,sp,#0
 2702              	.LCFI101:
 2703              	 .cfi_def_cfa_register 7
 2704 0006 7860     	 str r0,[r7,#4]
 999:../Libraries/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2705              	 .loc 1 999 0
 2706 0008 0023     	 movs r3,#0
 2707 000a FB60     	 str r3,[r7,#12]
1000:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2708              	 .loc 1 1000 0
 2709 000c 7B68     	 ldr r3,[r7,#4]
 2710 000e FB60     	 str r3,[r7,#12]
1001:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2711              	 .loc 1 1001 0
 2712 0010 044B     	 ldr r3,.L160
 2713 0012 D3F8A031 	 ldr r3,[r3,#416]
 2714 0016 FA68     	 ldr r2,[r7,#12]
 2715 0018 5A60     	 str r2,[r3,#4]
1002:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2716              	 .loc 1 1002 0
 2717 001a 1437     	 adds r7,r7,#20
 2718              	.LCFI102:
 2719              	 .cfi_def_cfa_offset 4
 2720 001c BD46     	 mov sp,r7
 2721              	.LCFI103:
 2722              	 .cfi_def_cfa_register 13
 2723              	 
 2724 001e 5DF8047B 	 ldr r7,[sp],#4
 2725              	.LCFI104:
 2726              	 .cfi_restore 7
 2727              	 .cfi_def_cfa_offset 0
 2728 0022 7047     	 bx lr
 2729              	.L161:
 2730              	 .align 2
 2731              	.L160:
 2732 0024 00000000 	 .word xmc_device
 2733              	 .cfi_endproc
 2734              	.LFE170:
 2736              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2737              	 .align 2
 2738              	 .global XMC_USBD_ClearEventINEP
 2739              	 .thumb
 2740              	 .thumb_func
 2742              	XMC_USBD_ClearEventINEP:
 2743              	.LFB171:
1003:../Libraries/XMCLib/src/xmc_usbd.c **** 
1004:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1005:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1006:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1007:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1008:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2744              	 .loc 1 1008 0
 2745              	 .cfi_startproc
 2746              	 
 2747              	 
 2748              	 
 2749 0000 80B4     	 push {r7}
 2750              	.LCFI105:
 2751              	 .cfi_def_cfa_offset 4
 2752              	 .cfi_offset 7,-4
 2753 0002 85B0     	 sub sp,sp,#20
 2754              	.LCFI106:
 2755              	 .cfi_def_cfa_offset 24
 2756 0004 00AF     	 add r7,sp,#0
 2757              	.LCFI107:
 2758              	 .cfi_def_cfa_register 7
 2759 0006 7860     	 str r0,[r7,#4]
 2760 0008 0B46     	 mov r3,r1
 2761 000a FB70     	 strb r3,[r7,#3]
1009:../Libraries/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1010:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2762              	 .loc 1 1010 0
 2763 000c 7B68     	 ldr r3,[r7,#4]
 2764 000e FB60     	 str r3,[r7,#12]
1011:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2765              	 .loc 1 1011 0
 2766 0010 FB78     	 ldrb r3,[r7,#3]
 2767 0012 054A     	 ldr r2,.L163
 2768 0014 6A33     	 adds r3,r3,#106
 2769 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2770 001a FA68     	 ldr r2,[r7,#12]
 2771 001c 9A60     	 str r2,[r3,#8]
1012:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2772              	 .loc 1 1012 0
 2773 001e 1437     	 adds r7,r7,#20
 2774              	.LCFI108:
 2775              	 .cfi_def_cfa_offset 4
 2776 0020 BD46     	 mov sp,r7
 2777              	.LCFI109:
 2778              	 .cfi_def_cfa_register 13
 2779              	 
 2780 0022 5DF8047B 	 ldr r7,[sp],#4
 2781              	.LCFI110:
 2782              	 .cfi_restore 7
 2783              	 .cfi_def_cfa_offset 0
 2784 0026 7047     	 bx lr
 2785              	.L164:
 2786              	 .align 2
 2787              	.L163:
 2788 0028 00000000 	 .word xmc_device
 2789              	 .cfi_endproc
 2790              	.LFE171:
 2792              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2793              	 .align 2
 2794              	 .global XMC_USBD_ClearEventOUTEP
 2795              	 .thumb
 2796              	 .thumb_func
 2798              	XMC_USBD_ClearEventOUTEP:
 2799              	.LFB172:
1013:../Libraries/XMCLib/src/xmc_usbd.c **** 
1014:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1015:../Libraries/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1016:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1017:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1018:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2800              	 .loc 1 1018 0
 2801              	 .cfi_startproc
 2802              	 
 2803              	 
 2804              	 
 2805 0000 80B4     	 push {r7}
 2806              	.LCFI111:
 2807              	 .cfi_def_cfa_offset 4
 2808              	 .cfi_offset 7,-4
 2809 0002 85B0     	 sub sp,sp,#20
 2810              	.LCFI112:
 2811              	 .cfi_def_cfa_offset 24
 2812 0004 00AF     	 add r7,sp,#0
 2813              	.LCFI113:
 2814              	 .cfi_def_cfa_register 7
 2815 0006 7860     	 str r0,[r7,#4]
 2816 0008 0B46     	 mov r3,r1
 2817 000a FB70     	 strb r3,[r7,#3]
1019:../Libraries/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1020:../Libraries/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2818              	 .loc 1 1020 0
 2819 000c 7B68     	 ldr r3,[r7,#4]
 2820 000e FB60     	 str r3,[r7,#12]
1021:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2821              	 .loc 1 1021 0
 2822 0010 FB78     	 ldrb r3,[r7,#3]
 2823 0012 064A     	 ldr r2,.L166
 2824 0014 7033     	 adds r3,r3,#112
 2825 0016 9B00     	 lsls r3,r3,#2
 2826 0018 1344     	 add r3,r3,r2
 2827 001a 5B68     	 ldr r3,[r3,#4]
 2828 001c FA68     	 ldr r2,[r7,#12]
 2829 001e 9A60     	 str r2,[r3,#8]
1022:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2830              	 .loc 1 1022 0
 2831 0020 1437     	 adds r7,r7,#20
 2832              	.LCFI114:
 2833              	 .cfi_def_cfa_offset 4
 2834 0022 BD46     	 mov sp,r7
 2835              	.LCFI115:
 2836              	 .cfi_def_cfa_register 13
 2837              	 
 2838 0024 5DF8047B 	 ldr r7,[sp],#4
 2839              	.LCFI116:
 2840              	 .cfi_restore 7
 2841              	 .cfi_def_cfa_offset 0
 2842 0028 7047     	 bx lr
 2843              	.L167:
 2844 002a 00BF     	 .align 2
 2845              	.L166:
 2846 002c 00000000 	 .word xmc_device
 2847              	 .cfi_endproc
 2848              	.LFE172:
 2850              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2851              	 .align 2
 2852              	 .global XMC_USBD_EnableEventOUTEP
 2853              	 .thumb
 2854              	 .thumb_func
 2856              	XMC_USBD_EnableEventOUTEP:
 2857              	.LFB173:
1023:../Libraries/XMCLib/src/xmc_usbd.c **** 
1024:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1025:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1026:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1027:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1028:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2858              	 .loc 1 1028 0
 2859              	 .cfi_startproc
 2860              	 
 2861              	 
 2862              	 
 2863 0000 80B4     	 push {r7}
 2864              	.LCFI117:
 2865              	 .cfi_def_cfa_offset 4
 2866              	 .cfi_offset 7,-4
 2867 0002 85B0     	 sub sp,sp,#20
 2868              	.LCFI118:
 2869              	 .cfi_def_cfa_offset 24
 2870 0004 00AF     	 add r7,sp,#0
 2871              	.LCFI119:
 2872              	 .cfi_def_cfa_register 7
 2873 0006 7860     	 str r0,[r7,#4]
1029:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1030:../Libraries/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
 2874              	 .loc 1 1030 0
 2875 0008 7B68     	 ldr r3,[r7,#4]
 2876 000a FB60     	 str r3,[r7,#12]
1031:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
 2877              	 .loc 1 1031 0
 2878 000c 074B     	 ldr r3,.L169
 2879 000e D3F8A431 	 ldr r3,[r3,#420]
 2880 0012 064A     	 ldr r2,.L169
 2881 0014 D2F8A421 	 ldr r2,[r2,#420]
 2882 0018 5169     	 ldr r1,[r2,#20]
 2883 001a FA68     	 ldr r2,[r7,#12]
 2884 001c 0A43     	 orrs r2,r2,r1
 2885 001e 5A61     	 str r2,[r3,#20]
1032:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2886              	 .loc 1 1032 0
 2887 0020 1437     	 adds r7,r7,#20
 2888              	.LCFI120:
 2889              	 .cfi_def_cfa_offset 4
 2890 0022 BD46     	 mov sp,r7
 2891              	.LCFI121:
 2892              	 .cfi_def_cfa_register 13
 2893              	 
 2894 0024 5DF8047B 	 ldr r7,[sp],#4
 2895              	.LCFI122:
 2896              	 .cfi_restore 7
 2897              	 .cfi_def_cfa_offset 0
 2898 0028 7047     	 bx lr
 2899              	.L170:
 2900 002a 00BF     	 .align 2
 2901              	.L169:
 2902 002c 00000000 	 .word xmc_device
 2903              	 .cfi_endproc
 2904              	.LFE173:
 2906              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 2907              	 .align 2
 2908              	 .global XMC_USBD_EnableEventINEP
 2909              	 .thumb
 2910              	 .thumb_func
 2912              	XMC_USBD_EnableEventINEP:
 2913              	.LFB174:
1033:../Libraries/XMCLib/src/xmc_usbd.c **** 
1034:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1035:../Libraries/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1036:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1037:../Libraries/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1038:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2914              	 .loc 1 1038 0
 2915              	 .cfi_startproc
 2916              	 
 2917              	 
 2918              	 
 2919 0000 80B4     	 push {r7}
 2920              	.LCFI123:
 2921              	 .cfi_def_cfa_offset 4
 2922              	 .cfi_offset 7,-4
 2923 0002 85B0     	 sub sp,sp,#20
 2924              	.LCFI124:
 2925              	 .cfi_def_cfa_offset 24
 2926 0004 00AF     	 add r7,sp,#0
 2927              	.LCFI125:
 2928              	 .cfi_def_cfa_register 7
 2929 0006 7860     	 str r0,[r7,#4]
1039:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1040:../Libraries/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
 2930              	 .loc 1 1040 0
 2931 0008 7B68     	 ldr r3,[r7,#4]
 2932 000a FB60     	 str r3,[r7,#12]
1041:../Libraries/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
 2933              	 .loc 1 1041 0
 2934 000c 074B     	 ldr r3,.L172
 2935 000e D3F8A431 	 ldr r3,[r3,#420]
 2936 0012 064A     	 ldr r2,.L172
 2937 0014 D2F8A421 	 ldr r2,[r2,#420]
 2938 0018 1169     	 ldr r1,[r2,#16]
 2939 001a FA68     	 ldr r2,[r7,#12]
 2940 001c 0A43     	 orrs r2,r2,r1
 2941 001e 1A61     	 str r2,[r3,#16]
1042:../Libraries/XMCLib/src/xmc_usbd.c **** }
 2942              	 .loc 1 1042 0
 2943 0020 1437     	 adds r7,r7,#20
 2944              	.LCFI126:
 2945              	 .cfi_def_cfa_offset 4
 2946 0022 BD46     	 mov sp,r7
 2947              	.LCFI127:
 2948              	 .cfi_def_cfa_register 13
 2949              	 
 2950 0024 5DF8047B 	 ldr r7,[sp],#4
 2951              	.LCFI128:
 2952              	 .cfi_restore 7
 2953              	 .cfi_def_cfa_offset 0
 2954 0028 7047     	 bx lr
 2955              	.L173:
 2956 002a 00BF     	 .align 2
 2957              	.L172:
 2958 002c 00000000 	 .word xmc_device
 2959              	 .cfi_endproc
 2960              	.LFE174:
 2962              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 2963              	 .align 2
 2964              	 .global XMC_USBD_GetCapabilities
 2965              	 .thumb
 2966              	 .thumb_func
 2968              	XMC_USBD_GetCapabilities:
 2969              	.LFB175:
1043:../Libraries/XMCLib/src/xmc_usbd.c **** 
1044:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1045:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1046:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1047:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1048:../Libraries/XMCLib/src/xmc_usbd.c **** {
 2970              	 .loc 1 1048 0
 2971              	 .cfi_startproc
 2972              	 
 2973              	 
 2974              	 
 2975 0000 80B4     	 push {r7}
 2976              	.LCFI129:
 2977              	 .cfi_def_cfa_offset 4
 2978              	 .cfi_offset 7,-4
 2979 0002 83B0     	 sub sp,sp,#12
 2980              	.LCFI130:
 2981              	 .cfi_def_cfa_offset 16
 2982 0004 00AF     	 add r7,sp,#0
 2983              	.LCFI131:
 2984              	 .cfi_def_cfa_register 7
1049:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
 2985              	 .loc 1 1049 0
 2986 0006 0023     	 movs r3,#0
 2987 0008 7B60     	 str r3,[r7,#4]
1050:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 2988              	 .loc 1 1050 0
 2989 000a 3B79     	 ldrb r3,[r7,#4]
 2990 000c 43F00403 	 orr r3,r3,#4
 2991 0010 3B71     	 strb r3,[r7,#4]
1051:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 2992              	 .loc 1 1051 0
 2993 0012 3B79     	 ldrb r3,[r7,#4]
 2994 0014 43F00803 	 orr r3,r3,#8
 2995 0018 3B71     	 strb r3,[r7,#4]
1052:../Libraries/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1053:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
 2996              	 .loc 1 1053 0
 2997 001a 3B79     	 ldrb r3,[r7,#4]
 2998 001c 43F00203 	 orr r3,r3,#2
 2999 0020 3B71     	 strb r3,[r7,#4]
1054:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
 3000              	 .loc 1 1054 0
 3001 0022 3B79     	 ldrb r3,[r7,#4]
 3002 0024 43F00103 	 orr r3,r3,#1
 3003 0028 3B71     	 strb r3,[r7,#4]
1055:../Libraries/XMCLib/src/xmc_usbd.c **** #else
1056:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
1057:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
1058:../Libraries/XMCLib/src/xmc_usbd.c **** #endif
1059:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 3004              	 .loc 1 1059 0
 3005 002a 3B79     	 ldrb r3,[r7,#4]
 3006 002c 6FF34513 	 bfc r3,#5,#1
 3007 0030 3B71     	 strb r3,[r7,#4]
1060:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 3008              	 .loc 1 1060 0
 3009 0032 7B79     	 ldrb r3,[r7,#5]
 3010 0034 43F00103 	 orr r3,r3,#1
 3011 0038 7B71     	 strb r3,[r7,#5]
1061:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 3012              	 .loc 1 1061 0
 3013 003a 3B79     	 ldrb r3,[r7,#4]
 3014 003c 43F01003 	 orr r3,r3,#16
 3015 0040 3B71     	 strb r3,[r7,#4]
1062:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 3016              	 .loc 1 1062 0
 3017 0042 3B79     	 ldrb r3,[r7,#4]
 3018 0044 43F08003 	 orr r3,r3,#128
 3019 0048 3B71     	 strb r3,[r7,#4]
1063:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 3020              	 .loc 1 1063 0
 3021 004a 3B79     	 ldrb r3,[r7,#4]
 3022 004c 43F04003 	 orr r3,r3,#64
 3023 0050 3B71     	 strb r3,[r7,#4]
1064:../Libraries/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 3024              	 .loc 1 1064 0
 3025 0052 7B68     	 ldr r3,[r7,#4]
 3026 0054 6FF35F23 	 bfc r3,#9,#23
 3027 0058 7B60     	 str r3,[r7,#4]
1065:../Libraries/XMCLib/src/xmc_usbd.c ****   return cap;
 3028              	 .loc 1 1065 0
 3029 005a 7B68     	 ldr r3,[r7,#4]
1066:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3030              	 .loc 1 1066 0
 3031 005c 1846     	 mov r0,r3
 3032 005e 0C37     	 adds r7,r7,#12
 3033              	.LCFI132:
 3034              	 .cfi_def_cfa_offset 4
 3035 0060 BD46     	 mov sp,r7
 3036              	.LCFI133:
 3037              	 .cfi_def_cfa_register 13
 3038              	 
 3039 0062 5DF8047B 	 ldr r7,[sp],#4
 3040              	.LCFI134:
 3041              	 .cfi_restore 7
 3042              	 .cfi_def_cfa_offset 0
 3043 0066 7047     	 bx lr
 3044              	 .cfi_endproc
 3045              	.LFE175:
 3047              	 .section .text.XMC_USBD_Init,"ax",%progbits
 3048              	 .align 2
 3049              	 .global XMC_USBD_Init
 3050              	 .thumb
 3051              	 .thumb_func
 3053              	XMC_USBD_Init:
 3054              	.LFB176:
1067:../Libraries/XMCLib/src/xmc_usbd.c **** 
1068:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1069:../Libraries/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1070:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1071:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1072:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3055              	 .loc 1 1072 0
 3056              	 .cfi_startproc
 3057              	 
 3058              	 
 3059 0000 80B5     	 push {r7,lr}
 3060              	.LCFI135:
 3061              	 .cfi_def_cfa_offset 8
 3062              	 .cfi_offset 7,-8
 3063              	 .cfi_offset 14,-4
 3064 0002 8AB0     	 sub sp,sp,#40
 3065              	.LCFI136:
 3066              	 .cfi_def_cfa_offset 48
 3067 0004 00AF     	 add r7,sp,#0
 3068              	.LCFI137:
 3069              	 .cfi_def_cfa_register 7
 3070 0006 7860     	 str r0,[r7,#4]
1073:../Libraries/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1074:../Libraries/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1075:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1076:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1077:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1078:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1079:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1080:../Libraries/XMCLib/src/xmc_usbd.c **** 
1081:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1082:../Libraries/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1083:../Libraries/XMCLib/src/xmc_usbd.c ****   
1084:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 3071              	 .loc 1 1084 0
 3072 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1085:../Libraries/XMCLib/src/xmc_usbd.c ****   
1086:../Libraries/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 3073              	 .loc 1 1086 0
 3074 000c 874A     	 ldr r2,.L189
 3075 000e 7B68     	 ldr r3,[r7,#4]
 3076 0010 1360     	 str r3,[r2]
1087:../Libraries/XMCLib/src/xmc_usbd.c **** 
1088:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3077              	 .loc 1 1089 0
 3078 0012 0023     	 movs r3,#0
 3079 0014 7B62     	 str r3,[r7,#36]
 3080 0016 0CE0     	 b .L177
 3081              	.L178:
1090:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1091:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 3082              	 .loc 1 1091 0 discriminator 3
 3083 0018 854A     	 ldr r2,.L189+4
 3084 001a 7B6A     	 ldr r3,[r7,#36]
 3085 001c 4021     	 movs r1,#64
 3086 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1092:../Libraries/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 3087              	 .loc 1 1092 0 discriminator 3
 3088 0022 844A     	 ldr r2,.L189+8
 3089 0024 7B6A     	 ldr r3,[r7,#36]
 3090 0026 4021     	 movs r1,#64
 3091 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3092              	 .loc 1 1089 0 discriminator 3
 3093 002c 7B6A     	 ldr r3,[r7,#36]
 3094 002e 0133     	 adds r3,r3,#1
 3095 0030 7B62     	 str r3,[r7,#36]
 3096              	.L177:
1089:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3097              	 .loc 1 1089 0 is_stmt 0 discriminator 1
 3098 0032 7B6A     	 ldr r3,[r7,#36]
 3099 0034 062B     	 cmp r3,#6
 3100 0036 EFD9     	 bls .L178
1093:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1094:../Libraries/XMCLib/src/xmc_usbd.c **** 
1095:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1096:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
 3101              	 .loc 1 1096 0 is_stmt 1
 3102 0038 7F48     	 ldr r0,.L189+12
 3103 003a 0021     	 movs r1,#0
 3104 003c 4FF40272 	 mov r2,#520
 3105 0040 FFF7FEFF 	 bl memset
1097:../Libraries/XMCLib/src/xmc_usbd.c **** 
1098:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1099:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 3106              	 .loc 1 1099 0
 3107 0044 7B68     	 ldr r3,[r7,#4]
 3108 0046 5B68     	 ldr r3,[r3,#4]
 3109 0048 7B4A     	 ldr r2,.L189+12
 3110 004a C2F80032 	 str r3,[r2,#512]
1100:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 3111              	 .loc 1 1100 0
 3112 004e 7B68     	 ldr r3,[r7,#4]
 3113 0050 9B68     	 ldr r3,[r3,#8]
 3114 0052 794A     	 ldr r2,.L189+12
 3115 0054 C2F80432 	 str r3,[r2,#516]
1101:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 3116              	 .loc 1 1101 0
 3117 0058 7B68     	 ldr r3,[r7,#4]
 3118 005a 1B68     	 ldr r3,[r3]
 3119 005c 3B62     	 str r3,[r7,#32]
1102:../Libraries/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1103:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
 3120              	 .loc 1 1103 0
 3121 005e 7B68     	 ldr r3,[r7,#4]
 3122 0060 1B68     	 ldr r3,[r3]
 3123 0062 754A     	 ldr r2,.L189+12
 3124 0064 C2F8A031 	 str r3,[r2,#416]
1104:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 3125              	 .loc 1 1104 0
 3126 0068 3B6A     	 ldr r3,[r7,#32]
 3127 006a 03F50063 	 add r3,r3,#2048
 3128 006e 724A     	 ldr r2,.L189+12
 3129 0070 C2F8A431 	 str r3,[r2,#420]
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3130              	 .loc 1 1105 0
 3131 0074 0023     	 movs r3,#0
 3132 0076 7B62     	 str r3,[r7,#36]
 3133 0078 0CE0     	 b .L179
 3134              	.L180:
1106:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1107:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
 3135              	 .loc 1 1107 0 discriminator 3
 3136 007a 7B6A     	 ldr r3,[r7,#36]
 3137 007c 4833     	 adds r3,r3,#72
 3138 007e 5B01     	 lsls r3,r3,#5
 3139 0080 3A6A     	 ldr r2,[r7,#32]
 3140 0082 1A44     	 add r2,r2,r3
 3141 0084 6C49     	 ldr r1,.L189+12
 3142 0086 7B6A     	 ldr r3,[r7,#36]
 3143 0088 6A33     	 adds r3,r3,#106
 3144 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3145              	 .loc 1 1105 0 discriminator 3
 3146 008e 7B6A     	 ldr r3,[r7,#36]
 3147 0090 0133     	 adds r3,r3,#1
 3148 0092 7B62     	 str r3,[r7,#36]
 3149              	.L179:
1105:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3150              	 .loc 1 1105 0 is_stmt 0 discriminator 1
 3151 0094 7B6A     	 ldr r3,[r7,#36]
 3152 0096 062B     	 cmp r3,#6
 3153 0098 EFD9     	 bls .L180
1108:../Libraries/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1109:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3154              	 .loc 1 1110 0 is_stmt 1
 3155 009a 0023     	 movs r3,#0
 3156 009c 7B62     	 str r3,[r7,#36]
 3157 009e 0DE0     	 b .L181
 3158              	.L182:
1111:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1112:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1113:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3159              	 .loc 1 1113 0 discriminator 3
 3160 00a0 7B6A     	 ldr r3,[r7,#36]
 3161 00a2 5833     	 adds r3,r3,#88
 3162 00a4 5B01     	 lsls r3,r3,#5
 3163 00a6 3A6A     	 ldr r2,[r7,#32]
 3164 00a8 1A44     	 add r2,r2,r3
1112:../Libraries/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3165              	 .loc 1 1112 0 discriminator 3
 3166 00aa 6349     	 ldr r1,.L189+12
 3167 00ac 7B6A     	 ldr r3,[r7,#36]
 3168 00ae 7033     	 adds r3,r3,#112
 3169 00b0 9B00     	 lsls r3,r3,#2
 3170 00b2 0B44     	 add r3,r3,r1
 3171 00b4 5A60     	 str r2,[r3,#4]
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3172              	 .loc 1 1110 0 discriminator 3
 3173 00b6 7B6A     	 ldr r3,[r7,#36]
 3174 00b8 0133     	 adds r3,r3,#1
 3175 00ba 7B62     	 str r3,[r7,#36]
 3176              	.L181:
1110:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3177              	 .loc 1 1110 0 is_stmt 0 discriminator 1
 3178 00bc 7B6A     	 ldr r3,[r7,#36]
 3179 00be 062B     	 cmp r3,#6
 3180 00c0 EED9     	 bls .L182
1114:../Libraries/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1115:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
 3181              	 .loc 1 1116 0 is_stmt 1
 3182 00c2 0023     	 movs r3,#0
 3183 00c4 7B62     	 str r3,[r7,#36]
 3184 00c6 0CE0     	 b .L183
 3185              	.L184:
1117:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1118:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1119:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3186              	 .loc 1 1119 0 discriminator 3
 3187 00c8 7B6A     	 ldr r3,[r7,#36]
 3188 00ca 0133     	 adds r3,r3,#1
 3189 00cc 1B03     	 lsls r3,r3,#12
 3190 00ce 3A6A     	 ldr r2,[r7,#32]
 3191 00d0 1A44     	 add r2,r2,r3
1118:../Libraries/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3192              	 .loc 1 1118 0 discriminator 3
 3193 00d2 5949     	 ldr r1,.L189+12
 3194 00d4 7B6A     	 ldr r3,[r7,#36]
 3195 00d6 7833     	 adds r3,r3,#120
 3196 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3197              	 .loc 1 1116 0 discriminator 3
 3198 00dc 7B6A     	 ldr r3,[r7,#36]
 3199 00de 0133     	 adds r3,r3,#1
 3200 00e0 7B62     	 str r3,[r7,#36]
 3201              	.L183:
1116:../Libraries/XMCLib/src/xmc_usbd.c ****   {
 3202              	 .loc 1 1116 0 is_stmt 0 discriminator 1
 3203 00e2 7B6A     	 ldr r3,[r7,#36]
 3204 00e4 062B     	 cmp r3,#6
 3205 00e6 EFD9     	 bls .L184
1120:../Libraries/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1121:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1122:../Libraries/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1123:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1124:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1125:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3206              	 .loc 1 1125 0 is_stmt 1
 3207 00e8 534B     	 ldr r3,.L189+12
 3208 00ea D3F8A031 	 ldr r3,[r3,#416]
 3209 00ee 9B68     	 ldr r3,[r3,#8]
 3210 00f0 FB61     	 str r3,[r7,#28]
1126:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3211              	 .loc 1 1126 0
 3212 00f2 3B7F     	 ldrb r3,[r7,#28]
 3213 00f4 43F00103 	 orr r3,r3,#1
 3214 00f8 3B77     	 strb r3,[r7,#28]
1127:../Libraries/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3215              	 .loc 1 1127 0
 3216 00fa 3B7F     	 ldrb r3,[r7,#28]
 3217 00fc 43F08003 	 orr r3,r3,#128
 3218 0100 3B77     	 strb r3,[r7,#28]
1128:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3219              	 .loc 1 1128 0
 3220 0102 7B68     	 ldr r3,[r7,#4]
 3221 0104 5B7B     	 ldrb r3,[r3,#13]
 3222 0106 002B     	 cmp r3,#0
 3223 0108 04D1     	 bne .L185
1129:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1130:../Libraries/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1131:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3224              	 .loc 1 1131 0
 3225 010a 3B7F     	 ldrb r3,[r7,#28]
 3226 010c 43F02003 	 orr r3,r3,#32
 3227 0110 3B77     	 strb r3,[r7,#28]
 3228 0112 03E0     	 b .L186
 3229              	.L185:
1132:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1133:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1134:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1135:../Libraries/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3230              	 .loc 1 1135 0
 3231 0114 3B7F     	 ldrb r3,[r7,#28]
 3232 0116 6FF34513 	 bfc r3,#5,#1
 3233 011a 3B77     	 strb r3,[r7,#28]
 3234              	.L186:
1136:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1137:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3235              	 .loc 1 1137 0
 3236 011c 464B     	 ldr r3,.L189+12
 3237 011e D3F8A031 	 ldr r3,[r3,#416]
 3238 0122 FA69     	 ldr r2,[r7,#28]
 3239 0124 9A60     	 str r2,[r3,#8]
1138:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1139:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
 3240              	 .loc 1 1139 0
 3241 0126 444B     	 ldr r3,.L189+12
 3242 0128 D3F8A031 	 ldr r3,[r3,#416]
 3243 012c DB68     	 ldr r3,[r3,#12]
 3244 012e BB61     	 str r3,[r7,#24]
1140:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3245              	 .loc 1 1140 0
 3246 0130 FB7E     	 ldrb r3,[r7,#27]
 3247 0132 43F04003 	 orr r3,r3,#64
 3248 0136 FB76     	 strb r3,[r7,#27]
1141:../Libraries/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3249              	 .loc 1 1141 0
 3250 0138 7B7E     	 ldrb r3,[r7,#25]
 3251 013a 43F00103 	 orr r3,r3,#1
 3252 013e 7B76     	 strb r3,[r7,#25]
1142:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3253              	 .loc 1 1142 0
 3254 0140 3D4B     	 ldr r3,.L189+12
 3255 0142 D3F8A031 	 ldr r3,[r3,#416]
 3256 0146 BA69     	 ldr r2,[r7,#24]
 3257 0148 DA60     	 str r2,[r3,#12]
1143:../Libraries/XMCLib/src/xmc_usbd.c **** 
1144:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Device init */
1145:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1146:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3258              	 .loc 1 1146 0
 3259 014a 3B4B     	 ldr r3,.L189+12
 3260 014c D3F8A431 	 ldr r3,[r3,#420]
 3261 0150 1B68     	 ldr r3,[r3]
 3262 0152 7B61     	 str r3,[r7,#20]
1147:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3263              	 .loc 1 1147 0
 3264 0154 3B7D     	 ldrb r3,[r7,#20]
 3265 0156 43F00303 	 orr r3,r3,#3
 3266 015a 3B75     	 strb r3,[r7,#20]
1148:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3267              	 .loc 1 1148 0
 3268 015c BB7D     	 ldrb r3,[r7,#22]
 3269 015e 6FF3C713 	 bfc r3,#7,#1
 3270 0162 BB75     	 strb r3,[r7,#22]
1149:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3271              	 .loc 1 1149 0
 3272 0164 344B     	 ldr r3,.L189+12
 3273 0166 D3F8A431 	 ldr r3,[r3,#420]
 3274 016a 7A69     	 ldr r2,[r7,#20]
 3275 016c 1A60     	 str r2,[r3]
1150:../Libraries/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1151:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3276              	 .loc 1 1151 0
 3277 016e 324B     	 ldr r3,.L189+12
 3278 0170 D3F8A431 	 ldr r3,[r3,#420]
 3279 0174 5B68     	 ldr r3,[r3,#4]
 3280 0176 3B61     	 str r3,[r7,#16]
1152:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3281              	 .loc 1 1152 0
 3282 0178 3B7C     	 ldrb r3,[r7,#16]
 3283 017a 43F00203 	 orr r3,r3,#2
 3284 017e 3B74     	 strb r3,[r7,#16]
1153:../Libraries/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1154:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3285              	 .loc 1 1154 0
 3286 0180 2D4B     	 ldr r3,.L189+12
 3287 0182 D3F8A431 	 ldr r3,[r3,#420]
 3288 0186 3A69     	 ldr r2,[r7,#16]
 3289 0188 5A60     	 str r2,[r3,#4]
1155:../Libraries/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1156:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3290              	 .loc 1 1156 0
 3291 018a 1020     	 movs r0,#16
 3292 018c FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1157:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3293              	 .loc 1 1157 0
 3294 0190 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1158:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1159:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1160:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3295              	 .loc 1 1160 0
 3296 0194 284B     	 ldr r3,.L189+12
 3297 0196 D3F8A031 	 ldr r3,[r3,#416]
 3298 019a 0022     	 movs r2,#0
 3299 019c 9A61     	 str r2,[r3,#24]
1161:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3300              	 .loc 1 1161 0
 3301 019e 264B     	 ldr r3,.L189+12
 3302 01a0 D3F8A031 	 ldr r3,[r3,#416]
 3303 01a4 4FF0FF32 	 mov r2,#-1
 3304 01a8 5A61     	 str r2,[r3,#20]
1162:../Libraries/XMCLib/src/xmc_usbd.c ****  
1163:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3305              	 .loc 1 1163 0
 3306 01aa 0023     	 movs r3,#0
 3307 01ac FB60     	 str r3,[r7,#12]
1164:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1165:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3308              	 .loc 1 1165 0
 3309 01ae 3B7B     	 ldrb r3,[r7,#12]
 3310 01b0 43F00203 	 orr r3,r3,#2
 3311 01b4 3B73     	 strb r3,[r7,#12]
1166:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3312              	 .loc 1 1166 0
 3313 01b6 3B7B     	 ldrb r3,[r7,#12]
 3314 01b8 43F00403 	 orr r3,r3,#4
 3315 01bc 3B73     	 strb r3,[r7,#12]
1167:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3316              	 .loc 1 1167 0
 3317 01be FB7B     	 ldrb r3,[r7,#15]
 3318 01c0 43F04003 	 orr r3,r3,#64
 3319 01c4 FB73     	 strb r3,[r7,#15]
1168:../Libraries/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1169:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3320              	 .loc 1 1169 0
 3321 01c6 7B7B     	 ldrb r3,[r7,#13]
 3322 01c8 43F01003 	 orr r3,r3,#16
 3323 01cc 7B73     	 strb r3,[r7,#13]
1170:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3324              	 .loc 1 1170 0
 3325 01ce 7B7B     	 ldrb r3,[r7,#13]
 3326 01d0 43F02003 	 orr r3,r3,#32
 3327 01d4 7B73     	 strb r3,[r7,#13]
1171:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3328              	 .loc 1 1171 0
 3329 01d6 7B7B     	 ldrb r3,[r7,#13]
 3330 01d8 43F00403 	 orr r3,r3,#4
 3331 01dc 7B73     	 strb r3,[r7,#13]
1172:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3332              	 .loc 1 1172 0
 3333 01de 7B7B     	 ldrb r3,[r7,#13]
 3334 01e0 43F00803 	 orr r3,r3,#8
 3335 01e4 7B73     	 strb r3,[r7,#13]
1173:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3336              	 .loc 1 1173 0
 3337 01e6 FB7B     	 ldrb r3,[r7,#15]
 3338 01e8 43F08003 	 orr r3,r3,#128
 3339 01ec FB73     	 strb r3,[r7,#15]
1174:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3340              	 .loc 1 1174 0
 3341 01ee 3B7B     	 ldrb r3,[r7,#12]
 3342 01f0 43F00803 	 orr r3,r3,#8
 3343 01f4 3B73     	 strb r3,[r7,#12]
1175:../Libraries/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3344              	 .loc 1 1175 0
 3345 01f6 7B68     	 ldr r3,[r7,#4]
 3346 01f8 5B7B     	 ldrb r3,[r3,#13]
 3347 01fa 012B     	 cmp r3,#1
 3348 01fc 03D1     	 bne .L187
1176:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1177:../Libraries/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3349              	 .loc 1 1177 0
 3350 01fe 3B7B     	 ldrb r3,[r7,#12]
 3351 0200 43F01003 	 orr r3,r3,#16
 3352 0204 3B73     	 strb r3,[r7,#12]
 3353              	.L187:
1178:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1179:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3354              	 .loc 1 1179 0
 3355 0206 BB7B     	 ldrb r3,[r7,#14]
 3356 0208 43F00803 	 orr r3,r3,#8
 3357 020c BB73     	 strb r3,[r7,#14]
1180:../Libraries/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3358              	 .loc 1 1180 0
 3359 020e BB7B     	 ldrb r3,[r7,#14]
 3360 0210 43F00403 	 orr r3,r3,#4
 3361 0214 BB73     	 strb r3,[r7,#14]
1181:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3362              	 .loc 1 1181 0
 3363 0216 084B     	 ldr r3,.L189+12
 3364 0218 D3F8A031 	 ldr r3,[r3,#416]
 3365 021c FA68     	 ldr r2,[r7,#12]
 3366 021e 9A61     	 str r2,[r3,#24]
1182:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3367              	 .loc 1 1182 0
 3368 0220 0023     	 movs r3,#0
1183:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3369              	 .loc 1 1183 0
 3370 0222 1846     	 mov r0,r3
 3371 0224 2837     	 adds r7,r7,#40
 3372              	.LCFI138:
 3373              	 .cfi_def_cfa_offset 8
 3374 0226 BD46     	 mov sp,r7
 3375              	.LCFI139:
 3376              	 .cfi_def_cfa_register 13
 3377              	 
 3378 0228 80BD     	 pop {r7,pc}
 3379              	.L190:
 3380 022a 00BF     	 .align 2
 3381              	.L189:
 3382 022c 00000000 	 .word usbd_init
 3383 0230 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3384 0234 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3385 0238 00000000 	 .word xmc_device
 3386              	 .cfi_endproc
 3387              	.LFE176:
 3389              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3390              	 .align 2
 3391              	 .global XMC_USBD_Uninitialize
 3392              	 .thumb
 3393              	 .thumb_func
 3395              	XMC_USBD_Uninitialize:
 3396              	.LFB177:
1184:../Libraries/XMCLib/src/xmc_usbd.c **** 
1185:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1186:../Libraries/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1187:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1188:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1189:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3397              	 .loc 1 1189 0
 3398              	 .cfi_startproc
 3399              	 
 3400              	 
 3401 0000 80B5     	 push {r7,lr}
 3402              	.LCFI140:
 3403              	 .cfi_def_cfa_offset 8
 3404              	 .cfi_offset 7,-8
 3405              	 .cfi_offset 14,-4
 3406 0002 82B0     	 sub sp,sp,#8
 3407              	.LCFI141:
 3408              	 .cfi_def_cfa_offset 16
 3409 0004 00AF     	 add r7,sp,#0
 3410              	.LCFI142:
 3411              	 .cfi_def_cfa_register 7
1190:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1191:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1192:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3412              	 .loc 1 1192 0
 3413 0006 0C4B     	 ldr r3,.L193
 3414 0008 D3F8A431 	 ldr r3,[r3,#420]
 3415 000c 5B68     	 ldr r3,[r3,#4]
 3416 000e 7B60     	 str r3,[r7,#4]
1193:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3417              	 .loc 1 1193 0
 3418 0010 3B79     	 ldrb r3,[r7,#4]
 3419 0012 43F00203 	 orr r3,r3,#2
 3420 0016 3B71     	 strb r3,[r7,#4]
1194:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3421              	 .loc 1 1194 0
 3422 0018 074B     	 ldr r3,.L193
 3423 001a D3F8A431 	 ldr r3,[r3,#420]
 3424 001e 7A68     	 ldr r2,[r7,#4]
 3425 0020 5A60     	 str r2,[r3,#4]
1195:../Libraries/XMCLib/src/xmc_usbd.c ****   /* clean up */
1196:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
 3426              	 .loc 1 1196 0
 3427 0022 0548     	 ldr r0,.L193
 3428 0024 0021     	 movs r1,#0
 3429 0026 4FF40272 	 mov r2,#520
 3430 002a FFF7FEFF 	 bl memset
1197:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3431              	 .loc 1 1197 0
 3432 002e 0023     	 movs r3,#0
1198:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3433              	 .loc 1 1198 0
 3434 0030 1846     	 mov r0,r3
 3435 0032 0837     	 adds r7,r7,#8
 3436              	.LCFI143:
 3437              	 .cfi_def_cfa_offset 8
 3438 0034 BD46     	 mov sp,r7
 3439              	.LCFI144:
 3440              	 .cfi_def_cfa_register 13
 3441              	 
 3442 0036 80BD     	 pop {r7,pc}
 3443              	.L194:
 3444              	 .align 2
 3445              	.L193:
 3446 0038 00000000 	 .word xmc_device
 3447              	 .cfi_endproc
 3448              	.LFE177:
 3450              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3451              	 .align 2
 3452              	 .global XMC_USBD_DeviceConnect
 3453              	 .thumb
 3454              	 .thumb_func
 3456              	XMC_USBD_DeviceConnect:
 3457              	.LFB178:
1199:../Libraries/XMCLib/src/xmc_usbd.c **** 
1200:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1201:../Libraries/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1202:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1203:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1204:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3458              	 .loc 1 1204 0
 3459              	 .cfi_startproc
 3460              	 
 3461              	 
 3462              	 
 3463 0000 80B4     	 push {r7}
 3464              	.LCFI145:
 3465              	 .cfi_def_cfa_offset 4
 3466              	 .cfi_offset 7,-4
 3467 0002 83B0     	 sub sp,sp,#12
 3468              	.LCFI146:
 3469              	 .cfi_def_cfa_offset 16
 3470 0004 00AF     	 add r7,sp,#0
 3471              	.LCFI147:
 3472              	 .cfi_def_cfa_register 7
1205:../Libraries/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1206:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1207:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3473              	 .loc 1 1207 0
 3474 0006 0A4B     	 ldr r3,.L197
 3475 0008 D3F8A431 	 ldr r3,[r3,#420]
 3476 000c 5B68     	 ldr r3,[r3,#4]
 3477 000e 7B60     	 str r3,[r7,#4]
1208:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3478              	 .loc 1 1208 0
 3479 0010 3B79     	 ldrb r3,[r7,#4]
 3480 0012 6FF34103 	 bfc r3,#1,#1
 3481 0016 3B71     	 strb r3,[r7,#4]
1209:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3482              	 .loc 1 1209 0
 3483 0018 054B     	 ldr r3,.L197
 3484 001a D3F8A431 	 ldr r3,[r3,#420]
 3485 001e 7A68     	 ldr r2,[r7,#4]
 3486 0020 5A60     	 str r2,[r3,#4]
1210:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3487              	 .loc 1 1210 0
 3488 0022 0023     	 movs r3,#0
1211:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3489              	 .loc 1 1211 0
 3490 0024 1846     	 mov r0,r3
 3491 0026 0C37     	 adds r7,r7,#12
 3492              	.LCFI148:
 3493              	 .cfi_def_cfa_offset 4
 3494 0028 BD46     	 mov sp,r7
 3495              	.LCFI149:
 3496              	 .cfi_def_cfa_register 13
 3497              	 
 3498 002a 5DF8047B 	 ldr r7,[sp],#4
 3499              	.LCFI150:
 3500              	 .cfi_restore 7
 3501              	 .cfi_def_cfa_offset 0
 3502 002e 7047     	 bx lr
 3503              	.L198:
 3504              	 .align 2
 3505              	.L197:
 3506 0030 00000000 	 .word xmc_device
 3507              	 .cfi_endproc
 3508              	.LFE178:
 3510              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3511              	 .align 2
 3512              	 .global XMC_USBD_DeviceDisconnect
 3513              	 .thumb
 3514              	 .thumb_func
 3516              	XMC_USBD_DeviceDisconnect:
 3517              	.LFB179:
1212:../Libraries/XMCLib/src/xmc_usbd.c **** 
1213:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1214:../Libraries/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1215:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1216:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1217:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3518              	 .loc 1 1217 0
 3519              	 .cfi_startproc
 3520              	 
 3521              	 
 3522              	 
 3523 0000 80B4     	 push {r7}
 3524              	.LCFI151:
 3525              	 .cfi_def_cfa_offset 4
 3526              	 .cfi_offset 7,-4
 3527 0002 83B0     	 sub sp,sp,#12
 3528              	.LCFI152:
 3529              	 .cfi_def_cfa_offset 16
 3530 0004 00AF     	 add r7,sp,#0
 3531              	.LCFI153:
 3532              	 .cfi_def_cfa_register 7
1218:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../Libraries/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3533              	 .loc 1 1219 0
 3534 0006 0A4B     	 ldr r3,.L201
 3535 0008 D3F8A431 	 ldr r3,[r3,#420]
 3536 000c 5B68     	 ldr r3,[r3,#4]
 3537 000e 7B60     	 str r3,[r7,#4]
1220:../Libraries/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3538              	 .loc 1 1220 0
 3539 0010 3B79     	 ldrb r3,[r7,#4]
 3540 0012 43F00203 	 orr r3,r3,#2
 3541 0016 3B71     	 strb r3,[r7,#4]
1221:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3542              	 .loc 1 1221 0
 3543 0018 054B     	 ldr r3,.L201
 3544 001a D3F8A431 	 ldr r3,[r3,#420]
 3545 001e 7A68     	 ldr r2,[r7,#4]
 3546 0020 5A60     	 str r2,[r3,#4]
1222:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3547              	 .loc 1 1222 0
 3548 0022 0023     	 movs r3,#0
1223:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3549              	 .loc 1 1223 0
 3550 0024 1846     	 mov r0,r3
 3551 0026 0C37     	 adds r7,r7,#12
 3552              	.LCFI154:
 3553              	 .cfi_def_cfa_offset 4
 3554 0028 BD46     	 mov sp,r7
 3555              	.LCFI155:
 3556              	 .cfi_def_cfa_register 13
 3557              	 
 3558 002a 5DF8047B 	 ldr r7,[sp],#4
 3559              	.LCFI156:
 3560              	 .cfi_restore 7
 3561              	 .cfi_def_cfa_offset 0
 3562 002e 7047     	 bx lr
 3563              	.L202:
 3564              	 .align 2
 3565              	.L201:
 3566 0030 00000000 	 .word xmc_device
 3567              	 .cfi_endproc
 3568              	.LFE179:
 3570              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3571              	 .align 2
 3572              	 .global XMC_USBD_DeviceGetState
 3573              	 .thumb
 3574              	 .thumb_func
 3576              	XMC_USBD_DeviceGetState:
 3577              	.LFB180:
1224:../Libraries/XMCLib/src/xmc_usbd.c **** 
1225:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1226:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1227:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1228:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1229:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3578              	 .loc 1 1229 0
 3579              	 .cfi_startproc
 3580              	 
 3581              	 
 3582 0000 80B5     	 push {r7,lr}
 3583              	.LCFI157:
 3584              	 .cfi_def_cfa_offset 8
 3585              	 .cfi_offset 7,-8
 3586              	 .cfi_offset 14,-4
 3587 0002 84B0     	 sub sp,sp,#16
 3588              	.LCFI158:
 3589              	 .cfi_def_cfa_offset 24
 3590 0004 00AF     	 add r7,sp,#0
 3591              	.LCFI159:
 3592              	 .cfi_def_cfa_register 7
 3593 0006 7860     	 str r0,[r7,#4]
1230:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 3594              	 .loc 1 1230 0
 3595 0008 0023     	 movs r3,#0
 3596 000a FB60     	 str r3,[r7,#12]
1231:../Libraries/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3597              	 .loc 1 1231 0
 3598 000c 3B7B     	 ldrb r3,[r7,#12]
 3599 000e 0122     	 movs r2,#1
 3600 0010 62F3C403 	 bfi r3,r2,#3,#2
 3601 0014 3B73     	 strb r3,[r7,#12]
1232:../Libraries/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3602              	 .loc 1 1232 0
 3603 0016 124B     	 ldr r3,.L205
 3604 0018 93F8FE31 	 ldrb r3,[r3,#510]
 3605 001c C3F30003 	 ubfx r3,r3,#0,#1
 3606 0020 DAB2     	 uxtb r2,r3
 3607 0022 3B7B     	 ldrb r3,[r7,#12]
 3608 0024 62F34103 	 bfi r3,r2,#1,#1
 3609 0028 3B73     	 strb r3,[r7,#12]
1233:../Libraries/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3610              	 .loc 1 1233 0
 3611 002a 7868     	 ldr r0,[r7,#4]
 3612 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3613 0030 0346     	 mov r3,r0
 3614 0032 03F00103 	 and r3,r3,#1
 3615 0036 DAB2     	 uxtb r2,r3
 3616 0038 3B7B     	 ldrb r3,[r7,#12]
 3617 003a 62F38203 	 bfi r3,r2,#2,#1
 3618 003e 3B73     	 strb r3,[r7,#12]
1234:../Libraries/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3619              	 .loc 1 1234 0
 3620 0040 074B     	 ldr r3,.L205
 3621 0042 93F8FE31 	 ldrb r3,[r3,#510]
 3622 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3623 004a DAB2     	 uxtb r2,r3
 3624 004c 3B7B     	 ldrb r3,[r7,#12]
 3625 004e 62F30003 	 bfi r3,r2,#0,#1
 3626 0052 3B73     	 strb r3,[r7,#12]
1235:../Libraries/XMCLib/src/xmc_usbd.c ****   return state;
 3627              	 .loc 1 1235 0
 3628 0054 FB68     	 ldr r3,[r7,#12]
1236:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3629              	 .loc 1 1236 0
 3630 0056 1846     	 mov r0,r3
 3631 0058 1037     	 adds r7,r7,#16
 3632              	.LCFI160:
 3633              	 .cfi_def_cfa_offset 8
 3634 005a BD46     	 mov sp,r7
 3635              	.LCFI161:
 3636              	 .cfi_def_cfa_register 13
 3637              	 
 3638 005c 80BD     	 pop {r7,pc}
 3639              	.L206:
 3640 005e 00BF     	 .align 2
 3641              	.L205:
 3642 0060 00000000 	 .word xmc_device
 3643              	 .cfi_endproc
 3644              	.LFE180:
 3646              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3647              	 .align 2
 3648              	 .global XMC_USBD_EndpointReadStart
 3649              	 .thumb
 3650              	 .thumb_func
 3652              	XMC_USBD_EndpointReadStart:
 3653              	.LFB181:
1237:../Libraries/XMCLib/src/xmc_usbd.c **** 
1238:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1239:../Libraries/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1240:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1241:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1242:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3654              	 .loc 1 1242 0
 3655              	 .cfi_startproc
 3656              	 
 3657              	 
 3658 0000 80B5     	 push {r7,lr}
 3659              	.LCFI162:
 3660              	 .cfi_def_cfa_offset 8
 3661              	 .cfi_offset 7,-8
 3662              	 .cfi_offset 14,-4
 3663 0002 84B0     	 sub sp,sp,#16
 3664              	.LCFI163:
 3665              	 .cfi_def_cfa_offset 24
 3666 0004 00AF     	 add r7,sp,#0
 3667              	.LCFI164:
 3668              	 .cfi_def_cfa_register 7
 3669 0006 0346     	 mov r3,r0
 3670 0008 3960     	 str r1,[r7]
 3671 000a FB71     	 strb r3,[r7,#7]
1243:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3672              	 .loc 1 1243 0
 3673 000c FB79     	 ldrb r3,[r7,#7]
 3674 000e 03F00F03 	 and r3,r3,#15
 3675 0012 3422     	 movs r2,#52
 3676 0014 02FB03F3 	 mul r3,r2,r3
 3677 0018 1B4A     	 ldr r2,.L213
 3678 001a 1344     	 add r3,r3,r2
 3679 001c BB60     	 str r3,[r7,#8]
1244:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1245:../Libraries/XMCLib/src/xmc_usbd.c **** 	
1246:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3680              	 .loc 1 1246 0
 3681 001e BB68     	 ldr r3,[r7,#8]
 3682 0020 5B68     	 ldr r3,[r3,#4]
 3683 0022 1B09     	 lsrs r3,r3,#4
 3684 0024 03F00103 	 and r3,r3,#1
 3685 0028 DBB2     	 uxtb r3,r3
 3686 002a 002B     	 cmp r3,#0
 3687 002c 06D1     	 bne .L208
 3688              	 .loc 1 1246 0 is_stmt 0 discriminator 1
 3689 002e BB68     	 ldr r3,[r7,#8]
 3690 0030 1B79     	 ldrb r3,[r3,#4]
 3691 0032 03F00403 	 and r3,r3,#4
 3692 0036 DBB2     	 uxtb r3,r3
 3693 0038 002B     	 cmp r3,#0
 3694 003a 02D1     	 bne .L209
 3695              	.L208:
1247:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1248:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3696              	 .loc 1 1248 0 is_stmt 1
 3697 003c 0123     	 movs r3,#1
 3698 003e FB73     	 strb r3,[r7,#15]
 3699 0040 1CE0     	 b .L210
 3700              	.L209:
1249:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1250:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1251:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1252:../Libraries/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1253:../Libraries/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3701              	 .loc 1 1253 0
 3702 0042 BB68     	 ldr r3,[r7,#8]
 3703 0044 5A69     	 ldr r2,[r3,#20]
 3704 0046 3B68     	 ldr r3,[r7]
 3705 0048 9A42     	 cmp r2,r3
 3706 004a 02D2     	 bcs .L211
1254:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1255:../Libraries/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3707              	 .loc 1 1255 0
 3708 004c BB68     	 ldr r3,[r7,#8]
 3709 004e 5B69     	 ldr r3,[r3,#20]
 3710 0050 3B60     	 str r3,[r7]
 3711              	.L211:
1256:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1257:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1258:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3712              	 .loc 1 1258 0
 3713 0052 BB68     	 ldr r3,[r7,#8]
 3714 0054 3A68     	 ldr r2,[r7]
 3715 0056 1A63     	 str r2,[r3,#48]
1259:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3716              	 .loc 1 1259 0
 3717 0058 BB68     	 ldr r3,[r7,#8]
 3718 005a 0022     	 movs r2,#0
 3719 005c DA62     	 str r2,[r3,#44]
1260:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3720              	 .loc 1 1260 0
 3721 005e BB68     	 ldr r3,[r7,#8]
 3722 0060 0022     	 movs r2,#0
 3723 0062 9A62     	 str r2,[r3,#40]
1261:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3724              	 .loc 1 1261 0
 3725 0064 BB68     	 ldr r3,[r7,#8]
 3726 0066 DA68     	 ldr r2,[r3,#12]
 3727 0068 BB68     	 ldr r3,[r7,#8]
 3728 006a 5A62     	 str r2,[r3,#36]
1262:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3729              	 .loc 1 1262 0
 3730 006c BB68     	 ldr r3,[r7,#8]
 3731 006e 0022     	 movs r2,#0
 3732 0070 1A61     	 str r2,[r3,#16]
1263:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3733              	 .loc 1 1263 0
 3734 0072 B868     	 ldr r0,[r7,#8]
 3735 0074 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1264:../Libraries/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 3736              	 .loc 1 1264 0
 3737 0078 0023     	 movs r3,#0
 3738 007a FB73     	 strb r3,[r7,#15]
 3739              	.L210:
1265:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1266:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3740              	 .loc 1 1266 0
 3741 007c FB7B     	 ldrb r3,[r7,#15]
1267:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3742              	 .loc 1 1267 0
 3743 007e 1846     	 mov r0,r3
 3744 0080 1037     	 adds r7,r7,#16
 3745              	.LCFI165:
 3746              	 .cfi_def_cfa_offset 8
 3747 0082 BD46     	 mov sp,r7
 3748              	.LCFI166:
 3749              	 .cfi_def_cfa_register 13
 3750              	 
 3751 0084 80BD     	 pop {r7,pc}
 3752              	.L214:
 3753 0086 00BF     	 .align 2
 3754              	.L213:
 3755 0088 00000000 	 .word xmc_device
 3756              	 .cfi_endproc
 3757              	.LFE181:
 3759              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3760              	 .align 2
 3761              	 .global XMC_USBD_EndpointRead
 3762              	 .thumb
 3763              	 .thumb_func
 3765              	XMC_USBD_EndpointRead:
 3766              	.LFB182:
1268:../Libraries/XMCLib/src/xmc_usbd.c **** 
1269:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1270:../Libraries/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1271:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1272:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1273:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3767              	 .loc 1 1273 0
 3768              	 .cfi_startproc
 3769              	 
 3770              	 
 3771 0000 80B5     	 push {r7,lr}
 3772              	.LCFI167:
 3773              	 .cfi_def_cfa_offset 8
 3774              	 .cfi_offset 7,-8
 3775              	 .cfi_offset 14,-4
 3776 0002 86B0     	 sub sp,sp,#24
 3777              	.LCFI168:
 3778              	 .cfi_def_cfa_offset 32
 3779 0004 00AF     	 add r7,sp,#0
 3780              	.LCFI169:
 3781              	 .cfi_def_cfa_register 7
 3782 0006 0346     	 mov r3,r0
 3783 0008 B960     	 str r1,[r7,#8]
 3784 000a 7A60     	 str r2,[r7,#4]
 3785 000c FB73     	 strb r3,[r7,#15]
1274:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3786              	 .loc 1 1274 0
 3787 000e FB7B     	 ldrb r3,[r7,#15]
 3788 0010 3422     	 movs r2,#52
 3789 0012 02FB03F3 	 mul r3,r2,r3
 3790 0016 174A     	 ldr r2,.L220
 3791 0018 1344     	 add r3,r3,r2
 3792 001a 7B61     	 str r3,[r7,#20]
1275:../Libraries/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3793              	 .loc 1 1275 0
 3794 001c 7B69     	 ldr r3,[r7,#20]
 3795 001e 1A69     	 ldr r2,[r3,#16]
 3796 0020 7B68     	 ldr r3,[r7,#4]
 3797 0022 9A42     	 cmp r2,r3
 3798 0024 02D2     	 bcs .L216
1276:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1277:../Libraries/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 3799              	 .loc 1 1277 0
 3800 0026 7B69     	 ldr r3,[r7,#20]
 3801 0028 1B69     	 ldr r3,[r3,#16]
 3802 002a 7B60     	 str r3,[r7,#4]
 3803              	.L216:
1278:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1279:../Libraries/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
 3804              	 .loc 1 1279 0
 3805 002c 7B69     	 ldr r3,[r7,#20]
 3806 002e DA68     	 ldr r2,[r3,#12]
 3807 0030 7B69     	 ldr r3,[r7,#20]
 3808 0032 9B69     	 ldr r3,[r3,#24]
 3809 0034 1344     	 add r3,r3,r2
 3810 0036 B868     	 ldr r0,[r7,#8]
 3811 0038 1946     	 mov r1,r3
 3812 003a 7A68     	 ldr r2,[r7,#4]
 3813 003c FFF7FEFF 	 bl memcpy
1280:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 3814              	 .loc 1 1280 0
 3815 0040 7B69     	 ldr r3,[r7,#20]
 3816 0042 1A69     	 ldr r2,[r3,#16]
 3817 0044 7B68     	 ldr r3,[r7,#4]
 3818 0046 D21A     	 subs r2,r2,r3
 3819 0048 7B69     	 ldr r3,[r7,#20]
 3820 004a 1A61     	 str r2,[r3,#16]
1281:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 3821              	 .loc 1 1281 0
 3822 004c 7B69     	 ldr r3,[r7,#20]
 3823 004e 1B69     	 ldr r3,[r3,#16]
 3824 0050 002B     	 cmp r3,#0
 3825 0052 06D0     	 beq .L217
1282:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1283:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 3826              	 .loc 1 1283 0
 3827 0054 7B69     	 ldr r3,[r7,#20]
 3828 0056 9A69     	 ldr r2,[r3,#24]
 3829 0058 7B68     	 ldr r3,[r7,#4]
 3830 005a 1A44     	 add r2,r2,r3
 3831 005c 7B69     	 ldr r3,[r7,#20]
 3832 005e 9A61     	 str r2,[r3,#24]
 3833 0060 02E0     	 b .L218
 3834              	.L217:
1284:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1285:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1286:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1287:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 3835              	 .loc 1 1287 0
 3836 0062 7B69     	 ldr r3,[r7,#20]
 3837 0064 0022     	 movs r2,#0
 3838 0066 9A61     	 str r2,[r3,#24]
 3839              	.L218:
1288:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1289:../Libraries/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 3840              	 .loc 1 1289 0
 3841 0068 7B68     	 ldr r3,[r7,#4]
1290:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3842              	 .loc 1 1290 0
 3843 006a 1846     	 mov r0,r3
 3844 006c 1837     	 adds r7,r7,#24
 3845              	.LCFI170:
 3846              	 .cfi_def_cfa_offset 8
 3847 006e BD46     	 mov sp,r7
 3848              	.LCFI171:
 3849              	 .cfi_def_cfa_register 13
 3850              	 
 3851 0070 80BD     	 pop {r7,pc}
 3852              	.L221:
 3853 0072 00BF     	 .align 2
 3854              	.L220:
 3855 0074 00000000 	 .word xmc_device
 3856              	 .cfi_endproc
 3857              	.LFE182:
 3859              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 3860              	 .align 2
 3861              	 .global XMC_USBD_EndpointWrite
 3862              	 .thumb
 3863              	 .thumb_func
 3865              	XMC_USBD_EndpointWrite:
 3866              	.LFB183:
1291:../Libraries/XMCLib/src/xmc_usbd.c **** 
1292:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1293:../Libraries/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1294:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1295:../Libraries/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1296:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3867              	 .loc 1 1296 0
 3868              	 .cfi_startproc
 3869              	 
 3870              	 
 3871 0000 80B5     	 push {r7,lr}
 3872              	.LCFI172:
 3873              	 .cfi_def_cfa_offset 8
 3874              	 .cfi_offset 7,-8
 3875              	 .cfi_offset 14,-4
 3876 0002 86B0     	 sub sp,sp,#24
 3877              	.LCFI173:
 3878              	 .cfi_def_cfa_offset 32
 3879 0004 00AF     	 add r7,sp,#0
 3880              	.LCFI174:
 3881              	 .cfi_def_cfa_register 7
 3882 0006 0346     	 mov r3,r0
 3883 0008 B960     	 str r1,[r7,#8]
 3884 000a 7A60     	 str r2,[r7,#4]
 3885 000c FB73     	 strb r3,[r7,#15]
1297:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3886              	 .loc 1 1297 0
 3887 000e FB7B     	 ldrb r3,[r7,#15]
 3888 0010 03F00F03 	 and r3,r3,#15
 3889 0014 3422     	 movs r2,#52
 3890 0016 02FB03F3 	 mul r3,r2,r3
 3891 001a 224A     	 ldr r2,.L228
 3892 001c 1344     	 add r3,r3,r2
 3893 001e 3B61     	 str r3,[r7,#16]
1298:../Libraries/XMCLib/src/xmc_usbd.c ****   int32_t result;
1299:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 3894              	 .loc 1 1299 0
 3895 0020 3B69     	 ldr r3,[r7,#16]
 3896 0022 1B79     	 ldrb r3,[r3,#4]
 3897 0024 03F00403 	 and r3,r3,#4
 3898 0028 DBB2     	 uxtb r3,r3
 3899 002a 002B     	 cmp r3,#0
 3900 002c 02D1     	 bne .L223
1300:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1301:../Libraries/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 3901              	 .loc 1 1301 0
 3902 002e 0123     	 movs r3,#1
 3903 0030 7B61     	 str r3,[r7,#20]
 3904 0032 31E0     	 b .L224
 3905              	.L223:
1302:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1303:../Libraries/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 3906              	 .loc 1 1303 0
 3907 0034 3B69     	 ldr r3,[r7,#16]
 3908 0036 5B68     	 ldr r3,[r3,#4]
 3909 0038 DB08     	 lsrs r3,r3,#3
 3910 003a 03F00103 	 and r3,r3,#1
 3911 003e DBB2     	 uxtb r3,r3
 3912 0040 012B     	 cmp r3,#1
 3913 0042 02D1     	 bne .L225
1304:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1305:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
 3914              	 .loc 1 1305 0
 3915 0044 0023     	 movs r3,#0
 3916 0046 7B61     	 str r3,[r7,#20]
 3917 0048 26E0     	 b .L224
 3918              	.L225:
1306:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1307:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1308:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1309:../Libraries/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 3919              	 .loc 1 1309 0
 3920 004a 3B69     	 ldr r3,[r7,#16]
 3921 004c 1A6A     	 ldr r2,[r3,#32]
 3922 004e 7B68     	 ldr r3,[r7,#4]
 3923 0050 9A42     	 cmp r2,r3
 3924 0052 02D2     	 bcs .L226
1310:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1311:../Libraries/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 3925              	 .loc 1 1311 0
 3926 0054 3B69     	 ldr r3,[r7,#16]
 3927 0056 1B6A     	 ldr r3,[r3,#32]
 3928 0058 7B60     	 str r3,[r7,#4]
 3929              	.L226:
1312:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1313:../Libraries/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1314:../Libraries/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
 3930              	 .loc 1 1314 0
 3931 005a 3B69     	 ldr r3,[r7,#16]
 3932 005c DB69     	 ldr r3,[r3,#28]
 3933 005e 1846     	 mov r0,r3
 3934 0060 B968     	 ldr r1,[r7,#8]
 3935 0062 7A68     	 ldr r2,[r7,#4]
 3936 0064 FFF7FEFF 	 bl memcpy
1315:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 3937              	 .loc 1 1315 0
 3938 0068 3B69     	 ldr r3,[r7,#16]
 3939 006a DA69     	 ldr r2,[r3,#28]
 3940 006c 3B69     	 ldr r3,[r7,#16]
 3941 006e 5A62     	 str r2,[r3,#36]
1316:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 3942              	 .loc 1 1316 0
 3943 0070 3B69     	 ldr r3,[r7,#16]
 3944 0072 7A68     	 ldr r2,[r7,#4]
 3945 0074 1A63     	 str r2,[r3,#48]
1317:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1318:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3946              	 .loc 1 1318 0
 3947 0076 3B69     	 ldr r3,[r7,#16]
 3948 0078 0022     	 movs r2,#0
 3949 007a 9A62     	 str r2,[r3,#40]
1319:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3950              	 .loc 1 1319 0
 3951 007c 3B69     	 ldr r3,[r7,#16]
 3952 007e 0022     	 movs r2,#0
 3953 0080 DA62     	 str r2,[r3,#44]
1320:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 3954              	 .loc 1 1320 0
 3955 0082 3B69     	 ldr r3,[r7,#16]
 3956 0084 5A68     	 ldr r2,[r3,#4]
 3957 0086 42F00802 	 orr r2,r2,#8
 3958 008a 5A60     	 str r2,[r3,#4]
1321:../Libraries/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1322:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 3959              	 .loc 1 1322 0
 3960 008c 3869     	 ldr r0,[r7,#16]
 3961 008e FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1323:../Libraries/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 3962              	 .loc 1 1323 0
 3963 0092 3B69     	 ldr r3,[r7,#16]
 3964 0094 1B6B     	 ldr r3,[r3,#48]
 3965 0096 7B61     	 str r3,[r7,#20]
 3966              	.L224:
1324:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1325:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 3967              	 .loc 1 1325 0
 3968 0098 7B69     	 ldr r3,[r7,#20]
1326:../Libraries/XMCLib/src/xmc_usbd.c **** }
 3969              	 .loc 1 1326 0
 3970 009a 1846     	 mov r0,r3
 3971 009c 1837     	 adds r7,r7,#24
 3972              	.LCFI175:
 3973              	 .cfi_def_cfa_offset 8
 3974 009e BD46     	 mov sp,r7
 3975              	.LCFI176:
 3976              	 .cfi_def_cfa_register 13
 3977              	 
 3978 00a0 80BD     	 pop {r7,pc}
 3979              	.L229:
 3980 00a2 00BF     	 .align 2
 3981              	.L228:
 3982 00a4 00000000 	 .word xmc_device
 3983              	 .cfi_endproc
 3984              	.LFE183:
 3986              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 3987              	 .align 2
 3988              	 .global XMC_USBD_DeviceSetAddress
 3989              	 .thumb
 3990              	 .thumb_func
 3992              	XMC_USBD_DeviceSetAddress:
 3993              	.LFB184:
1327:../Libraries/XMCLib/src/xmc_usbd.c **** 
1328:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1329:../Libraries/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1330:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1331:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1332:../Libraries/XMCLib/src/xmc_usbd.c **** {
 3994              	 .loc 1 1332 0
 3995              	 .cfi_startproc
 3996              	 
 3997              	 
 3998              	 
 3999 0000 80B4     	 push {r7}
 4000              	.LCFI177:
 4001              	 .cfi_def_cfa_offset 4
 4002              	 .cfi_offset 7,-4
 4003 0002 85B0     	 sub sp,sp,#20
 4004              	.LCFI178:
 4005              	 .cfi_def_cfa_offset 24
 4006 0004 00AF     	 add r7,sp,#0
 4007              	.LCFI179:
 4008              	 .cfi_def_cfa_register 7
 4009 0006 0346     	 mov r3,r0
 4010 0008 0A46     	 mov r2,r1
 4011 000a FB71     	 strb r3,[r7,#7]
 4012 000c 1346     	 mov r3,r2
 4013 000e BB71     	 strb r3,[r7,#6]
1333:../Libraries/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1334:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 4014              	 .loc 1 1334 0
 4015 0010 0D4B     	 ldr r3,.L233
 4016 0012 D3F8A431 	 ldr r3,[r3,#420]
 4017 0016 1B68     	 ldr r3,[r3]
 4018 0018 FB60     	 str r3,[r7,#12]
1335:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 4019              	 .loc 1 1335 0
 4020 001a BB79     	 ldrb r3,[r7,#6]
 4021 001c 002B     	 cmp r3,#0
 4022 001e 0CD1     	 bne .L231
1336:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1337:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 4023              	 .loc 1 1337 0
 4024 0020 FB79     	 ldrb r3,[r7,#7]
 4025 0022 03F07F03 	 and r3,r3,#127
 4026 0026 DAB2     	 uxtb r2,r3
 4027 0028 BB89     	 ldrh r3,[r7,#12]
 4028 002a 62F30A13 	 bfi r3,r2,#4,#7
 4029 002e BB81     	 strh r3,[r7,#12]
1338:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 4030              	 .loc 1 1338 0
 4031 0030 054B     	 ldr r3,.L233
 4032 0032 D3F8A431 	 ldr r3,[r3,#420]
 4033 0036 FA68     	 ldr r2,[r7,#12]
 4034 0038 1A60     	 str r2,[r3]
 4035              	.L231:
1339:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1340:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4036              	 .loc 1 1340 0
 4037 003a 0023     	 movs r3,#0
1341:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4038              	 .loc 1 1341 0
 4039 003c 1846     	 mov r0,r3
 4040 003e 1437     	 adds r7,r7,#20
 4041              	.LCFI180:
 4042              	 .cfi_def_cfa_offset 4
 4043 0040 BD46     	 mov sp,r7
 4044              	.LCFI181:
 4045              	 .cfi_def_cfa_register 13
 4046              	 
 4047 0042 5DF8047B 	 ldr r7,[sp],#4
 4048              	.LCFI182:
 4049              	 .cfi_restore 7
 4050              	 .cfi_def_cfa_offset 0
 4051 0046 7047     	 bx lr
 4052              	.L234:
 4053              	 .align 2
 4054              	.L233:
 4055 0048 00000000 	 .word xmc_device
 4056              	 .cfi_endproc
 4057              	.LFE184:
 4059              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 4060              	 .align 2
 4061              	 .global XMC_USBD_EndpointStall
 4062              	 .thumb
 4063              	 .thumb_func
 4065              	XMC_USBD_EndpointStall:
 4066              	.LFB185:
1342:../Libraries/XMCLib/src/xmc_usbd.c **** 
1343:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1344:../Libraries/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1345:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1346:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1347:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4067              	 .loc 1 1347 0
 4068              	 .cfi_startproc
 4069              	 
 4070              	 
 4071              	 
 4072 0000 80B4     	 push {r7}
 4073              	.LCFI183:
 4074              	 .cfi_def_cfa_offset 4
 4075              	 .cfi_offset 7,-4
 4076 0002 85B0     	 sub sp,sp,#20
 4077              	.LCFI184:
 4078              	 .cfi_def_cfa_offset 24
 4079 0004 00AF     	 add r7,sp,#0
 4080              	.LCFI185:
 4081              	 .cfi_def_cfa_register 7
 4082 0006 0346     	 mov r3,r0
 4083 0008 0A46     	 mov r2,r1
 4084 000a FB71     	 strb r3,[r7,#7]
 4085 000c 1346     	 mov r3,r2
 4086 000e BB71     	 strb r3,[r7,#6]
1348:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1349:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 4087              	 .loc 1 1349 0
 4088 0010 FB79     	 ldrb r3,[r7,#7]
 4089 0012 03F00F03 	 and r3,r3,#15
 4090 0016 3422     	 movs r2,#52
 4091 0018 02FB03F3 	 mul r3,r2,r3
 4092 001c 4A4A     	 ldr r2,.L243
 4093 001e 1344     	 add r3,r3,r2
 4094 0020 FB60     	 str r3,[r7,#12]
1350:../Libraries/XMCLib/src/xmc_usbd.c ****   if (stall)
 4095              	 .loc 1 1350 0
 4096 0022 BB79     	 ldrb r3,[r7,#6]
 4097 0024 002B     	 cmp r3,#0
 4098 0026 40D0     	 beq .L236
1351:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1352:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4099              	 .loc 1 1352 0
 4100 0028 FB79     	 ldrb r3,[r7,#7]
 4101 002a 5BB2     	 sxtb r3,r3
 4102 002c 002B     	 cmp r3,#0
 4103 002e 1ADA     	 bge .L237
1353:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1354:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1355:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4104              	 .loc 1 1355 0
 4105 0030 FB68     	 ldr r3,[r7,#12]
 4106 0032 1B78     	 ldrb r3,[r3]
 4107 0034 C3F30303 	 ubfx r3,r3,#0,#4
 4108 0038 DBB2     	 uxtb r3,r3
 4109 003a 434A     	 ldr r2,.L243
 4110 003c 6A33     	 adds r3,r3,#106
 4111 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4112 0042 1B68     	 ldr r3,[r3]
 4113 0044 BB60     	 str r3,[r7,#8]
1356:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4114              	 .loc 1 1356 0
 4115 0046 BB7A     	 ldrb r3,[r7,#10]
 4116 0048 43F02003 	 orr r3,r3,#32
 4117 004c BB72     	 strb r3,[r7,#10]
1357:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4118              	 .loc 1 1357 0
 4119 004e FB68     	 ldr r3,[r7,#12]
 4120 0050 1B78     	 ldrb r3,[r3]
 4121 0052 C3F30303 	 ubfx r3,r3,#0,#4
 4122 0056 DBB2     	 uxtb r3,r3
 4123 0058 3B4A     	 ldr r2,.L243
 4124 005a 6A33     	 adds r3,r3,#106
 4125 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4126 0060 BA68     	 ldr r2,[r7,#8]
 4127 0062 1A60     	 str r2,[r3]
 4128 0064 1BE0     	 b .L238
 4129              	.L237:
1358:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1359:../Libraries/XMCLib/src/xmc_usbd.c ****     else
1360:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1361:../Libraries/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1362:../Libraries/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4130              	 .loc 1 1362 0
 4131 0066 FB68     	 ldr r3,[r7,#12]
 4132 0068 1B78     	 ldrb r3,[r3]
 4133 006a C3F30303 	 ubfx r3,r3,#0,#4
 4134 006e DBB2     	 uxtb r3,r3
 4135 0070 354A     	 ldr r2,.L243
 4136 0072 7033     	 adds r3,r3,#112
 4137 0074 9B00     	 lsls r3,r3,#2
 4138 0076 1344     	 add r3,r3,r2
 4139 0078 5B68     	 ldr r3,[r3,#4]
 4140 007a 1B68     	 ldr r3,[r3]
 4141 007c BB60     	 str r3,[r7,#8]
1363:../Libraries/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4142              	 .loc 1 1363 0
 4143 007e BB7A     	 ldrb r3,[r7,#10]
 4144 0080 43F02003 	 orr r3,r3,#32
 4145 0084 BB72     	 strb r3,[r7,#10]
1364:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4146              	 .loc 1 1364 0
 4147 0086 FB68     	 ldr r3,[r7,#12]
 4148 0088 1B78     	 ldrb r3,[r3]
 4149 008a C3F30303 	 ubfx r3,r3,#0,#4
 4150 008e DBB2     	 uxtb r3,r3
 4151 0090 2D4A     	 ldr r2,.L243
 4152 0092 7033     	 adds r3,r3,#112
 4153 0094 9B00     	 lsls r3,r3,#2
 4154 0096 1344     	 add r3,r3,r2
 4155 0098 5B68     	 ldr r3,[r3,#4]
 4156 009a BA68     	 ldr r2,[r7,#8]
 4157 009c 1A60     	 str r2,[r3]
 4158              	.L238:
1365:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1366:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 4159              	 .loc 1 1366 0
 4160 009e FA68     	 ldr r2,[r7,#12]
 4161 00a0 1379     	 ldrb r3,[r2,#4]
 4162 00a2 43F02003 	 orr r3,r3,#32
 4163 00a6 1371     	 strb r3,[r2,#4]
 4164 00a8 47E0     	 b .L239
 4165              	.L236:
1367:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1368:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1369:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1370:../Libraries/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1371:../Libraries/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4166              	 .loc 1 1371 0
 4167 00aa FB79     	 ldrb r3,[r7,#7]
 4168 00ac 5BB2     	 sxtb r3,r3
 4169 00ae 002B     	 cmp r3,#0
 4170 00b0 1EDA     	 bge .L240
1372:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1373:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4171              	 .loc 1 1373 0
 4172 00b2 FB68     	 ldr r3,[r7,#12]
 4173 00b4 1B78     	 ldrb r3,[r3]
 4174 00b6 C3F30303 	 ubfx r3,r3,#0,#4
 4175 00ba DBB2     	 uxtb r3,r3
 4176 00bc 224A     	 ldr r2,.L243
 4177 00be 6A33     	 adds r3,r3,#106
 4178 00c0 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4179 00c4 1B68     	 ldr r3,[r3]
 4180 00c6 BB60     	 str r3,[r7,#8]
1374:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4181              	 .loc 1 1374 0
 4182 00c8 BB7A     	 ldrb r3,[r7,#10]
 4183 00ca 6FF34513 	 bfc r3,#5,#1
 4184 00ce BB72     	 strb r3,[r7,#10]
1375:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4185              	 .loc 1 1375 0
 4186 00d0 FB7A     	 ldrb r3,[r7,#11]
 4187 00d2 43F01003 	 orr r3,r3,#16
 4188 00d6 FB72     	 strb r3,[r7,#11]
1376:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4189              	 .loc 1 1376 0
 4190 00d8 FB68     	 ldr r3,[r7,#12]
 4191 00da 1B78     	 ldrb r3,[r3]
 4192 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4193 00e0 DBB2     	 uxtb r3,r3
 4194 00e2 194A     	 ldr r2,.L243
 4195 00e4 6A33     	 adds r3,r3,#106
 4196 00e6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4197 00ea BA68     	 ldr r2,[r7,#8]
 4198 00ec 1A60     	 str r2,[r3]
 4199 00ee 1FE0     	 b .L241
 4200              	.L240:
1377:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1378:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1379:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1380:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4201              	 .loc 1 1380 0
 4202 00f0 FB68     	 ldr r3,[r7,#12]
 4203 00f2 1B78     	 ldrb r3,[r3]
 4204 00f4 C3F30303 	 ubfx r3,r3,#0,#4
 4205 00f8 DBB2     	 uxtb r3,r3
 4206 00fa 134A     	 ldr r2,.L243
 4207 00fc 7033     	 adds r3,r3,#112
 4208 00fe 9B00     	 lsls r3,r3,#2
 4209 0100 1344     	 add r3,r3,r2
 4210 0102 5B68     	 ldr r3,[r3,#4]
 4211 0104 1B68     	 ldr r3,[r3]
 4212 0106 BB60     	 str r3,[r7,#8]
1381:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4213              	 .loc 1 1381 0
 4214 0108 BB7A     	 ldrb r3,[r7,#10]
 4215 010a 6FF34513 	 bfc r3,#5,#1
 4216 010e BB72     	 strb r3,[r7,#10]
1382:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4217              	 .loc 1 1382 0
 4218 0110 FB7A     	 ldrb r3,[r7,#11]
 4219 0112 43F01003 	 orr r3,r3,#16
 4220 0116 FB72     	 strb r3,[r7,#11]
1383:../Libraries/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4221              	 .loc 1 1383 0
 4222 0118 FB68     	 ldr r3,[r7,#12]
 4223 011a 1B78     	 ldrb r3,[r3]
 4224 011c C3F30303 	 ubfx r3,r3,#0,#4
 4225 0120 DBB2     	 uxtb r3,r3
 4226 0122 094A     	 ldr r2,.L243
 4227 0124 7033     	 adds r3,r3,#112
 4228 0126 9B00     	 lsls r3,r3,#2
 4229 0128 1344     	 add r3,r3,r2
 4230 012a 5B68     	 ldr r3,[r3,#4]
 4231 012c BA68     	 ldr r2,[r7,#8]
 4232 012e 1A60     	 str r2,[r3]
 4233              	.L241:
1384:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1385:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 4234              	 .loc 1 1385 0
 4235 0130 FA68     	 ldr r2,[r7,#12]
 4236 0132 1379     	 ldrb r3,[r2,#4]
 4237 0134 6FF34513 	 bfc r3,#5,#1
 4238 0138 1371     	 strb r3,[r2,#4]
 4239              	.L239:
1386:../Libraries/XMCLib/src/xmc_usbd.c **** 	}
1387:../Libraries/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4240              	 .loc 1 1387 0
 4241 013a 0023     	 movs r3,#0
1388:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4242              	 .loc 1 1388 0
 4243 013c 1846     	 mov r0,r3
 4244 013e 1437     	 adds r7,r7,#20
 4245              	.LCFI186:
 4246              	 .cfi_def_cfa_offset 4
 4247 0140 BD46     	 mov sp,r7
 4248              	.LCFI187:
 4249              	 .cfi_def_cfa_register 13
 4250              	 
 4251 0142 5DF8047B 	 ldr r7,[sp],#4
 4252              	.LCFI188:
 4253              	 .cfi_restore 7
 4254              	 .cfi_def_cfa_offset 0
 4255 0146 7047     	 bx lr
 4256              	.L244:
 4257              	 .align 2
 4258              	.L243:
 4259 0148 00000000 	 .word xmc_device
 4260              	 .cfi_endproc
 4261              	.LFE185:
 4263              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4264              	 .align 2
 4265              	 .global XMC_USBD_EndpointAbort
 4266              	 .thumb
 4267              	 .thumb_func
 4269              	XMC_USBD_EndpointAbort:
 4270              	.LFB186:
1389:../Libraries/XMCLib/src/xmc_usbd.c **** 
1390:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1391:../Libraries/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1392:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1393:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 4271              	 .loc 1 1393 0
 4272              	 .cfi_startproc
 4273              	 
 4274              	 
 4275              	 
 4276 0000 80B4     	 push {r7}
 4277              	.LCFI189:
 4278              	 .cfi_def_cfa_offset 4
 4279              	 .cfi_offset 7,-4
 4280 0002 85B0     	 sub sp,sp,#20
 4281              	.LCFI190:
 4282              	 .cfi_def_cfa_offset 24
 4283 0004 00AF     	 add r7,sp,#0
 4284              	.LCFI191:
 4285              	 .cfi_def_cfa_register 7
 4286 0006 0346     	 mov r3,r0
 4287 0008 FB71     	 strb r3,[r7,#7]
1394:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4288              	 .loc 1 1394 0
 4289 000a FB79     	 ldrb r3,[r7,#7]
 4290 000c 03F00F03 	 and r3,r3,#15
 4291 0010 3422     	 movs r2,#52
 4292 0012 02FB03F3 	 mul r3,r2,r3
 4293 0016 1B4A     	 ldr r2,.L249
 4294 0018 1344     	 add r3,r3,r2
 4295 001a FB60     	 str r3,[r7,#12]
1395:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4296              	 .loc 1 1395 0
 4297 001c FB68     	 ldr r3,[r7,#12]
 4298 001e 1B78     	 ldrb r3,[r3]
 4299 0020 23F07F03 	 bic r3,r3,#127
 4300 0024 DBB2     	 uxtb r3,r3
 4301 0026 002B     	 cmp r3,#0
 4302 0028 04D0     	 beq .L246
1396:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1397:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4303              	 .loc 1 1397 0
 4304 002a FB68     	 ldr r3,[r7,#12]
 4305 002c 5A68     	 ldr r2,[r3,#4]
 4306 002e 22F00802 	 bic r2,r2,#8
 4307 0032 5A60     	 str r2,[r3,#4]
 4308              	.L246:
1398:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1399:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4309              	 .loc 1 1399 0
 4310 0034 FB68     	 ldr r3,[r7,#12]
 4311 0036 1B78     	 ldrb r3,[r3]
 4312 0038 23F07F03 	 bic r3,r3,#127
 4313 003c DBB2     	 uxtb r3,r3
 4314 003e 002B     	 cmp r3,#0
 4315 0040 04D1     	 bne .L247
1400:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1401:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4316              	 .loc 1 1401 0
 4317 0042 FB68     	 ldr r3,[r7,#12]
 4318 0044 5A68     	 ldr r2,[r3,#4]
 4319 0046 22F01002 	 bic r2,r2,#16
 4320 004a 5A60     	 str r2,[r3,#4]
 4321              	.L247:
1402:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1403:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4322              	 .loc 1 1403 0
 4323 004c FA68     	 ldr r2,[r7,#12]
 4324 004e 1379     	 ldrb r3,[r2,#4]
 4325 0050 6FF34513 	 bfc r3,#5,#1
 4326 0054 1371     	 strb r3,[r2,#4]
1404:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4327              	 .loc 1 1404 0
 4328 0056 FB68     	 ldr r3,[r7,#12]
 4329 0058 0022     	 movs r2,#0
 4330 005a 1A61     	 str r2,[r3,#16]
1405:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4331              	 .loc 1 1405 0
 4332 005c FB68     	 ldr r3,[r7,#12]
 4333 005e 0022     	 movs r2,#0
 4334 0060 9A61     	 str r2,[r3,#24]
1406:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4335              	 .loc 1 1406 0
 4336 0062 FB68     	 ldr r3,[r7,#12]
 4337 0064 0022     	 movs r2,#0
 4338 0066 9A62     	 str r2,[r3,#40]
1407:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4339              	 .loc 1 1407 0
 4340 0068 FB68     	 ldr r3,[r7,#12]
 4341 006a 0022     	 movs r2,#0
 4342 006c DA62     	 str r2,[r3,#44]
1408:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4343              	 .loc 1 1408 0
 4344 006e FB68     	 ldr r3,[r7,#12]
 4345 0070 0022     	 movs r2,#0
 4346 0072 1A63     	 str r2,[r3,#48]
1409:../Libraries/XMCLib/src/xmc_usbd.c **** 
1410:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4347              	 .loc 1 1410 0
 4348 0074 0023     	 movs r3,#0
1411:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4349              	 .loc 1 1411 0
 4350 0076 1846     	 mov r0,r3
 4351 0078 1437     	 adds r7,r7,#20
 4352              	.LCFI192:
 4353              	 .cfi_def_cfa_offset 4
 4354 007a BD46     	 mov sp,r7
 4355              	.LCFI193:
 4356              	 .cfi_def_cfa_register 13
 4357              	 
 4358 007c 5DF8047B 	 ldr r7,[sp],#4
 4359              	.LCFI194:
 4360              	 .cfi_restore 7
 4361              	 .cfi_def_cfa_offset 0
 4362 0080 7047     	 bx lr
 4363              	.L250:
 4364 0082 00BF     	 .align 2
 4365              	.L249:
 4366 0084 00000000 	 .word xmc_device
 4367              	 .cfi_endproc
 4368              	.LFE186:
 4370              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4371              	 .align 2
 4372              	 .global XMC_USBD_EndpointConfigure
 4373              	 .thumb
 4374              	 .thumb_func
 4376              	XMC_USBD_EndpointConfigure:
 4377              	.LFB187:
1412:../Libraries/XMCLib/src/xmc_usbd.c **** 
1413:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1414:../Libraries/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1415:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1416:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1417:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1418:../Libraries/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1419:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4378              	 .loc 1 1419 0
 4379              	 .cfi_startproc
 4380              	 
 4381              	 
 4382 0000 80B5     	 push {r7,lr}
 4383              	.LCFI195:
 4384              	 .cfi_def_cfa_offset 8
 4385              	 .cfi_offset 7,-8
 4386              	 .cfi_offset 14,-4
 4387 0002 86B0     	 sub sp,sp,#24
 4388              	.LCFI196:
 4389              	 .cfi_def_cfa_offset 32
 4390 0004 00AF     	 add r7,sp,#0
 4391              	.LCFI197:
 4392              	 .cfi_def_cfa_register 7
 4393 0006 0346     	 mov r3,r0
 4394 0008 FB71     	 strb r3,[r7,#7]
 4395 000a 0B46     	 mov r3,r1
 4396 000c BB71     	 strb r3,[r7,#6]
 4397 000e 1346     	 mov r3,r2
 4398 0010 BB80     	 strh r3,[r7,#4]
1420:../Libraries/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1421:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1422:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4399              	 .loc 1 1422 0
 4400 0012 984B     	 ldr r3,.L277
 4401 0014 D3F8A431 	 ldr r3,[r3,#420]
 4402 0018 DB69     	 ldr r3,[r3,#28]
 4403 001a 3B61     	 str r3,[r7,#16]
1423:../Libraries/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4404              	 .loc 1 1423 0
 4405 001c FB79     	 ldrb r3,[r7,#7]
 4406 001e 03F00F03 	 and r3,r3,#15
 4407 0022 3422     	 movs r2,#52
 4408 0024 02FB03F3 	 mul r3,r2,r3
 4409 0028 924A     	 ldr r2,.L277
 4410 002a 1344     	 add r3,r3,r2
 4411 002c 7B61     	 str r3,[r7,#20]
1424:../Libraries/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4412              	 .loc 1 1424 0
 4413 002e 7869     	 ldr r0,[r7,#20]
 4414 0030 0021     	 movs r1,#0
 4415 0032 3422     	 movs r2,#52
 4416 0034 FFF7FEFF 	 bl memset
1425:../Libraries/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1426:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4417              	 .loc 1 1426 0
 4418 0038 7B69     	 ldr r3,[r7,#20]
 4419 003a FA79     	 ldrb r2,[r7,#7]
 4420 003c 1A70     	 strb r2,[r3]
1427:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4421              	 .loc 1 1427 0
 4422 003e 7A69     	 ldr r2,[r7,#20]
 4423 0040 1379     	 ldrb r3,[r2,#4]
 4424 0042 43F00403 	 orr r3,r3,#4
 4425 0046 1371     	 strb r3,[r2,#4]
1428:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4426              	 .loc 1 1428 0
 4427 0048 BB88     	 ldrh r3,[r7,#4]
 4428 004a DBB2     	 uxtb r3,r3
 4429 004c 03F07F03 	 and r3,r3,#127
 4430 0050 D9B2     	 uxtb r1,r3
 4431 0052 7A69     	 ldr r2,[r7,#20]
 4432 0054 5368     	 ldr r3,[r2,#4]
 4433 0056 61F3D123 	 bfi r3,r1,#11,#7
 4434 005a 5360     	 str r3,[r2,#4]
1429:../Libraries/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4435              	 .loc 1 1429 0
 4436 005c 7B69     	 ldr r3,[r7,#20]
 4437 005e 1B78     	 ldrb r3,[r3]
 4438 0060 002B     	 cmp r3,#0
 4439 0062 07D0     	 beq .L252
1430:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1431:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4440              	 .loc 1 1431 0
 4441 0064 7A69     	 ldr r2,[r7,#20]
 4442 0066 9368     	 ldr r3,[r2,#8]
 4443 0068 4FF6C071 	 movw r1,#65472
 4444 006c 61F31203 	 bfi r3,r1,#0,#19
 4445 0070 9360     	 str r3,[r2,#8]
 4446 0072 05E0     	 b .L253
 4447              	.L252:
1432:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1433:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1434:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1435:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4448              	 .loc 1 1435 0
 4449 0074 7A69     	 ldr r2,[r7,#20]
 4450 0076 9368     	 ldr r3,[r2,#8]
 4451 0078 4021     	 movs r1,#64
 4452 007a 61F31203 	 bfi r3,r1,#0,#19
 4453 007e 9360     	 str r3,[r2,#8]
 4454              	.L253:
1436:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1437:../Libraries/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1438:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4455              	 .loc 1 1438 0
 4456 0080 7B69     	 ldr r3,[r7,#20]
 4457 0082 1B78     	 ldrb r3,[r3]
 4458 0084 C3F30303 	 ubfx r3,r3,#0,#4
 4459 0088 DBB2     	 uxtb r3,r3
 4460 008a 1B02     	 lsls r3,r3,#8
 4461 008c 7A4A     	 ldr r2,.L277+4
 4462 008e 1A44     	 add r2,r2,r3
 4463 0090 7B69     	 ldr r3,[r7,#20]
 4464 0092 DA61     	 str r2,[r3,#28]
1439:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4465              	 .loc 1 1439 0
 4466 0094 7B69     	 ldr r3,[r7,#20]
 4467 0096 1B78     	 ldrb r3,[r3]
 4468 0098 C3F30303 	 ubfx r3,r3,#0,#4
 4469 009c DBB2     	 uxtb r3,r3
 4470 009e 1B02     	 lsls r3,r3,#8
 4471 00a0 764A     	 ldr r2,.L277+8
 4472 00a2 1A44     	 add r2,r2,r3
 4473 00a4 7B69     	 ldr r3,[r7,#20]
 4474 00a6 DA60     	 str r2,[r3,#12]
1440:../Libraries/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1441:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4475              	 .loc 1 1441 0
 4476 00a8 7B69     	 ldr r3,[r7,#20]
 4477 00aa 1B78     	 ldrb r3,[r3]
 4478 00ac C3F30303 	 ubfx r3,r3,#0,#4
 4479 00b0 DBB2     	 uxtb r3,r3
 4480 00b2 1A46     	 mov r2,r3
 4481 00b4 724B     	 ldr r3,.L277+12
 4482 00b6 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4483 00ba 7B69     	 ldr r3,[r7,#20]
 4484 00bc 1A62     	 str r2,[r3,#32]
1442:../Libraries/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4485              	 .loc 1 1442 0
 4486 00be 7B69     	 ldr r3,[r7,#20]
 4487 00c0 1B78     	 ldrb r3,[r3]
 4488 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4489 00c6 DBB2     	 uxtb r3,r3
 4490 00c8 1A46     	 mov r2,r3
 4491 00ca 6E4B     	 ldr r3,.L277+16
 4492 00cc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4493 00d0 7B69     	 ldr r3,[r7,#20]
 4494 00d2 5A61     	 str r2,[r3,#20]
1443:../Libraries/XMCLib/src/xmc_usbd.c ****   /* is in */
1444:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4495              	 .loc 1 1444 0
 4496 00d4 7B69     	 ldr r3,[r7,#20]
 4497 00d6 1B78     	 ldrb r3,[r3]
 4498 00d8 23F07F03 	 bic r3,r3,#127
 4499 00dc DBB2     	 uxtb r3,r3
 4500 00de 002B     	 cmp r3,#0
 4501 00e0 02D1     	 bne .L254
 4502              	 .loc 1 1444 0 is_stmt 0 discriminator 1
 4503 00e2 BB79     	 ldrb r3,[r7,#6]
 4504 00e4 002B     	 cmp r3,#0
 4505 00e6 7AD1     	 bne .L255
 4506              	.L254:
 4507              	.LBB6:
1445:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1446:../Libraries/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1447:../Libraries/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4508              	 .loc 1 1447 0 is_stmt 1
 4509 00e8 7B69     	 ldr r3,[r7,#20]
 4510 00ea 1B78     	 ldrb r3,[r3]
 4511 00ec C3F30303 	 ubfx r3,r3,#0,#4
 4512 00f0 DBB2     	 uxtb r3,r3
 4513 00f2 604A     	 ldr r2,.L277
 4514 00f4 6A33     	 adds r3,r3,#106
 4515 00f6 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4516 00fa 1B68     	 ldr r3,[r3]
 4517 00fc FB60     	 str r3,[r7,#12]
1448:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1449:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4518              	 .loc 1 1449 0
 4519 00fe 7B7B     	 ldrb r3,[r7,#13]
 4520 0100 43F08003 	 orr r3,r3,#128
 4521 0104 7B73     	 strb r3,[r7,#13]
1450:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1451:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4522              	 .loc 1 1451 0
 4523 0106 BB79     	 ldrb r3,[r7,#6]
 4524 0108 03F00303 	 and r3,r3,#3
 4525 010c DAB2     	 uxtb r2,r3
 4526 010e BB7B     	 ldrb r3,[r7,#14]
 4527 0110 62F38303 	 bfi r3,r2,#2,#2
 4528 0114 BB73     	 strb r3,[r7,#14]
1452:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1453:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4529              	 .loc 1 1453 0
 4530 0116 BB79     	 ldrb r3,[r7,#6]
 4531 0118 002B     	 cmp r3,#0
 4532 011a 24D1     	 bne .L256
1454:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1455:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4533              	 .loc 1 1455 0
 4534 011c BB88     	 ldrh r3,[r7,#4]
 4535 011e 102B     	 cmp r3,#16
 4536 0120 14D0     	 beq .L258
 4537 0122 102B     	 cmp r3,#16
 4538 0124 02DC     	 bgt .L259
 4539 0126 082B     	 cmp r3,#8
 4540 0128 16D0     	 beq .L260
1456:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1457:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1458:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1460:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1463:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1465:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1466:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
1469:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1470:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4541              	 .loc 1 1470 0
 4542 012a 1BE0     	 b .L263
 4543              	.L259:
1455:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4544              	 .loc 1 1455 0
 4545 012c 202B     	 cmp r3,#32
 4546 012e 07D0     	 beq .L261
 4547 0130 402B     	 cmp r3,#64
 4548 0132 00D0     	 beq .L262
 4549              	 .loc 1 1470 0
 4550 0134 16E0     	 b .L263
 4551              	.L262:
1458:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4552              	 .loc 1 1458 0
 4553 0136 BB89     	 ldrh r3,[r7,#12]
 4554 0138 6FF30A03 	 bfc r3,#0,#11
 4555 013c BB81     	 strh r3,[r7,#12]
1459:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4556              	 .loc 1 1459 0
 4557 013e 11E0     	 b .L263
 4558              	.L261:
1461:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4559              	 .loc 1 1461 0
 4560 0140 BB89     	 ldrh r3,[r7,#12]
 4561 0142 0122     	 movs r2,#1
 4562 0144 62F30A03 	 bfi r3,r2,#0,#11
 4563 0148 BB81     	 strh r3,[r7,#12]
1462:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4564              	 .loc 1 1462 0
 4565 014a 0BE0     	 b .L263
 4566              	.L258:
1464:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4567              	 .loc 1 1464 0
 4568 014c BB89     	 ldrh r3,[r7,#12]
 4569 014e 0222     	 movs r2,#2
 4570 0150 62F30A03 	 bfi r3,r2,#0,#11
 4571 0154 BB81     	 strh r3,[r7,#12]
1465:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4572              	 .loc 1 1465 0
 4573 0156 05E0     	 b .L263
 4574              	.L260:
1467:../Libraries/XMCLib/src/xmc_usbd.c **** 				break;
 4575              	 .loc 1 1467 0
 4576 0158 BB89     	 ldrh r3,[r7,#12]
 4577 015a 0322     	 movs r2,#3
 4578 015c 62F30A03 	 bfi r3,r2,#0,#11
 4579 0160 BB81     	 strh r3,[r7,#12]
1468:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4580              	 .loc 1 1468 0
 4581 0162 00BF     	 nop
 4582              	.L263:
 4583 0164 07E0     	 b .L264
 4584              	.L256:
1471:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1472:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1473:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1474:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1475:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4585              	 .loc 1 1475 0
 4586 0166 BB88     	 ldrh r3,[r7,#4]
 4587 0168 C3F30A03 	 ubfx r3,r3,#0,#11
 4588 016c 9AB2     	 uxth r2,r3
 4589 016e BB89     	 ldrh r3,[r7,#12]
 4590 0170 62F30A03 	 bfi r3,r2,#0,#11
 4591 0174 BB81     	 strh r3,[r7,#12]
 4592              	.L264:
1476:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1477:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1478:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4593              	 .loc 1 1478 0 discriminator 2
 4594 0176 FB7B     	 ldrb r3,[r7,#15]
 4595 0178 43F01003 	 orr r3,r3,#16
 4596 017c FB73     	 strb r3,[r7,#15]
1479:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1480:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
 4597              	 .loc 1 1480 0 discriminator 2
 4598 017e BB7B     	 ldrb r3,[r7,#14]
 4599 0180 6FF34513 	 bfc r3,#5,#1
 4600 0184 BB73     	 strb r3,[r7,#14]
1481:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1482:../Libraries/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4601              	 .loc 1 1482 0 discriminator 2
 4602 0186 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4603 018a 0346     	 mov r3,r0
 4604 018c 03F00F03 	 and r3,r3,#15
 4605 0190 D9B2     	 uxtb r1,r3
 4606 0192 7A69     	 ldr r2,[r7,#20]
 4607 0194 9388     	 ldrh r3,[r2,#4]
 4608 0196 61F38913 	 bfi r3,r1,#6,#4
 4609 019a 9380     	 strh r3,[r2,#4]
1483:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 4610              	 .loc 1 1483 0 discriminator 2
 4611 019c 7B69     	 ldr r3,[r7,#20]
 4612 019e 9B88     	 ldrh r3,[r3,#4]
 4613 01a0 C3F38313 	 ubfx r3,r3,#6,#4
 4614 01a4 DAB2     	 uxtb r2,r3
 4615 01a6 FB89     	 ldrh r3,[r7,#14]
 4616 01a8 62F38913 	 bfi r3,r2,#6,#4
 4617 01ac FB81     	 strh r3,[r7,#14]
1484:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 4618              	 .loc 1 1484 0 discriminator 2
 4619 01ae 7B69     	 ldr r3,[r7,#20]
 4620 01b0 1B78     	 ldrb r3,[r3]
 4621 01b2 C3F30303 	 ubfx r3,r3,#0,#4
 4622 01b6 DBB2     	 uxtb r3,r3
 4623 01b8 2E4A     	 ldr r2,.L277
 4624 01ba 6A33     	 adds r3,r3,#106
 4625 01bc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4626 01c0 FA68     	 ldr r2,[r7,#12]
 4627 01c2 1A60     	 str r2,[r3]
1485:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 4628              	 .loc 1 1485 0 discriminator 2
 4629 01c4 3A8A     	 ldrh r2,[r7,#16]
 4630 01c6 7B69     	 ldr r3,[r7,#20]
 4631 01c8 1B78     	 ldrb r3,[r3]
 4632 01ca C3F30303 	 ubfx r3,r3,#0,#4
 4633 01ce DBB2     	 uxtb r3,r3
 4634 01d0 1946     	 mov r1,r3
 4635 01d2 0123     	 movs r3,#1
 4636 01d4 8B40     	 lsls r3,r3,r1
 4637 01d6 9BB2     	 uxth r3,r3
 4638 01d8 1343     	 orrs r3,r3,r2
 4639 01da 9BB2     	 uxth r3,r3
 4640 01dc 3B82     	 strh r3,[r7,#16]
 4641              	.L255:
 4642              	.LBE6:
1486:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1487:../Libraries/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4643              	 .loc 1 1487 0
 4644 01de 7B69     	 ldr r3,[r7,#20]
 4645 01e0 1B78     	 ldrb r3,[r3]
 4646 01e2 23F07F03 	 bic r3,r3,#127
 4647 01e6 DBB2     	 uxtb r3,r3
 4648 01e8 002B     	 cmp r3,#0
 4649 01ea 02D0     	 beq .L265
 4650              	 .loc 1 1487 0 is_stmt 0 discriminator 1
 4651 01ec BB79     	 ldrb r3,[r7,#6]
 4652 01ee 002B     	 cmp r3,#0
 4653 01f0 73D1     	 bne .L266
 4654              	.L265:
 4655              	.LBB7:
1488:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1489:../Libraries/XMCLib/src/xmc_usbd.c ****     /* is out */
1490:../Libraries/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1491:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4656              	 .loc 1 1491 0 is_stmt 1
 4657 01f2 7B69     	 ldr r3,[r7,#20]
 4658 01f4 1B78     	 ldrb r3,[r3]
 4659 01f6 C3F30303 	 ubfx r3,r3,#0,#4
 4660 01fa DBB2     	 uxtb r3,r3
 4661 01fc 1D4A     	 ldr r2,.L277
 4662 01fe 7033     	 adds r3,r3,#112
 4663 0200 9B00     	 lsls r3,r3,#2
 4664 0202 1344     	 add r3,r3,r2
 4665 0204 5B68     	 ldr r3,[r3,#4]
 4666 0206 1B68     	 ldr r3,[r3]
 4667 0208 BB60     	 str r3,[r7,#8]
1492:../Libraries/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1493:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4668              	 .loc 1 1493 0
 4669 020a 7B7A     	 ldrb r3,[r7,#9]
 4670 020c 43F08003 	 orr r3,r3,#128
 4671 0210 7B72     	 strb r3,[r7,#9]
1494:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1495:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4672              	 .loc 1 1495 0
 4673 0212 BB79     	 ldrb r3,[r7,#6]
 4674 0214 03F00303 	 and r3,r3,#3
 4675 0218 DAB2     	 uxtb r2,r3
 4676 021a BB7A     	 ldrb r3,[r7,#10]
 4677 021c 62F38303 	 bfi r3,r2,#2,#2
 4678 0220 BB72     	 strb r3,[r7,#10]
1496:../Libraries/XMCLib/src/xmc_usbd.c ****     /* set mps */
1497:../Libraries/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4679              	 .loc 1 1497 0
 4680 0222 BB79     	 ldrb r3,[r7,#6]
 4681 0224 002B     	 cmp r3,#0
 4682 0226 2FD1     	 bne .L267
1498:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1499:../Libraries/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4683              	 .loc 1 1499 0
 4684 0228 BB88     	 ldrh r3,[r7,#4]
 4685 022a 102B     	 cmp r3,#16
 4686 022c 14D0     	 beq .L269
 4687 022e 102B     	 cmp r3,#16
 4688 0230 02DC     	 bgt .L270
 4689 0232 082B     	 cmp r3,#8
 4690 0234 16D0     	 beq .L271
1500:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
1501:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (64U):
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1504:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1507:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
1508:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1509:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1510:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
1513:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
1514:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4691              	 .loc 1 1514 0
 4692 0236 1BE0     	 b .L274
 4693              	.L270:
1499:../Libraries/XMCLib/src/xmc_usbd.c **** 			{
 4694              	 .loc 1 1499 0
 4695 0238 202B     	 cmp r3,#32
 4696 023a 07D0     	 beq .L272
 4697 023c 402B     	 cmp r3,#64
 4698 023e 00D0     	 beq .L273
 4699              	 .loc 1 1514 0
 4700 0240 16E0     	 b .L274
 4701              	.L273:
1502:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4702              	 .loc 1 1502 0
 4703 0242 3B89     	 ldrh r3,[r7,#8]
 4704 0244 6FF30A03 	 bfc r3,#0,#11
 4705 0248 3B81     	 strh r3,[r7,#8]
1503:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4706              	 .loc 1 1503 0
 4707 024a 11E0     	 b .L274
 4708              	.L272:
1505:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4709              	 .loc 1 1505 0
 4710 024c 3B89     	 ldrh r3,[r7,#8]
 4711 024e 0122     	 movs r2,#1
 4712 0250 62F30A03 	 bfi r3,r2,#0,#11
 4713 0254 3B81     	 strh r3,[r7,#8]
1506:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4714              	 .loc 1 1506 0
 4715 0256 0BE0     	 b .L274
 4716              	.L269:
1508:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4717              	 .loc 1 1508 0
 4718 0258 3B89     	 ldrh r3,[r7,#8]
 4719 025a 0222     	 movs r2,#2
 4720 025c 62F30A03 	 bfi r3,r2,#0,#11
 4721 0260 3B81     	 strh r3,[r7,#8]
1509:../Libraries/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4722              	 .loc 1 1509 0
 4723 0262 05E0     	 b .L274
 4724              	.L271:
1511:../Libraries/XMCLib/src/xmc_usbd.c **** 					break;
 4725              	 .loc 1 1511 0
 4726 0264 3B89     	 ldrh r3,[r7,#8]
 4727 0266 0322     	 movs r2,#3
 4728 0268 62F30A03 	 bfi r3,r2,#0,#11
 4729 026c 3B81     	 strh r3,[r7,#8]
1512:../Libraries/XMCLib/src/xmc_usbd.c **** 				default:
 4730              	 .loc 1 1512 0
 4731 026e 00BF     	 nop
 4732              	.L274:
 4733 0270 12E0     	 b .L275
 4734              	.L278:
 4735 0272 00BF     	 .align 2
 4736              	.L277:
 4737 0274 00000000 	 .word xmc_device
 4738 0278 00000000 	 .word XMC_USBD_EP_IN_BUFFER
 4739 027c 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 4740 0280 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 4741 0284 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 4742              	.L267:
1515:../Libraries/XMCLib/src/xmc_usbd.c **** 			}
1516:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1517:../Libraries/XMCLib/src/xmc_usbd.c **** 		else
1518:../Libraries/XMCLib/src/xmc_usbd.c **** 		{
1519:../Libraries/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4743              	 .loc 1 1519 0
 4744 0288 BB88     	 ldrh r3,[r7,#4]
 4745 028a C3F30A03 	 ubfx r3,r3,#0,#11
 4746 028e 9AB2     	 uxth r2,r3
 4747 0290 3B89     	 ldrh r3,[r7,#8]
 4748 0292 62F30A03 	 bfi r3,r2,#0,#11
 4749 0296 3B81     	 strh r3,[r7,#8]
 4750              	.L275:
1520:../Libraries/XMCLib/src/xmc_usbd.c **** 		}
1521:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1522:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4751              	 .loc 1 1522 0 discriminator 4
 4752 0298 FB7A     	 ldrb r3,[r7,#11]
 4753 029a 43F01003 	 orr r3,r3,#16
 4754 029e FB72     	 strb r3,[r7,#11]
1523:../Libraries/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1524:../Libraries/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
 4755              	 .loc 1 1524 0 discriminator 4
 4756 02a0 BB7A     	 ldrb r3,[r7,#10]
 4757 02a2 6FF34513 	 bfc r3,#5,#1
 4758 02a6 BB72     	 strb r3,[r7,#10]
1525:../Libraries/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 4759              	 .loc 1 1525 0 discriminator 4
 4760 02a8 7B69     	 ldr r3,[r7,#20]
 4761 02aa 1B78     	 ldrb r3,[r3]
 4762 02ac C3F30303 	 ubfx r3,r3,#0,#4
 4763 02b0 DBB2     	 uxtb r3,r3
 4764 02b2 0F4A     	 ldr r2,.L279
 4765 02b4 7033     	 adds r3,r3,#112
 4766 02b6 9B00     	 lsls r3,r3,#2
 4767 02b8 1344     	 add r3,r3,r2
 4768 02ba 5B68     	 ldr r3,[r3,#4]
 4769 02bc BA68     	 ldr r2,[r7,#8]
 4770 02be 1A60     	 str r2,[r3]
1526:../Libraries/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 4771              	 .loc 1 1526 0 discriminator 4
 4772 02c0 7A8A     	 ldrh r2,[r7,#18]
 4773 02c2 7B69     	 ldr r3,[r7,#20]
 4774 02c4 1B78     	 ldrb r3,[r3]
 4775 02c6 C3F30303 	 ubfx r3,r3,#0,#4
 4776 02ca DBB2     	 uxtb r3,r3
 4777 02cc 1946     	 mov r1,r3
 4778 02ce 0123     	 movs r3,#1
 4779 02d0 8B40     	 lsls r3,r3,r1
 4780 02d2 9BB2     	 uxth r3,r3
 4781 02d4 1343     	 orrs r3,r3,r2
 4782 02d6 9BB2     	 uxth r3,r3
 4783 02d8 7B82     	 strh r3,[r7,#18]
 4784              	.L266:
 4785              	.LBE7:
1527:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1528:../Libraries/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 4786              	 .loc 1 1528 0
 4787 02da 054B     	 ldr r3,.L279
 4788 02dc D3F8A431 	 ldr r3,[r3,#420]
 4789 02e0 3A69     	 ldr r2,[r7,#16]
 4790 02e2 DA61     	 str r2,[r3,#28]
1529:../Libraries/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4791              	 .loc 1 1529 0
 4792 02e4 0023     	 movs r3,#0
1530:../Libraries/XMCLib/src/xmc_usbd.c **** }
 4793              	 .loc 1 1530 0
 4794 02e6 1846     	 mov r0,r3
 4795 02e8 1837     	 adds r7,r7,#24
 4796              	.LCFI198:
 4797              	 .cfi_def_cfa_offset 8
 4798 02ea BD46     	 mov sp,r7
 4799              	.LCFI199:
 4800              	 .cfi_def_cfa_register 13
 4801              	 
 4802 02ec 80BD     	 pop {r7,pc}
 4803              	.L280:
 4804 02ee 00BF     	 .align 2
 4805              	.L279:
 4806 02f0 00000000 	 .word xmc_device
 4807              	 .cfi_endproc
 4808              	.LFE187:
 4810              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 4811              	 .align 2
 4812              	 .global XMC_USBD_EndpointUnconfigure
 4813              	 .thumb
 4814              	 .thumb_func
 4816              	XMC_USBD_EndpointUnconfigure:
 4817              	.LFB188:
1531:../Libraries/XMCLib/src/xmc_usbd.c **** 
1532:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1533:../Libraries/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1534:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1535:../Libraries/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1536:../Libraries/XMCLib/src/xmc_usbd.c **** {
 4818              	 .loc 1 1536 0
 4819              	 .cfi_startproc
 4820              	 
 4821              	 
 4822 0000 80B5     	 push {r7,lr}
 4823              	.LCFI200:
 4824              	 .cfi_def_cfa_offset 8
 4825              	 .cfi_offset 7,-8
 4826              	 .cfi_offset 14,-4
 4827 0002 88B0     	 sub sp,sp,#32
 4828              	.LCFI201:
 4829              	 .cfi_def_cfa_offset 40
 4830 0004 00AF     	 add r7,sp,#0
 4831              	.LCFI202:
 4832              	 .cfi_def_cfa_register 7
 4833 0006 0346     	 mov r3,r0
 4834 0008 FB71     	 strb r3,[r7,#7]
1537:../Libraries/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4835              	 .loc 1 1537 0
 4836 000a FB79     	 ldrb r3,[r7,#7]
 4837 000c 03F00F03 	 and r3,r3,#15
 4838 0010 3422     	 movs r2,#52
 4839 0012 02FB03F3 	 mul r3,r2,r3
 4840 0016 544A     	 ldr r2,.L289
 4841 0018 1344     	 add r3,r3,r2
 4842 001a BB61     	 str r3,[r7,#24]
1538:../Libraries/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1539:../Libraries/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1540:../Libraries/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1541:../Libraries/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1542:../Libraries/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
 4843              	 .loc 1 1542 0
 4844 001c 0023     	 movs r3,#0
 4845 001e 3B61     	 str r3,[r7,#16]
1543:../Libraries/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4846              	 .loc 1 1543 0
 4847 0020 514B     	 ldr r3,.L289
 4848 0022 D3F8A431 	 ldr r3,[r3,#420]
 4849 0026 DB69     	 ldr r3,[r3,#28]
 4850 0028 FB60     	 str r3,[r7,#12]
1544:../Libraries/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 4851              	 .loc 1 1544 0
 4852 002a BB69     	 ldr r3,[r7,#24]
 4853 002c 1B78     	 ldrb r3,[r3]
 4854 002e C3F30303 	 ubfx r3,r3,#0,#4
 4855 0032 DBB2     	 uxtb r3,r3
 4856 0034 1A46     	 mov r2,r3
 4857 0036 0123     	 movs r3,#1
 4858 0038 9340     	 lsls r3,r3,r2
 4859 003a 7B61     	 str r3,[r7,#20]
1545:../Libraries/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1546:../Libraries/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4860              	 .loc 1 1546 0
 4861 003c BB69     	 ldr r3,[r7,#24]
 4862 003e 1B79     	 ldrb r3,[r3,#4]
 4863 0040 03F00403 	 and r3,r3,#4
 4864 0044 DBB2     	 uxtb r3,r3
 4865 0046 002B     	 cmp r3,#0
 4866 0048 02D1     	 bne .L282
1547:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1548:../Libraries/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
 4867              	 .loc 1 1548 0
 4868 004a 0123     	 movs r3,#1
 4869 004c FB77     	 strb r3,[r7,#31]
 4870 004e 85E0     	 b .L283
 4871              	.L282:
1549:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1550:../Libraries/XMCLib/src/xmc_usbd.c ****   else
1551:../Libraries/XMCLib/src/xmc_usbd.c ****   {
1552:../Libraries/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1553:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 4872              	 .loc 1 1553 0
 4873 0050 7B7C     	 ldrb r3,[r7,#17]
 4874 0052 6FF3C713 	 bfc r3,#7,#1
 4875 0056 7B74     	 strb r3,[r7,#17]
1554:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 4876              	 .loc 1 1554 0
 4877 0058 FB7C     	 ldrb r3,[r7,#19]
 4878 005a 43F04003 	 orr r3,r3,#64
 4879 005e FB74     	 strb r3,[r7,#19]
1555:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 4880              	 .loc 1 1555 0
 4881 0060 FB7C     	 ldrb r3,[r7,#19]
 4882 0062 43F00803 	 orr r3,r3,#8
 4883 0066 FB74     	 strb r3,[r7,#19]
1556:../Libraries/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 4884              	 .loc 1 1556 0
 4885 0068 BB7C     	 ldrb r3,[r7,#18]
 4886 006a 6FF34513 	 bfc r3,#5,#1
 4887 006e BB74     	 strb r3,[r7,#18]
1557:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 4888              	 .loc 1 1557 0
 4889 0070 BA69     	 ldr r2,[r7,#24]
 4890 0072 1379     	 ldrb r3,[r2,#4]
 4891 0074 6FF38203 	 bfc r3,#2,#1
 4892 0078 1371     	 strb r3,[r2,#4]
1558:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 4893              	 .loc 1 1558 0
 4894 007a BA69     	 ldr r2,[r7,#24]
 4895 007c 1379     	 ldrb r3,[r2,#4]
 4896 007e 6FF34513 	 bfc r3,#5,#1
 4897 0082 1371     	 strb r3,[r2,#4]
1559:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 4898              	 .loc 1 1559 0
 4899 0084 BB69     	 ldr r3,[r7,#24]
 4900 0086 5A68     	 ldr r2,[r3,#4]
 4901 0088 22F01002 	 bic r2,r2,#16
 4902 008c 5A60     	 str r2,[r3,#4]
1560:../Libraries/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 4903              	 .loc 1 1560 0
 4904 008e BB69     	 ldr r3,[r7,#24]
 4905 0090 5A68     	 ldr r2,[r3,#4]
 4906 0092 22F00802 	 bic r2,r2,#8
 4907 0096 5A60     	 str r2,[r3,#4]
1561:../Libraries/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1562:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4908              	 .loc 1 1562 0
 4909 0098 BB69     	 ldr r3,[r7,#24]
 4910 009a 1B78     	 ldrb r3,[r3]
 4911 009c 23F07F03 	 bic r3,r3,#127
 4912 00a0 DBB2     	 uxtb r3,r3
 4913 00a2 002B     	 cmp r3,#0
 4914 00a4 06D1     	 bne .L284
 4915              	 .loc 1 1562 0 is_stmt 0 discriminator 1
 4916 00a6 BB69     	 ldr r3,[r7,#24]
 4917 00a8 1B79     	 ldrb r3,[r3,#4]
 4918 00aa 03F00303 	 and r3,r3,#3
 4919 00ae DBB2     	 uxtb r3,r3
 4920 00b0 002B     	 cmp r3,#0
 4921 00b2 12D1     	 bne .L285
 4922              	.L284:
1563:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1564:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1565:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4923              	 .loc 1 1565 0 is_stmt 1
 4924 00b4 BB69     	 ldr r3,[r7,#24]
 4925 00b6 1B78     	 ldrb r3,[r3]
 4926 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 4927 00bc DBB2     	 uxtb r3,r3
 4928 00be 2A4A     	 ldr r2,.L289
 4929 00c0 6A33     	 adds r3,r3,#106
 4930 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4931 00c6 3A69     	 ldr r2,[r7,#16]
 4932 00c8 1A60     	 str r2,[r3]
1566:../Libraries/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1567:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 4933              	 .loc 1 1567 0
 4934 00ca BA89     	 ldrh r2,[r7,#12]
 4935 00cc 7B69     	 ldr r3,[r7,#20]
 4936 00ce 9BB2     	 uxth r3,r3
 4937 00d0 DB43     	 mvns r3,r3
 4938 00d2 9BB2     	 uxth r3,r3
 4939 00d4 1340     	 ands r3,r3,r2
 4940 00d6 9BB2     	 uxth r3,r3
 4941 00d8 BB81     	 strh r3,[r7,#12]
 4942              	.L285:
1568:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1569:../Libraries/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 4943              	 .loc 1 1569 0
 4944 00da BB69     	 ldr r3,[r7,#24]
 4945 00dc 1B78     	 ldrb r3,[r3]
 4946 00de 23F07F03 	 bic r3,r3,#127
 4947 00e2 DBB2     	 uxtb r3,r3
 4948 00e4 002B     	 cmp r3,#0
 4949 00e6 06D0     	 beq .L286
 4950              	 .loc 1 1569 0 is_stmt 0 discriminator 1
 4951 00e8 BB69     	 ldr r3,[r7,#24]
 4952 00ea 1B79     	 ldrb r3,[r3,#4]
 4953 00ec 03F00303 	 and r3,r3,#3
 4954 00f0 DBB2     	 uxtb r3,r3
 4955 00f2 002B     	 cmp r3,#0
 4956 00f4 23D1     	 bne .L287
 4957              	.L286:
1570:../Libraries/XMCLib/src/xmc_usbd.c ****     {
1571:../Libraries/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4958              	 .loc 1 1571 0 is_stmt 1
 4959 00f6 BB69     	 ldr r3,[r7,#24]
 4960 00f8 1B78     	 ldrb r3,[r3]
 4961 00fa C3F30303 	 ubfx r3,r3,#0,#4
 4962 00fe DBB2     	 uxtb r3,r3
 4963 0100 194A     	 ldr r2,.L289
 4964 0102 7033     	 adds r3,r3,#112
 4965 0104 9B00     	 lsls r3,r3,#2
 4966 0106 1344     	 add r3,r3,r2
 4967 0108 5B68     	 ldr r3,[r3,#4]
 4968 010a 3A69     	 ldr r2,[r7,#16]
 4969 010c 1A60     	 str r2,[r3]
1572:../Libraries/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 4970              	 .loc 1 1572 0
 4971 010e FA89     	 ldrh r2,[r7,#14]
 4972 0110 7B69     	 ldr r3,[r7,#20]
 4973 0112 9BB2     	 uxth r3,r3
 4974 0114 DB43     	 mvns r3,r3
 4975 0116 9BB2     	 uxth r3,r3
 4976 0118 1340     	 ands r3,r3,r2
 4977 011a 9BB2     	 uxth r3,r3
 4978 011c FB81     	 strh r3,[r7,#14]
1573:../Libraries/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 4979              	 .loc 1 1573 0
 4980 011e 134B     	 ldr r3,.L289+4
 4981 0120 1B68     	 ldr r3,[r3]
 4982 0122 5B7B     	 ldrb r3,[r3,#13]
 4983 0124 012B     	 cmp r3,#1
 4984 0126 0AD1     	 bne .L287
1574:../Libraries/XMCLib/src/xmc_usbd.c ****       {
1575:../Libraries/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 4985              	 .loc 1 1575 0
 4986 0128 0F4B     	 ldr r3,.L289
 4987 012a D3F8A431 	 ldr r3,[r3,#420]
 4988 012e 0E4A     	 ldr r2,.L289
 4989 0130 D2F8A421 	 ldr r2,[r2,#420]
 4990 0134 516B     	 ldr r1,[r2,#52]
 4991 0136 7A69     	 ldr r2,[r7,#20]
 4992 0138 D243     	 mvns r2,r2
 4993 013a 0A40     	 ands r2,r2,r1
 4994 013c 5A63     	 str r2,[r3,#52]
 4995              	.L287:
1576:../Libraries/XMCLib/src/xmc_usbd.c ****       }
1577:../Libraries/XMCLib/src/xmc_usbd.c ****     }
1578:../Libraries/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 4996              	 .loc 1 1578 0
 4997 013e 0A4B     	 ldr r3,.L289
 4998 0140 D3F8A431 	 ldr r3,[r3,#420]
 4999 0144 FA68     	 ldr r2,[r7,#12]
 5000 0146 DA61     	 str r2,[r3,#28]
1579:../Libraries/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 5001              	 .loc 1 1579 0
 5002 0148 BB69     	 ldr r3,[r7,#24]
 5003 014a 9B88     	 ldrh r3,[r3,#4]
 5004 014c C3F38313 	 ubfx r3,r3,#6,#4
 5005 0150 DBB2     	 uxtb r3,r3
 5006 0152 1846     	 mov r0,r3
 5007 0154 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1580:../Libraries/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 5008              	 .loc 1 1580 0
 5009 0158 0023     	 movs r3,#0
 5010 015a FB77     	 strb r3,[r7,#31]
 5011              	.L283:
1581:../Libraries/XMCLib/src/xmc_usbd.c ****   }
1582:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5012              	 .loc 1 1582 0
 5013 015c FB7F     	 ldrb r3,[r7,#31]
1583:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5014              	 .loc 1 1583 0
 5015 015e 1846     	 mov r0,r3
 5016 0160 2037     	 adds r7,r7,#32
 5017              	.LCFI203:
 5018              	 .cfi_def_cfa_offset 8
 5019 0162 BD46     	 mov sp,r7
 5020              	.LCFI204:
 5021              	 .cfi_def_cfa_register 13
 5022              	 
 5023 0164 80BD     	 pop {r7,pc}
 5024              	.L290:
 5025 0166 00BF     	 .align 2
 5026              	.L289:
 5027 0168 00000000 	 .word xmc_device
 5028 016c 00000000 	 .word usbd_init
 5029              	 .cfi_endproc
 5030              	.LFE188:
 5032              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 5033              	 .align 2
 5034              	 .global XMC_USBD_GetFrameNumber
 5035              	 .thumb
 5036              	 .thumb_func
 5038              	XMC_USBD_GetFrameNumber:
 5039              	.LFB189:
1584:../Libraries/XMCLib/src/xmc_usbd.c **** 
1585:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1586:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1587:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1588:../Libraries/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1589:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5040              	 .loc 1 1589 0
 5041              	 .cfi_startproc
 5042              	 
 5043              	 
 5044              	 
 5045 0000 80B4     	 push {r7}
 5046              	.LCFI205:
 5047              	 .cfi_def_cfa_offset 4
 5048              	 .cfi_offset 7,-4
 5049 0002 83B0     	 sub sp,sp,#12
 5050              	.LCFI206:
 5051              	 .cfi_def_cfa_offset 16
 5052 0004 00AF     	 add r7,sp,#0
 5053              	.LCFI207:
 5054              	 .cfi_def_cfa_register 7
1590:../Libraries/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1591:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1592:../Libraries/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 5055              	 .loc 1 1592 0
 5056 0006 084B     	 ldr r3,.L293
 5057 0008 D3F8A431 	 ldr r3,[r3,#420]
 5058 000c 9B68     	 ldr r3,[r3,#8]
 5059 000e 3B60     	 str r3,[r7]
1593:../Libraries/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 5060              	 .loc 1 1593 0
 5061 0010 3B68     	 ldr r3,[r7]
 5062 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 5063 0016 9BB2     	 uxth r3,r3
 5064 0018 FB80     	 strh r3,[r7,#6]
1594:../Libraries/XMCLib/src/xmc_usbd.c ****   return result;
 5065              	 .loc 1 1594 0
 5066 001a FB88     	 ldrh r3,[r7,#6]
1595:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5067              	 .loc 1 1595 0
 5068 001c 1846     	 mov r0,r3
 5069 001e 0C37     	 adds r7,r7,#12
 5070              	.LCFI208:
 5071              	 .cfi_def_cfa_offset 4
 5072 0020 BD46     	 mov sp,r7
 5073              	.LCFI209:
 5074              	 .cfi_def_cfa_register 13
 5075              	 
 5076 0022 5DF8047B 	 ldr r7,[sp],#4
 5077              	.LCFI210:
 5078              	 .cfi_restore 7
 5079              	 .cfi_def_cfa_offset 0
 5080 0026 7047     	 bx lr
 5081              	.L294:
 5082              	 .align 2
 5083              	.L293:
 5084 0028 00000000 	 .word xmc_device
 5085              	 .cfi_endproc
 5086              	.LFE189:
 5088              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 5089              	 .align 2
 5090              	 .global XMC_USBD_IsEnumDone
 5091              	 .thumb
 5092              	 .thumb_func
 5094              	XMC_USBD_IsEnumDone:
 5095              	.LFB190:
1596:../Libraries/XMCLib/src/xmc_usbd.c **** 
1597:../Libraries/XMCLib/src/xmc_usbd.c **** /**
1598:../Libraries/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1599:../Libraries/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1600:../Libraries/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1601:../Libraries/XMCLib/src/xmc_usbd.c ****  **/
1602:../Libraries/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1603:../Libraries/XMCLib/src/xmc_usbd.c **** {
 5096              	 .loc 1 1603 0
 5097              	 .cfi_startproc
 5098              	 
 5099              	 
 5100              	 
 5101 0000 80B4     	 push {r7}
 5102              	.LCFI211:
 5103              	 .cfi_def_cfa_offset 4
 5104              	 .cfi_offset 7,-4
 5105 0002 00AF     	 add r7,sp,#0
 5106              	.LCFI212:
 5107              	 .cfi_def_cfa_register 7
1604:../Libraries/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 5108              	 .loc 1 1604 0
 5109 0004 0B4B     	 ldr r3,.L299
 5110 0006 93F8FE31 	 ldrb r3,[r3,#510]
 5111 000a 03F00103 	 and r3,r3,#1
 5112 000e DBB2     	 uxtb r3,r3
 5113 0010 002B     	 cmp r3,#0
 5114 0012 09D0     	 beq .L296
 5115              	 .loc 1 1604 0 is_stmt 0 discriminator 1
 5116 0014 074B     	 ldr r3,.L299
 5117 0016 93F8FE31 	 ldrb r3,[r3,#510]
 5118 001a 03F00403 	 and r3,r3,#4
 5119 001e DBB2     	 uxtb r3,r3
 5120 0020 002B     	 cmp r3,#0
 5121 0022 01D0     	 beq .L296
 5122              	 .loc 1 1604 0 discriminator 3
 5123 0024 0123     	 movs r3,#1
 5124 0026 00E0     	 b .L297
 5125              	.L296:
 5126              	 .loc 1 1604 0 discriminator 4
 5127 0028 0023     	 movs r3,#0
 5128              	.L297:
1605:../Libraries/XMCLib/src/xmc_usbd.c **** }
 5129              	 .loc 1 1605 0 is_stmt 1 discriminator 6
 5130 002a 1846     	 mov r0,r3
 5131 002c BD46     	 mov sp,r7
 5132              	.LCFI213:
 5133              	 .cfi_def_cfa_register 13
 5134              	 
 5135 002e 5DF8047B 	 ldr r7,[sp],#4
 5136              	.LCFI214:
 5137              	 .cfi_restore 7
 5138              	 .cfi_def_cfa_offset 0
 5139 0032 7047     	 bx lr
 5140              	.L300:
 5141              	 .align 2
 5142              	.L299:
 5143 0034 00000000 	 .word xmc_device
 5144              	 .cfi_endproc
 5145              	.LFE190:
 5147              	 .text
 5148              	.Letext0:
 5149              	 .file 2 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5150              	 .file 3 "c:\\davev4-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5151              	 .file 4 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 5152              	 .file 5 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 5153              	 .file 6 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc4_scu.h"
 5154              	 .file 7 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/XMCLib/inc/xmc_usbd.h"
 5155              	 .file 8 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Include/core_cm4.h"
 5156              	 .file 9 "C:/Workspaces/DAVE-4.4.2-64Bit/fh-kaernten/DAVE_M2M_1/XMC4500_MTSR_Start_002/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:23     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:20     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:30     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:27     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                            *COM*:00000208 xmc_device
    {standard input}:38     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:35     USB_RAM:00000000 $d
    {standard input}:44     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
                            *COM*:00000004 usbd_init
    {standard input}:52     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:49     .rodata.Driver_USBD0:00000000 $d
    {standard input}:2968   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:3053   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3395   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3456   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3516   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3576   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:3992   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4376   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:4816   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:4065   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3652   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3765   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:3865   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4269   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:5038   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:5094   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:70     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:75     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:161    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:166    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:170    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:330    .text.XMC_USBD_lReadFifo:000000e4 $d
    {standard input}:335    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:339    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:461    .text.XMC_USBD_lWriteFifo:000000a0 $d
    {standard input}:466    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:470    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:566    .text.XMC_USBD_lFlushTXFifo:00000080 $d
    {standard input}:571    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:575    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:659    .text.XMC_USBD_lFlushRXFifo:00000064 $d
    {standard input}:664    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:668    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:758    .text.XMC_USBD_lAssignTXFifo:0000006c $d
    {standard input}:763    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:767    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:815    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:820    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:824    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:1038   .text.XMC_USBD_lStartReadXfer:00000170 $d
    {standard input}:1044   .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1048   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1273   .text.XMC_USBD_lStartWriteXfer:0000018c $d
    {standard input}:1279   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1283   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2856   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:2912   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2545   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1487   .text.XMC_USBD_lHandleUSBReset:00000148 $d
    {standard input}:1492   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1496   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2687   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1551   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1556   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1560   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1636   .text.XMC_USBD_lHandleEnumDone:00000074 $d
    {standard input}:1641   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1645   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2798   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:1901   .text.XMC_USBD_lHandleOEPInt:000001b4 $d
    {standard input}:1906   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:1910   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2742   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2167   .text.XMC_USBD_lHandleIEPInt:000001b4 $d
    {standard input}:2172   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2176   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2209   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2215   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2260   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2265   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2270   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2467   .text.XMC_USBD_IRQHandler:00000148 $d
    {standard input}:2472   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2477   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2501   .text.XMC_USBD_Enable:00000010 $d
    {standard input}:2506   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2511   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2535   .text.XMC_USBD_Disable:00000010 $d
    {standard input}:2540   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2575   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2589   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2678   .text.XMC_USBD_ClearEvent:000000c4 $d
    {standard input}:2683   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2732   .text.XMC_USBD_lClearEventOTG:00000024 $d
    {standard input}:2737   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2788   .text.XMC_USBD_ClearEventINEP:00000028 $d
    {standard input}:2793   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2846   .text.XMC_USBD_ClearEventOUTEP:0000002c $d
    {standard input}:2851   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:2902   .text.XMC_USBD_EnableEventOUTEP:0000002c $d
    {standard input}:2907   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:2958   .text.XMC_USBD_EnableEventINEP:0000002c $d
    {standard input}:2963   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:3048   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3382   .text.XMC_USBD_Init:0000022c $d
    {standard input}:3390   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3446   .text.XMC_USBD_Uninitialize:00000038 $d
    {standard input}:3451   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3506   .text.XMC_USBD_DeviceConnect:00000030 $d
    {standard input}:3511   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3566   .text.XMC_USBD_DeviceDisconnect:00000030 $d
    {standard input}:3571   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3642   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3647   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3755   .text.XMC_USBD_EndpointReadStart:00000088 $d
    {standard input}:3760   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:3855   .text.XMC_USBD_EndpointRead:00000074 $d
    {standard input}:3860   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:3982   .text.XMC_USBD_EndpointWrite:000000a4 $d
    {standard input}:3987   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:4055   .text.XMC_USBD_DeviceSetAddress:00000048 $d
    {standard input}:4060   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4259   .text.XMC_USBD_EndpointStall:00000148 $d
    {standard input}:4264   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4366   .text.XMC_USBD_EndpointAbort:00000084 $d
    {standard input}:4371   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:4737   .text.XMC_USBD_EndpointConfigure:00000274 $d
    {standard input}:4744   .text.XMC_USBD_EndpointConfigure:00000288 $t
    {standard input}:4806   .text.XMC_USBD_EndpointConfigure:000002f0 $d
    {standard input}:4811   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:5027   .text.XMC_USBD_EndpointUnconfigure:00000168 $d
    {standard input}:5033   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:5084   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:5089   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:5143   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_POWER_DisableUsb
memset
memcpy
